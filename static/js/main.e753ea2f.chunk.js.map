{"version":3,"sources":["components/ThemeProvider/FontSizeContext.js","components/ThemeProvider/theme.js","components/ThemeProvider/global-styles.js","components/utils/blacklist.js","components/utils/injectProps.js","components/Box.js","components/ThemeProvider/index.js","utils/request.js","services/api/config.js","services/api/constants.js","services/api/reducer.js","services/api/sagas.js","stores/reducers.js","with-provider.js","stores/createStore.js","components/Container.js","components/Flex.js","components/Text.js","components/utils/getColor.js","components/Button.js","components/YearButton.js","components/Toggler.js","components/Dropdown.js","hoc/withResponsive.js","components/Circle.js","components/Modal.js","components/ModalButton.js","utils/checkStore.js","utils/reducerInjectors.js","utils/injectReducer.js","services/api/withData.js","services/api/withDataState.js","containers/Layout/index.js","components/Charts/ChartBase.js","components/Charts/LineBreakText.js","containers/HomePage/InfoSection.js","containers/HomePage/BubbleLine.js","components/Charts/TweenShape.js","containers/HomePage/TypeDonut.js","containers/HomePage/PercentBars.js","services/api/withLawData.js","containers/HomePage/LawTops.js","containers/HomePage/YearChart.js","containers/HomePage/AvgDays.js","containers/HomePage/YearByYear/IssuedChart.js","containers/HomePage/YearByYear/ReceivedChart.js","containers/HomePage/dataHandler.js","containers/HomePage/YearByYear/index.js","containers/HomePage/LastUpdated.js","containers/HomePage/index.js","services/api/withBureauData.js","App.js","index.js"],"names":["createContext","emToPx","em","breakpoints","map","containerWidth","mobileOrDesktop","mobile","desktop","generateFade","r","g","b","range","reduce","fade","opacity","merge","join","spectrum","orange","darkOrange","lightOrange","darkRed","oranges","o","c","i","colors","white","black","gray","dropdownBg","lightGray","darkGray","darkBlue","darkerBlue","text","primary","primaryHover","font","headerHeight","zOrder","gradients","none","backgroundImage","color","createGlobalStyle","theme","injectProps","key","options","style","prop","cssProperty","getConfig","Box","styled","tag","space","layout","position","typography","zIndex","border","flex","borderRadius","variant","scale","onClick","defaultProps","blacklist","displayName","inline","forwardRef","props","ref","is","display","verticalAlign","children","width","size","fontSize","Math","round","max","FontSizeContext","Provider","value","parseJSON","response","status","json","checkStatus","error","Error","statusText","request","url","fetch","then","API_BASE","STATUS_LOADING","STATUS_LOADED","STATUS_ERROR","GET_DATA","getData","createAction","receivedDataSuccess","receivedDataError","initialState","fromJS","reducer","handleActions","state","payload","setIn","data","handleRequest","handleManualRead","handleRead","apiSagas","processData","target","onSuccess","onError","call","sendRequest","res","put","console","params","qs","isObject","q","encodeURIComponent","resourceBase","resourceType","resources","requestKey","requestParams","all","id","type","actionTypes","READ_RESOURCES_SUCCEEDED","READ_RESOURCES_FAILED","takeEvery","READ_RESOURCES_PENDING","names","createReducer","injectedReducers","combineReducers","browser","createResponsiveStateReducer","fromPairs","zip","bp","parseInt","api","store","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","createResponsiveStoreEnhancer","calculateInitialState","composeEnhancers","compose","createStore","runSaga","run","creatStore","window","__ID","location","search","exec","decodeURIComponent","InitialDispatch","dispatch","calculateResponsiveState","this","Component","Container","mx","px","Flex","flexbox","Text","bold","fontWeight","thin","forEach","h","customColor","active","css","buttonStyle","borderColor","themeGet","disabled","ButtonBase","InButtonSpan","Button","leftIcon","rightIcon","iconSpacing","mr","ml","bg","gradient","hoverColor","hoverBg","hoverBgImg","hoverBorder","py","lightBg","outline","transparent","YearButton","handleNextYear","newYear","activeYear","setState","onChange","years","handleLastYear","currentYear","darkBg","alignItems","createElement","length","prevState","findIndex","y","PureComponent","Toggler","poses","handleBound","bounds","every","Boolean","activeIndex","onToggle","Consumer","left","top","bottom","transition","transform","label","onResize","measureRef","StyledDropdown","Dropdown","CustomDropdown","isMobile","onBlur","placeholder","name","concat","withResponsive","WrappedComp","connect","get","lessThan","md","Circle","pt","right","lineHeight","defaultStyles","overlay","backgroundColor","content","marginRight","padding","overflow","Modal","setAppElement","customStyles","title","justifyContent","pb","borderBottom","letterSpacing","p","onRequestClose","m","ModalButton","openModal","open","closeModal","isOpen","checkStore","shape","isFunction","subscribe","getState","replaceReducer","invariant","conformsTo","injectReducerFactory","isValid","isString","isEmpty","Reflect","has","WrappedComponent","ReducerInjector","injectors","context","injectReducer","React","contextType","ReactReduxContext","hoistNonReactStatics","ids","isArray","isNumber","listMode","SIG","md5","JSON","stringify","SubComp","WithData","skip","checkIsPending","checkIsDone","undefined","setTimeout","resync","updateParams","requestStatuses","PENDING","SUCCEEDED","FAILED","textAlign","my","withReducer","resourceReducer","comp","getIn","bindActionCreators","Layout","height","minWidth","ChartBase","dimensions","handleResize","debounce","ratio","LineBreakText","x","maxLength","lineBefore","fillFront","verticalCenter","lines","str","strArr","Array","from","reverse","st","substr","backwardAutoLineBreak","lineCount","yPos","texts","w","yStart","min","yEnd","fill","num","format","InfoSection","xEnd","main","sub","mainYStart","subYStart","mainValueStart","unit","mainLabelStart","toString","subValueStart","subLabelStart","labelStart","x1","x2","y1","y2","stroke","strokeWidth","textAnchor","emPercent","n","canGoDown","BubbleLine","wrapper","createRef","handleTooltip","event","xScale","localPoint","d","invert","activeId","handleClick","lockId","onLock","sortBy","sortOrder","namedData","sortedData","loSortBy","rLabelHeight","rMax","leftLabelWidth","xStart","lableY","rateY","dollarRateY","scaleLinear","domain","rScale","scalePower","issued","exponent","to","vertical","orange6","orange2","orange4","toOpacity","rx","strokeLinecap","start","update","timing","duration","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","keyAccessor","cx","otherOpacity","centerR","enter","centerActive","leave","nodes","cy","pointerEvents","receiveRate","receiveDollarRate","HoverSensor","isHover","boxHeight","boxWidth","cursor","createPortal","points","orange3","current","sum","issuedDollar","received","receivedDollar","canceled","nd","animate","requestAnimationFrame","TWEEN","TweenShape","pathRef","updatePath","parsed","SVGPathData","toAbs","commands","tweens","index","prevParsed","toValues","pickBy","tween","Tween","mapValues","v","k","easing","Easing","Quadratic","InOut","onUpdate","handleUpdate","tick","doUpdatePath","setAttribute","encodeSVGPath","stop","TypeDonut","outerShapes","handleOuterShape","legends","onLegendClick","activeLegend","valueGetter","outerCircle","showLegend","showLabel","showPercentage","totalVaue","dataLength","labelLength","getColorByName","getIndexByName","donutR","legendBottom","legend","pieValue","outerRadius","innerRadius","padAngle","pieSort","a","pie","arcs","arc","path","sideOrders","scaleLabelY","sides","groupBy","centroid","side","sign","distanceX","abs","distanceY","sideGroups","so","s","ss","sorted","sort","slice","otherI","scaleBand","centroidX","centroidY","startAngle","hasSpaceForLabel","endAngle","dy","bandwidth","centX","centY","breakX","floor","cn","l","pd","PercentBars","dataByKey","dk","legendsLength","withData","LawTops","prevProps","year","hasLine","count","law","withLawData","xValue","month","yValue","YearChart","formattedData","receivedRate","yHeight","paddingInner","paddingOuter","percentYScale","valueYScale","ceil","barWidth","yScale","numTicksRows","numTicksColumns","columnLineStyle","numTicks","tickStroke","tickLabelProps","dx","tickFormat","dd","xPos","barHeight","dotY","barY","dotX","AvgDays","avgDays","TooltipBox","yCancealedValue","IssuedChart","showTooltip","step","tooltipData","Object","assign","canceledTop","tooltipLeft","tooltipTop","xTickFormat","hideTooltip","showTooltop","events","scalePoint","yMax","z","getZeros","dotCanceledY","whiteSpace","mb","withTooltip","ReceivedChart","keys","getMonthData","activeType","monthData","types","parseData","initial","va","vv","YearByYear","chartType","timeType","handleToggle","fd","push","quarter","nextProps","withDataState","LastUpdated","lastUpdated","IndexPage","chartIndex","lawType","typeLegends","last","yearsList","handleTypeFilter","handleChartToggle","handleYearChange","setLawType","setLock","handleReset","typeList","mappedData","bureauTotal","allData","getBureauTotal","values","allTypes","getTypes","pl","pr","borderRight","nexProps","t","td","log","App","HomePage","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"+QAEeA,0BAAc,I,6QCC7B,IAAMC,EAAS,SAACC,GAAD,gBAAgB,GAALA,EAAX,OAEFC,EAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAKC,IAAIH,GAC5CI,EAAiB,CAAC,GAAI,GAAI,GAAI,IAAID,IAAIH,GACtCK,EAAkB,SAACC,EAAQC,GAAT,MAAqB,CAACD,EAAQ,KAAM,KAAMC,IAEnEC,EAAe,SAACC,EAAGC,EAAGC,GAAP,OAAaC,IAAM,GAAI,IAAK,IAC9CC,OAAO,SAACC,EAAMC,GAAP,OAAmBC,IAAMF,EAAD,eAAUC,EAAV,eAA4B,CAACN,EAAGC,EAAGC,EAAGI,EAAU,KAAKE,OAArD,QAAmE,KAK/FC,EAAW,CACf,UACA,UACA,UACA,UACA,UACA,WAaIC,EAASD,EAAS,GAClBE,EAAaF,EAAS,GACtBG,EAAcH,EAAS,GACvBI,EAAUJ,EAAS,GACnBK,EAAUL,EAASL,OAAO,SAACW,EAAGC,EAAGC,GAErC,OADAF,EAAE,SAAD,OAAUE,EAAI,IAAOD,EACfD,GACN,IAGY,GACbG,O,qVAAO,CAAD,CACJC,MAlBU,OAmBVC,MAlBU,OAmBVC,KAjBS,UAkBTC,WAvBe,UAwBfC,UAlBc,UAmBdC,SAlBa,UAmBbC,SA5Ba,UA6BbC,WA5Be,UA6BfhB,SACAC,aACAC,cACAC,UACAc,KA5BS,UA6BTC,QAjBYlB,EAkBZmB,aAAclB,EACdF,YACGK,EAjBC,CAkBJT,KAAM,CACJc,MAAOpB,EAAa,IAAK,IAAK,KAC9BqB,MAAOrB,EAAa,EAAG,EAAG,MAG9BN,cACAE,iBACAmC,KAzDW,gFA0DXC,aAAc,MACdnC,kBACAoC,OAAQ7B,IAAM,GAAGT,IAAI,SAACuB,GAAD,gBAAO,GAAMA,KAClCgB,UAAW,CACTC,KAAM,GACNT,SAAU,CACRU,gBAAgB,6BAAD,OArDJ,UAqDI,aApDF,UAoDE,KACfC,MAlDQ,U,qQCxBCC,kBAAf,IAGmBC,EAAMR,KAGZQ,EAAMpB,OAAOS,M,wBCiFZ,YA3FG,CACf,SACA,IACA,YACA,KACA,eACA,KACA,aACA,KACA,cACA,KACA,KACA,KACA,UACA,IACA,aACA,KACA,gBACA,KACA,cACA,KACA,eACA,KACA,KACA,KACA,QACA,WACA,aACA,aACA,aACA,YACA,YACA,gBACA,UACA,WACA,WACA,SACA,YACA,YACA,QACA,kBACA,KACA,gBACA,aACA,eACA,eACA,iBACA,WACA,YACA,gBACA,OACA,cACA,YACA,QACA,UACA,gBACA,aACA,aACA,UACA,eACA,kBACA,eACA,sBACA,mBACA,oBACA,WACA,SACA,cACA,cACA,cACA,YACA,cACA,eACA,aACA,eACA,YACA,UACA,WACA,aACA,kBACA,iBACA,qBACA,mBACA,WACA,SACA,MACA,QACA,SACA,QAGF,CAEE,YACA,aACA,WACA,UACA,QACA,aACA,UACA,cACA,aACA,SACA,gBACA,aACA,WACA,WACA,UACA,aClGaY,EAFK,SAACC,EAAKC,GAAN,OAAkBC,YALpB,SAACF,EAAKC,GAAN,OAAkBlC,IAAM,CACxCoC,KAAMH,EACNI,YAAaJ,GACZC,GAEyCI,CAAUL,EAAKC,K,4MCc3D,IAAMK,EAAMC,YAAOC,IAAPD,CAAH,IACLE,IACAC,IACAC,IACAC,IACAhB,IACAe,IACAE,IACAC,IACAC,IACAC,IACAlD,IACA6B,IACAsB,YAAQ,CAAEC,MAAO,YAAaf,KAAM,aACpCJ,EAAY,cACZA,EAAY,YACZA,EAAY,aACZA,EAAY,cACZG,YAAM,CACNC,KAAM,SACNC,YAAa,SACbJ,IAAK,WAEL,qBAAGmB,SAAyB,qBAGhCb,EAAIc,aAAe,CACjBC,aAGFf,EAAIgB,YAAc,MAElBhB,EAAIiB,OAASC,qBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAACpB,EAAD,eAAKqB,GAAG,OAAOD,IAAKA,EAAKE,QAAQ,eAAeC,cAAc,UAAaJ,MAEpGnB,QC7CA,kBAAGwB,EAAH,EAAGA,SAAH,OACb,kBAAC,IAAD,CAAehC,MAAOA,GACpB,kBAAC,WAAD,KACE,kBAAC,SAAD,KACG,YAA0B,IAAfiC,EAAc,EAAtBC,KAAQD,MACJE,EAAWC,KAAKC,MAAMD,KAAKE,IAAIL,EAAO,KAAO,IACnD,OACE,k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","file":"static/js/main.e753ea2f.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport default createContext({})\n","import merge from 'lodash/merge';\nimport range from 'lodash/range';\n\nconst emToPx = (em) => `${em * 16}px`;\n\nexport const breakpoints = [22, 36, 48, 62, 90, 120].map(emToPx);\nexport const containerWidth = [22, 36, 46, 58].map(emToPx);\nexport const mobileOrDesktop = (mobile, desktop) => [mobile, null, null, desktop];\n\nconst generateFade = (r, g, b) => range(10, 100, 10)\n  .reduce((fade, opacity) => merge(fade, { [opacity]: `rgba(${[r, g, b, opacity / 100].join()})` }), {});\n\n\nconst font = 'Comfortaa, Arial, \"PingFang TC\", \"HeiTi TC\", \"Microsoft JhengHei\", sans-serif';\n\nconst spectrum = [\n  '#9e7961',\n  '#f2bc4a',\n  '#ec921e',\n  '#ec6432',\n  '#d53d1f',\n  '#af1b08',\n]\n\nconst darkBlue = '#2d3555'\nconst darkerBlue = '#171835'\nconst dropdownBg = '#E7EAF6'\n\nconst white = '#fff';\nconst black = '#000';\nconst text = '#040000';\nconst gray = '#7d7e80'\nconst lightGray = '#c9caca'\nconst darkGray = '#4c4948'\nconst orange = spectrum[2]\nconst darkOrange = spectrum[4]\nconst lightOrange = spectrum[1]\nconst darkRed = spectrum[5]\nconst oranges = spectrum.reduce((o, c, i) => {\n  o[`orange${i + 1}`] = c;\n  return o\n}, {});\nconst primary = orange;\n\nexport default {\n  colors: {\n    white,\n    black,\n    gray,\n    dropdownBg,\n    lightGray,\n    darkGray,\n    darkBlue,\n    darkerBlue,\n    orange,\n    darkOrange,\n    lightOrange,\n    darkRed,\n    text,\n    primary,\n    primaryHover: darkOrange,\n    spectrum,\n    ...oranges,\n    fade: {\n      white: generateFade(255, 255, 255),\n      black: generateFade(0, 0, 0),\n    },\n  },\n  breakpoints,\n  containerWidth,\n  font,\n  headerHeight: '5em',\n  mobileOrDesktop,\n  zOrder: range(4).map((i) => 10 ** i),\n  gradients: {\n    none: {},\n    darkBlue: {\n      backgroundImage: `linear-gradient(to right, ${darkBlue}, ${darkerBlue})`,\n      color: white,\n    },\n  }\n};\n","import { createGlobalStyle } from 'styled-components';\n\nimport theme from './theme';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Comfortaa:400,700&display=swap');\n  body {\n    font-family: ${theme.font};\n    min-width: 100%;\n    min-height: 100%;\n    color: ${theme.colors.text};\n  }\n`;\n","const allProps = [\n  'margin',\n  'm',\n  'marginTop',\n  'mt',\n  'marginBottom',\n  'mb',\n  'marginLeft',\n  'ml',\n  'marginRight',\n  'mr',\n  'mx',\n  'my',\n  'padding',\n  'p',\n  'paddingTop',\n  'pt',\n  'paddingBottom',\n  'pb',\n  'paddingLeft',\n  'pl',\n  'paddingRight',\n  'pr',\n  'px',\n  'py',\n  'width',\n  'fontSize',\n  'fontFamily',\n  'fontWeight',\n  'lineHeight',\n  'textAlign',\n  'fontStyle',\n  'letterSpacing',\n  'display',\n  'maxWidth',\n  'minWidth',\n  'height',\n  'maxHeight',\n  'minHeight',\n  'color',\n  'backgroundColor',\n  'bg',\n  'verticalAlign',\n  'alignItems',\n  'alignContent',\n  'justifyItems',\n  'justifyContent',\n  'flexWrap',\n  'flexBasis',\n  'flexDirection',\n  'flex',\n  'justifySelf',\n  'alignSelf',\n  'order',\n  'gridGap',\n  'gridColumnGap',\n  'gridRowGap',\n  'gridColumn',\n  'gridRow',\n  'gridAutoFlow',\n  'gridAutoColumns',\n  'gridAutoRows',\n  'gridTemplateColumns',\n  'gridTemplateRows',\n  'gridTemplateAreas',\n  'gridArea',\n  'border',\n  'borderWidth',\n  'borderStyle',\n  'borderColor',\n  'borderTop',\n  'borderRight',\n  'borderBottom',\n  'borderLeft',\n  'borderRadius',\n  'boxShadow',\n  'opacity',\n  'overflow',\n  'background',\n  'backgroundImage',\n  'backgroundSize',\n  'backgroundPosition',\n  'backgroundRepeat',\n  'position',\n  'zIndex',\n  'top',\n  'right',\n  'bottom',\n  'left',\n];\n\nexport default [\n  ...allProps,\n  'transform',\n  'transition',\n  'overflow',\n  'opacity',\n  'alpha',\n  'hoverColor',\n  'hoverBg',\n  'hoverBorder',\n  'hoverBgImg',\n  'zOrder',\n  'verticalAlign',\n  'whiteSpace',\n  'dispatch',\n  'isMobile',\n  'browser',\n  'gradient',\n];\n","import merge from 'lodash/merge';\r\nimport { style } from 'styled-system';\r\n\r\nconst getConfig = (key, options) => merge({\r\n  prop: key,\r\n  cssProperty: key,\r\n}, options);\r\n\r\nconst injectProps = (key, options) => style(getConfig(key, options));\r\n\r\nexport default injectProps;\r\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport tag from 'clean-tag';\nimport {\n  space,\n  layout,\n  typography,\n  position,\n  color,\n  borderRadius,\n  zIndex,\n  border,\n  flex,\n  opacity,\n  style,\n  backgroundImage,\n  variant,\n} from 'styled-system';\n\nimport blacklist from './utils/blacklist';\nimport injectProps from './utils/injectProps';\n\nconst Box = styled(tag)`\n  ${space}\n  ${layout}\n  ${position}\n  ${typography}\n  ${color}\n  ${position}\n  ${zIndex}\n  ${border}\n  ${flex}\n  ${borderRadius}\n  ${opacity}\n  ${backgroundImage}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${injectProps('whiteSpace')}\n  ${injectProps('overflow')}\n  ${injectProps('transform')}\n  ${injectProps('transition')}\n  ${style({\n    prop: 'zOrder',\n    cssProperty: 'zIndex',\n    key: 'zOrder',\n  })}\n  ${({ onClick }) => onClick && 'cursor: pointer;'}\n`;\n\nBox.defaultProps = {\n  blacklist,\n};\n\nBox.displayName = 'Box';\n\nBox.inline = forwardRef((props, ref) => <Box is=\"span\" ref={ref} display=\"inline-block\" verticalAlign=\"middle\" {...props} />);\n\nexport default Box;\n","import React, { Fragment } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport 'sanitize.css';\nimport { SizeMe } from 'react-sizeme'\n\nimport FontSizeContext from './FontSizeContext'\nimport GlobalStyles from './global-styles';\n\nimport theme from './theme';\nimport Box from '../Box';\n\nexport default ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <Fragment>\n      <SizeMe>\n        {({ size: { width } }) => {\n          const fontSize = Math.round(Math.max(width, 800) / 94)\n          return (\n            <FontSizeContext.Provider value={{ em: fontSize }}>\n              <Box fontSize={fontSize}>\n                {children}\n              </Box>\n            </FontSizeContext.Provider>\n          )\n        }}\n      </SizeMe>\n      <GlobalStyles />\n    </Fragment>\n  </ThemeProvider>\n);\n","/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}\n","const BASE_URI = 'https://relab.cc/law-api-test/v2';\n\n// const BASE = process.env.NODE_ENV === 'production' ? BASE_URI : BASE_URI_LOCAL;\n\nexport const API_BASE = BASE_URI;\n","export const STATUS_LOADING = 'STATUS_LOADING';\nexport const STATUS_LOADED = 'STATUS_LOADED';\nexport const STATUS_ERROR = 'STATUS_ERROR';\n","import { fromJS } from 'immutable';\nimport { createAction, handleActions } from 'redux-actions'\n\nimport {\n  STATUS_ERROR,\n  STATUS_LOADED,\n  STATUS_LOADING,\n} from './constants'\n\nexport const GET_DATA = 'API/GET_DATA'\n\nexport const getData = createAction(GET_DATA)\nexport const receivedDataSuccess = createAction('API/RECEIVED_DATA_SUCCESS')\nexport const receivedDataError = createAction('API/RECEIVED_DATA_ERROR')\n\nconst initialState = fromJS({})\n\nconst reducer = handleActions({\n  [getData]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_LOADING),\n  [receivedDataSuccess]: (state, { payload: { key, data } }) => state\n    .setIn([key, 'status'], STATUS_LOADED)\n    .setIn([key, 'data'], data),\n  [receivedDataError]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_ERROR),\n}, initialState)\n\nexport default reducer\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { actionTypes } from 'redux-resource';\nimport reduce from 'lodash/reduce'\nimport isObject from 'lodash/isObject'\n\nimport sendRequest from '../../utils/request';\n\nimport { API_BASE } from './config';\nimport { GET_DATA, receivedDataSuccess, receivedDataError } from './reducer';\n\nconst processData = data => data\n\nfunction* handleRequest(target, onSuccess, onError) {\n  try {\n    const res = yield call(sendRequest, target);\n    yield put(onSuccess(res));\n  } catch (error) {\n    console.error(error)\n    yield put(onError(error));\n  }\n}\n\nfunction* handleManualRead({ payload: { key, params } }) {\n  const qs = isObject(params) ? reduce(params, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\n  const resourceBase = `${API_BASE}/${key}${qs}`;\n  yield call(\n    handleRequest,\n    resourceBase,\n    (data) => receivedDataSuccess({\n      key,\n      data,\n    }),\n    // onError\n    () => receivedDataError({ key }),\n  );\n}\n\nfunction* handleRead({ resourceType, resources, requestKey, requestParams }) {\n  const qs = isObject(requestParams) ? reduce(requestParams, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\n  const resourceBase = `${API_BASE}/${resourceType}${qs}`;\n  if (resources) {\n    yield all(\n      resources.map(id =>\n        call(\n          handleRequest,\n          // target\n          `${resourceBase}/${id}`,\n          // onSuccess\n          data => ({\n            type: actionTypes.READ_RESOURCES_SUCCEEDED,\n            resourceType,\n            resources: [processData(data)],\n          }),\n          // onError\n          () => ({\n            type: actionTypes.READ_RESOURCES_FAILED,\n            resourceType,\n            resources: [id],\n          }),\n        ),\n      ),\n    );\n  } else {\n    yield call(\n      handleRequest,\n      resourceBase,\n      ({ data }) => ({\n        type: actionTypes.READ_RESOURCES_SUCCEEDED,\n        resourceType,\n        resources: data.map(processData),\n        requestKey,\n      }),\n      // onError\n      () => ({\n        type: actionTypes.READ_RESOURCES_FAILED,\n        resourceType,\n        requestKey,\n      }),\n    );\n  }\n}\n\nexport default function* apiSagas() {\n  yield all([\n    takeEvery(actionTypes.READ_RESOURCES_PENDING, handleRead),\n    takeEvery(GET_DATA, handleManualRead),\n  ]);\n}\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux-immutable';\nimport fromPairs from 'lodash/fromPairs';\nimport zip from 'lodash/zip';\nimport { createResponsiveStateReducer } from 'redux-responsive';\n\nimport { breakpoints } from '../components/ThemeProvider/theme';\nimport api from '../services/api/reducer'\n\nconst names = [\n  'xxs',\n  'xs',\n  'sm',\n  'md',\n  'lg',\n  'xl',\n];\n\n/**\n * Creates the main reducer with the dynamically injected ones\n */\nexport default function createReducer(injectedReducers) {\n  return combineReducers({\n    browser: createResponsiveStateReducer(fromPairs(zip(names, breakpoints.map((bp) => parseInt(bp, 10) - 1)))),\n    api,\n    ...injectedReducers,\n  });\n}\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux';\nimport { calculateResponsiveState } from 'redux-responsive'\n\nimport ThemeProvider from './components/ThemeProvider';\nimport creatStore from './stores/createStore';\n\nconst store = creatStore();\n\nwindow.__ID = '00000000'\nif (window.location.search) {\n  const res = /bureauId=([^&]+)/g.exec(window.location.search)\n  if (res && res[1]) {\n    window.__ID = decodeURIComponent(res[1])\n  }\n}\n\nclass InitialDispatch extends Component {\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      store.dispatch(calculateResponsiveState(window))\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default ({ children }) => (\n  <Provider store={store}>\n    <InitialDispatch>\n      <ThemeProvider>{children}</ThemeProvider>\n    </InitialDispatch>\n  </Provider>\n)\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport { createResponsiveStoreEnhancer } from 'redux-responsive';\nimport createSagaMiddleware from 'redux-saga';\n\nimport apiSagas from '../services/api/sagas';\nimport createReducer from './reducers';\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    createResponsiveStoreEnhancer({ calculateInitialState: false }),\n  ];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers =\n    (process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n  /* eslint-enable */\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n\n  store.runSaga = sagaMiddleware.run;\n  sagaMiddleware.run(apiSagas);\n  store.injectedReducers = {}; // Reducer registry\n\n  return store;\n}\n","import React from 'react';\n\nimport Box from './Box';\n\nconst Container = (props) => <Box {...props} />;\n\nContainer.defaultProps = {\n  mx: 'auto',\n  px: ['1em', null, '2em'],\n  width: 1,\n};\n\nContainer.displayName = 'Container';\n\nexport default Container;\n","import { flexbox } from 'styled-system';\r\nimport styled from 'styled-components';\r\n\r\nimport Box from './Box';\r\nimport blacklist from './utils/blacklist'\r\n\r\nconst Flex = styled(Box)`\r\n  ${flexbox}\r\n`;\r\n\r\nFlex.defaultProps = {\r\n  display: 'flex',\r\n  blacklist,\r\n};\r\n\r\nFlex.displayName = 'Flex';\r\n\r\nexport default Flex;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport range from 'lodash/range';\r\nimport {\r\n  typography,\r\n  space,\r\n  color,\r\n  display,\r\n  position,\r\n} from 'styled-system';\r\nimport tag from 'clean-tag';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport injectProps from './utils/injectProps';\r\n\r\nconst Text = styled(tag)`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  ${typography}\r\n  ${display}\r\n  ${space}\r\n  ${color}\r\n  ${position}\r\n  ${injectProps('textTransform')}\r\n`;\r\n\r\nText.defaultProps = {\r\n  is: 'p',\r\n  fontSize: '1em',\r\n  // lineHeight: 1.5,\r\n  blacklist,\r\n};\r\n\r\nText.inline = (props) => <Text is=\"span\" {...props} />;\r\nText.bold = (props) => <Text fontWeight=\"bold\" {...props} />;\r\nText.thin = (props) => <Text fontWeight=\"200\" {...props} />;\r\n\r\nrange(1, 7).forEach((key) => {\r\n  const h = `h${key}`;\r\n  Text[h] = (props) => (\r\n    <Text\r\n      is={h}\r\n      fontSize={`${1 + ((6 - key) * 0.125)}em`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nText.displayName = 'Text';\r\n\r\nexport default Text;\r\n","import { style } from 'styled-system';\r\n\r\nexport const customColor = (prop, cssProperty = 'color') => style ({\r\n  prop,\r\n  cssProperty,\r\n  key: 'colors',\r\n});\r\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  border,\n  borderRadius,\n  backgroundImage,\n  position,\n  borderColor,\n  variant,\n} from 'styled-system';\nimport themeGet from '@styled-system/theme-get';\nimport tag from 'clean-tag';\n\nimport Box from './Box';\nimport theme from './ThemeProvider/theme';\n\nimport { customColor } from './utils/getColor';\nimport blacklist from './utils/blacklist';\n\nconst active = css`\n  ${customColor('hoverColor')};\n  ${customColor('hoverBg', 'backgroundColor')};\n  ${customColor('hoverBgImg', 'backgroundImage')};\n  ${customColor('hoverBorder', 'borderColor')};\n`;\n\nexport const buttonStyle = css`\n  padding: 0;\n  border: none;\n  font-family: inherit;\n  line-height: 1;\n  text-decoration: none;\n  ${typography}\n  ${layout}\n  ${position}\n  ${backgroundImage}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${space}\n  ${color}\n  ${border}\n  ${borderColor}\n  ${borderRadius}\n  appearance: none;\n  transition: all ${themeGet('duration', 250)}ms;\n  cursor: pointer;\n  &:hover {\n    ${props => !props.disabled && active}\n    outline: none;\n  }\n  ${props => props.active && !props.disabled && active}\n  ${props =>\n    props.disabled &&\n    `\n    cursor: not-allowed;\n    opacity: 0.5;\n  `}\n`;\n\nconst ButtonBase = styled(tag)`\n  ${buttonStyle};\n`;\n\nconst InButtonSpan = props => <Box is=\"span\" {...props} />;\n\nconst Button = ({\n  leftIcon,\n  rightIcon,\n  iconSpacing,\n  children,\n  verticalAlign,\n  ...props\n}) => (\n  <ButtonBase {...props}>\n    {leftIcon ? (\n      <Box is={leftIcon} mr={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n    <InButtonSpan verticalAlign={verticalAlign}>{children}</InButtonSpan>\n    {rightIcon ? (\n      <Box is={rightIcon} ml={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n  </ButtonBase>\n);\n\nButton.defaultProps = {\n  blacklist,\n  is: 'button',\n  border: '1px solid',\n  borderColor: 'darkBlue',\n  bg: 'darkBlue',\n  gradient: 'darkBlue',\n  color: 'white',\n  hoverColor: 'darkBlue',\n  hoverBg: 'white',\n  hoverBgImg: 'none',\n  hoverBorder: 'darkBlue',\n  px: '1.25em',\n  py: '0.5em',\n  fontWeight: 'bold',\n  iconSpacing: '0.25em',\n  borderRadius: '1.25em',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n};\n\nButton.displayName = 'Button';\n\nButton.lightBg = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"white\"\n    hoverColor=\"white\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    hoverBorder=\"white\"\n    {...props}\n  />\n);\n\nButton.border = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    borderColor=\"darkBlue\"\n    hoverColor=\"white\"\n    hoverBg=\"none\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    {...props}\n  />\n);\n\nButton.outline = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"primary\"\n    bg=\"transparent\"\n    color=\"primary\"\n    hoverColor=\"white\"\n    {...props}\n  />\n);\n\nButton.transparent = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid transparent\"\n    bg=\"transparent\"\n    color=\"text\"\n    hoverBorder=\"primary\"\n    {...props}\n  />\n);\n\nexport default Button;\n","import React, { createElement, PureComponent } from 'react';\nimport { IoMdArrowDropleft,  IoMdArrowDropright} from 'react-icons/io';\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Button from './Button'\n\nclass YearButton extends PureComponent {\n  static defaultProps = {\n    onChange: () => {},\n  }\n\n  static getDerivedStateFromProps({ currentYear, years }, prevState) {\n    return {\n      activeYear: typeof currentYear === 'undefined' ? years.length - 1 : years.findIndex(y => y === currentYear),\n    }\n  }\n\n  handleNextYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear + 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  handleLastYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear - 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  render() {\n    const { currentYear, years, darkBg, onChange, ...props} = this.props\n    const { activeYear } = this.state\n    return (\n      <Flex alignItems=\"center\" {...props}>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: !activeYear,\n          onClick: this.handleLastYear,\n        }, <IoMdArrowDropleft size=\"1.5em\" />)}\n        <Box px=\"1.5em\" py=\"0.375em\" border=\"1px solid\" mx=\"0.5em\" borderRadius=\"0.5em\">\n          {years[activeYear]}\n        </Box>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: activeYear === years.length - 1,\n          onClick: this.handleNextYear,\n        }, <IoMdArrowDropright size=\"1.5em\" />)}\n      </Flex>\n    );\n  }\n}\n\nexport default YearButton;\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\n\nimport FontSizeContext from './ThemeProvider/FontSizeContext'\nimport Box from './Box'\n\nclass Toggler extends PureComponent {\n  state = {\n    poses: this.props.options.map(() => ({}))\n  }\n\n  poses = []\n\n  handleBound = (i, bounds) => {\n    this.poses[i] = bounds\n    if (this.poses.every(Boolean) && this.poses.length === this.props.options.length) {\n      this.setState({ poses: this.poses })\n    }\n  }\n\n  render() {\n    const { options, activeIndex, onToggle, color, bg } = this.props\n    const { poses } = this.state;\n    return (\n      <FontSizeContext.Consumer>\n      {({ em }) => (\n        <Box borderRadius=\"1.5em\" bg={bg} px=\"0.5em\">\n          <Box position=\"relative\">\n            <Box\n              position=\"absolute\"\n              left={poses[activeIndex].left - poses[0].left - em * 0.65}\n              top=\"50%\"\n              bottom=\"0\"\n              width={poses[activeIndex].width + 1.3 * em}\n              transition=\"all 0.25s\"\n            >\n              <Box py=\"1.25em\" bg={color} transform=\"translateY(-50%)\" borderRadius=\"1.25em\" />\n            </Box>\n            <Box position=\"relative\">\n              {options.map((label, i) => (\n                <Measure bounds onResize={({ bounds }) => this.handleBound(i, bounds)} key={i}>\n                  {({ measureRef }) => (\n                    <Box.inline ref={measureRef} px=\"1.25em\" py=\"0.5em\" color=\"white\" onClick={() => onToggle(i)}>\n                      {label}\n                    </Box.inline>\n                  )}\n                </Measure>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </FontSizeContext.Consumer>\n    );\n  }\n}\n\n\nToggler.defaultProps = {\n  color: 'primary',\n  bg: 'rgba(255,255,255,0.2)',\n  onToggle: () => {},\n}\n\nexport default Toggler;\n","import React from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport styled from 'styled-components';\n\nimport themeGet from '@styled-system/theme-get';\nimport Box from './Box'\n\nimport withResponsive from '../hoc/withResponsive'\n\nconst StyledDropdown = styled(Dropdown)`\n  .Dropdown-control {\n    border: 1px solid;\n    border-radius: 0.5em;\n    text-align: center;\n    background-color: white;\n    color: black;\n    font-family: inherit;\n    padding: 0.25em;\n    font-size: 1em;\n    cursor: pointer;\n    transition: none;\n  }\n  &.is-open {\n    .Dropdown-control {\n      border-radius: 0.5em 0.5em 0em 0em;\n    }\n  }\n  .Dropdown-menu {\n    border: 1px solid;\n    transform: translateY(1px);\n    border-radius: 0 0 0.5em 0.5em;\n  }\n  .Dropdown-option {\n    color: inherit;\n    text-align: center;\n    padding: 0.5em 1em;\n    border-bottom: 1px solid gray;\n    &.is-selected {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n    &:hover {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n  }\n  .Dropdown-arrow {\n    border-color: black transparent transparent;\n    top: 0.8em;\n    right: 0.5em;\n  }\n`\n\nconst CustomDropdown = ({\n  isMobile,\n  options,\n  onChange,\n  onBlur,\n  value,\n  name,\n  placeholder,\n  disabled,\n  ...props\n}) => {\n  return (\n    <Box {...props}>\n      <StyledDropdown\n        onChange={onChange}\n        options={[{ label: '全部', value: '' }].concat(options.map(value => ({ value, label: value })))}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </Box>\n  );\n};\n\nCustomDropdown.defaultProps = {\n  placeholder: '請選擇',\n  onChange: () => {}\n}\n\nexport default withResponsive(CustomDropdown);\n","import { connect } from 'react-redux';\r\n\r\nexport default (WrappedComp) => connect((state) => {\r\n  const browser = state.get('browser');\r\n  return {\r\n    browser,\r\n    isMobile: browser.lessThan.md,\r\n  };\r\n})(WrappedComp);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from './Box';\r\n\r\nconst Circle = ({ children, border, borderColor, bg, is, ...props }) => (\r\n  <Box {...props}>\r\n    <Box position=\"relative\" pt=\"100%\">\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"0\"\r\n        left=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        width={1}\r\n        borderRadius=\"50%\"\r\n        border={border}\r\n        borderColor={borderColor}\r\n        bg={bg}\r\n        is={is}\r\n      >\r\n        <Box\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          transform=\"translate(-50%, -50%)\"\r\n          position=\"absolute\"\r\n          lineHeight=\"0\"\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCircle.propTypes = {\r\n  children: PropTypes.node,\r\n  border: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bg: PropTypes.string,\r\n  is: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n  ]),\r\n};\r\n\r\nCircle.displayName = 'Circle';\r\n\r\nexport default Circle;\r\n","import React from 'react';\nimport Modal from 'react-modal';\nimport merge from 'lodash/merge'\nimport { IoIosClose } from \"react-icons/io\";\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Text from './Text'\nimport Button from './Button'\nimport Circle from './Circle'\nimport theme from './ThemeProvider/theme'\n\nconst defaultStyles = {\n  overlay: {\n    zIndex: theme.zOrder[3],\n    backgroundColor: 'rgba(0,0,0,0.7)'\n  },\n  content: {\n    width: '66%',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    borderRadius: '1em',\n    border: 'none',\n    padding: '0',\n    backgroundColor: 'rgba(255,255,255,0.9)',\n    overflow: 'unset',\n  }\n};\n\nModal.setAppElement('#root')\n\nexport default ({ children, border, borderRadius, customStyles, title, ...props }) => (\n  <Modal\n    style={merge({}, defaultStyles, { content: customStyles})}\n    {...props}\n  >\n    <Box py=\"1.5em\">\n      <Flex justifyContent=\"space-between\" mx=\"2em\" pb=\"1em\" borderBottom=\"1px solid\" borderColor=\"darkBlue\" alignItems=\"center\">\n        <Text fontWeight=\"bold\" letterSpacing=\"0.25em\" fontSize=\"1.25em\">{title}</Text>\n        <Circle width=\"2em\" is={(p) => <Button borderRadius=\"50%\" px=\"0\" py=\"0\" {...p} />} onClick={props.onRequestClose}>\n          <IoIosClose size=\"2em\" />\n        </Circle>\n      </Flex>\n      <Box m=\"2em\" position=\"relative\">\n        {children}\n      </Box>\n    </Box>\n  </Modal>\n)\n","import React, { PureComponent, Fragment, createElement } from 'react';\n\nimport Button from './Button'\nimport Modal from './Modal'\n\nclass ModalButton extends PureComponent {\n  static defaultProps = {\n    is: Button,\n  }\n\n  state = {}\n\n  openModal = () => this.setState({ open: true })\n  closeModal = () => this.setState({ open: false })\n\n  render() {\n    const { is, label, title, children, ...props } = this.props\n    const { open } = this.state\n    return (\n      <Fragment>\n        {createElement(is, {\n          onClick: this.openModal,\n          ...props\n        }, label)}\n        <Modal isOpen={open} onRequestClose={this.closeModal} title={title}>\n          {children}\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default ModalButton;\n","import conformsTo from 'lodash/conformsTo';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isObject from 'lodash/isObject';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    injectedReducers: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(src/utils...) injectors: Expected a valid redux store'\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../stores/reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function'\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => (WrappedComponent) => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n    static contextType = ReactReduxContext;\r\n    static displayName = `withReducer(${(WrappedComponent.displayName || WrappedComponent.name || 'Component')})`;\r\n\r\n    componentWillMount() {\r\n      const { injectReducer } = this.injectors;\r\n\r\n      injectReducer(key, reducer);\r\n    }\r\n\r\n    injectors = getInjectors(this.context.store)\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n","import React, { PureComponent, createElement } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { actionTypes, requestStatuses, resourceReducer } from 'redux-resource';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport isNumber from 'lodash/isNumber';\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport injectReducer from '../../utils/injectReducer';\n\nexport default (key, params) => {\n  const ids = (isArray(params) || isNumber(params)) ? params : '';\n  const listMode = !ids;\n  const resources = isArray(ids) ? ids : [ids];\n  const SIG = `_LAW.${md5(`${key}${ids}${params ? JSON.stringify(params) : ''}`)}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      // shouldComponentUpdate(nextProps) {\n      //   return get(this.props, [key, 'resources']) !== get(nextProps, [key, 'resources'])\n      // }\n\n      request = (skip, requestParams = params) => {\n        if (this.props[key]) {\n          if (!this.checkIsPending()) {\n            if (skip || !this.checkIsDone()) {\n              this.props.dispatch({\n                type: actionTypes.READ_RESOURCES_PENDING,\n                resourceType: key,\n                resources: listMode ? undefined : resources,\n                requestKey: listMode && `list${JSON.stringify(params)}`,\n                requestParams,\n              });\n            }\n          }\n        } else {\n          setTimeout(this.request, 100)\n        }\n      };\n\n      resync = () => this.request(true);\n\n      updateParams = (params) => this.request(true, params);\n\n      checkStatus = status => {\n        if (listMode) {\n          return (\n            get(this.props, [\n              key,\n              'requests',\n              'list',\n              'status',\n            ]) === status\n          );\n        }\n        return (\n          get(this.props, [\n            key,\n            'meta',\n            resources,\n            'readStatus'\n          ]) === status\n        );\n      };\n\n      checkIsPending = () => this.checkStatus(requestStatuses.PENDING);\n\n      checkIsDone = () => this.checkStatus(requestStatuses.SUCCEEDED) || this.checkStatus(requestStatuses.FAILED);\n\n      render() {\n        const data = get(this.props, [key, 'resources']);\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...this.props,\n            [key]: data,\n            updateParams: this.updateParams,\n            // resync: this.resync,\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      [key]: state.get(key),\n    });\n\n    const withReducer = injectReducer({\n      key: key,\n      reducer: resourceReducer(key),\n    });\n\n    const comp = compose(\n      withReducer,\n      connect(mapStateToProps),\n    )(WithData)\n    if (typeof window !== 'undefined') window[SIG] = comp\n\n    return comp\n  };\n}\n","import React, { PureComponent, createElement } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport { getData } from './reducer'\n\nimport { STATUS_LOADED, STATUS_LOADING, STATUS_ERROR } from './constants'\n\nexport default (key) => {\n  const SIG = `_LAW.state.${md5(key)}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      state = {}\n\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      request = (skip) => {\n        if (!this.checkIsPending()) {\n          if (skip || !this.checkIsDone()) {\n            this.props.getData({ key })\n          }\n        }\n      };\n\n      checkIsPending = () => this.props.status === STATUS_LOADING\n\n      checkIsDone = () => this.props.status === STATUS_LOADED || this.props.status === STATUS_ERROR\n\n      render() {\n        const { data, status, ...props } = this.props\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...props,\n            [key]: data,\n            resync: () => this.request(true),\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      data: state.getIn(['api', key, 'data']),\n      status: state.getIn(['api', key, 'status']),\n    })\n\n    const mapDispatchToProps = dispatch => bindActionCreators({\n      getData,\n    }, dispatch)\n    return connect(mapStateToProps, mapDispatchToProps)(WithData)\n  };\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Box from '../../components/Box';\n\nconst Layout = ({ children }) => (\n  <Box height=\"100vh\" minWidth=\"800px\">\n    {children}\n  </Box>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\nimport debounce from 'lodash/debounce'\n\nimport Box from '../Box'\n\nclass ChartBase extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleResize = debounce(this.handleResize, 200)\n  }\n\n  state = {\n    dimensions: {},\n  }\n\n  handleResize = ({ bounds }) => this.setState({ dimensions: bounds })\n\n  render() {\n    const { children, ratio, ...props } = this.props;\n    const { width, height } = this.state.dimensions;\n    return (\n      <Measure onResize={this.handleResize} bounds>\n        {({ measureRef }) => (\n          <Box position=\"relative\" pt={`${ratio * 100}%`} {...props} ref={measureRef}>\n            {width && height && (\n              <Box\n                is=\"svg\"\n                position=\"absolute\"\n                top=\"0\"\n                left=\"0\"\n                width={width}\n                height={height}\n              >\n                {children({ width, height })}\n              </Box>\n            )}\n          </Box>\n        )}\n      </Measure>\n    );\n  }\n}\n\nChartBase.defaultProps = {\n  ratio: 1 / 3,\n}\n\nexport default ChartBase;\n","import React from 'react';\n\nfunction backwardAutoLineBreak(str, maxLength, fillFront) {\n  if (!maxLength) return [str]\n  const strArr = Array.from(str)\n  if (!fillFront) strArr.reverse()\n  let i = 0\n  const lines = strArr.reduce((lines, st) => {\n    lines[i] = lines[i] || ''\n    if (lines[i].length == maxLength) {\n      i += 1\n      lines[i] = ''\n    }\n    if (fillFront) {\n      lines[i] += st\n    } else {\n      lines[i] = st + lines[i]\n    }\n    return lines\n  }, [])\n  if (!fillFront) {\n    lines.reverse()\n  }\n  if (fillFront) {\n    const { length } = lines\n    if (lines[length - 1].length === 1) {\n      lines[length - 1] = lines[length - 2].substr(lines[length - 2].length - 1) + lines[length - 1]\n      lines[length - 2] = lines[length - 2].substr(0, lines[length - 2].length - 1)\n    }\n  } else {\n    if (lines[0].length === 1) {\n      lines[0] += lines[1][0]\n      lines[1] = lines[1].substr(1)\n    }\n  }\n  return lines\n}\n\nconst LineBreakText = ({\n  x,\n  y,\n  children,\n  fontSize,\n  maxLength,\n  lineHeight,\n  lineBefore,\n  fillFront,\n  bg,\n  style,\n  verticalCenter,\n  ...props\n}) => {\n  if (typeof children !== 'string') {\n    return (\n      <text\n        x={x}\n        y={y}\n        fontSize={fontSize}\n        style={style}\n        {...props}\n      >\n        {children}\n      </text>\n    );\n  }\n  const lines = backwardAutoLineBreak(children, maxLength, fillFront)\n  const lineCount = lines.length\n  const yPos = lines.map((c, i) => y + (verticalCenter && lineCount > 1 ? (0.5 * fontSize * (lineBefore ? 1 : -1)) : 0) + lineHeight * fontSize * (lineBefore ? i - lineCount + 1 : i));\n  const texts = lines.map((c, i) => (\n    <text\n      key={i}\n      x={x}\n      y={yPos[i]}\n      fontSize={fontSize}\n      style={style}\n      {...props}\n    >\n      {c}\n    </text>\n  ))\n  return bg ? (() => {\n    const w = maxLength * fontSize\n    const yStart = Math.min(...yPos)\n    const yEnd = Math.max(...yPos)\n    return (\n      <g>\n        <rect\n          width={w}\n          height={yEnd - yStart + 1.75 * fontSize}\n          x={x - w / 2}\n          y={yStart - 1.25 * fontSize}\n          fill={bg}\n          style={style}\n        />\n        {texts}\n      </g>\n    )\n  })() : <g>{texts}</g>;\n};\n\nLineBreakText.defaultProps = {\n  lineHeight: 1.3,\n  y: 0,\n  verticalCenter: true,\n}\n\nexport default LineBreakText;\n","import React from 'react';\nimport { format } from 'd3-format'\nimport get from 'lodash/get'\n\nimport theme from '../../components/ThemeProvider/theme'\n\nconst num = format(',')\n\nconst InfoSection = ({\n  xEnd,\n  y,\n  em,\n  main,\n  sub,\n}) => {\n  const mainYStart = y - 0.8 * em\n  const subYStart = y + 1.5 * em\n  const mainValueStart = xEnd - (get(main.unit, 'length', -0.25) + 0.25) * em\n  const mainValueWidth = main.value.toString().length * 1.5 * em\n  const mainLabelStart = mainValueStart - mainValueWidth\n  const subValueStart = xEnd - (get(sub, ['unit', 'length'], -0.25) + 0.25) * em\n  const subValueWidth = get(sub, 'value', '').toString().length * 0.75 * em\n  const subLabelStart = subValueStart - subValueWidth\n  const labelStart = Math.min(subLabelStart, mainLabelStart)\n  return (\n    <g>\n      <line\n        x1={mainLabelStart - get(main.label, 'length') * em}\n        x2={xEnd}\n        y1={y}\n        y2={y}\n        stroke=\"black\"\n        strokeWidth=\"2\"\n      />\n      <g>\n        {main.unit && (\n          <text\n            x={xEnd}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {main.unit}\n          </text>\n        )}\n        <text\n          fill={theme.colors.primary}\n          x={mainValueStart}\n          y={mainYStart}\n          textAnchor=\"end\"\n          fontSize={2 * em}\n        >\n          {num(main.value)}\n        </text>\n        <text\n          x={labelStart}\n          y={mainYStart}\n          textAnchor=\"end\"\n          fontSize={em}\n        >\n          {main.label}\n        </text>\n      </g>\n      {sub && (\n        <g>\n          <text\n            x={xEnd}\n            y={subYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {sub.unit}\n          </text>\n          <text\n            x={subValueStart - 0.25 * em}\n            y={subYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n            color={theme.colors.gray}\n          >\n            {num(sub.value)}\n          </text>\n          <text\n            x={labelStart}\n            y={subYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {sub.label}\n          </text>\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default InfoSection;\n","import React, { Fragment, PureComponent, createRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport { Animate, NodeGroup } from 'react-move'\nimport loSortBy from 'lodash/sortBy'\nimport { max } from 'd3-array'\nimport { Bar, Circle } from '@vx/shape';\nimport { scaleLinear, scalePower } from '@vx/scale';\nimport { LinearGradient, RadialGradient } from '@vx/gradient';\nimport { localPoint } from '@vx/event';\nimport { Group } from '@vx/group';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport LineBreakText from '../../components/Charts/LineBreakText'\nimport theme from '../../components/ThemeProvider/theme'\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n\nimport InfoSection from './InfoSection'\n\nconst emPercent = n => (\n  <Fragment>\n    {Math.round(n * 100)}\n    <tspan fontSize=\"0.7em\">%</tspan>\n  </Fragment>\n)\n\nconst canGoDown = typeof window !== 'undefined' && window.__ID === '00000000'\n\nclass BubbleLine extends PureComponent {\n  static getDerivedStateFromProps({ data }) {\n    return {\n      namedData: data.reduce((nd, d) => {\n        nd[d.id] = d\n        return nd\n      }, {})\n    }\n  }\n\n  state = {}\n\n  wrapper = createRef()\n\n  handleTooltip = ({ event, xScale, data }) => {\n    const { x } = localPoint(event);\n    const index = Math.round(xScale.invert(x))\n    const d = data[index]\n    if (d) {\n      this.setState({ activeId: d.id })\n    } else {\n      this.setState({ activeId: null })\n    }\n  }\n\n  handleClick = () => {\n    const { activeId } = this.state\n    const { lockId, onLock } = this.props\n    if (lockId) {\n      this.setState({ activeId: null }, () => onLock(null))\n    } else {\n      onLock(activeId)\n    }\n  }\n\n  render() {\n    const {\n      data,\n      sortBy,\n      sortOrder,\n      onLock,\n      lockId,\n      ...props\n    } = this.props\n    const { activeId, namedData } = this.state;\n    if (!data || !data.length) return null\n    const sortedData = loSortBy(data, sortBy)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase {...props}>\n            {({ width, height }) => {\n              const rLabelHeight = 2 * em\n              const rMax = height * 0.22\n              const leftLabelWidth = width * 0.075\n              const rightInfoWidth = width * 0.18\n              const xStart = leftLabelWidth + rMax\n              const xEnd = width - rMax - rightInfoWidth\n              const lableY = rLabelHeight + rMax * 2 + em * 3.5\n              const rateY = lableY + em * 3\n              const dollarRateY = rateY + em * 2.5\n\n              const xScale = scaleLinear({\n                domain: [0, data.length - 1],\n                range: [xStart, xEnd]\n              })\n\n              const rScale = scalePower({\n                domain: [0, max(data, d => d.issued)],\n                range: [0, rMax],\n                exponent: 0.5,\n              });\n\n              return (\n                <Fragment>\n                  <LinearGradient from={theme.colors.darkBlue} to={theme.colors.darkerBlue} vertical={false} id=\"dark\" />\n                  <LinearGradient from={theme.colors.orange6} to={theme.colors.orange2} vertical={false} id=\"rate\" />\n                  <RadialGradient from={theme.colors.orange4} to={theme.colors.orange4} toOpacity={0} id=\"radial-trans\" />\n                  <g>\n                    <rect\n                      width={leftLabelWidth}\n                      height={height - rLabelHeight / 2}\n                      x={0}\n                      y={rLabelHeight / 2}\n                      opacity={0.15}\n                      fill=\"url('#dark')\"\n                      rx={em}\n                    />\n                    {[lableY, rateY - 2 * em / 3, dollarRateY - 2 * em / 3].map((y, i) => (\n                      <line\n                        key={i}\n                        x1={em}\n                        x2={leftLabelWidth - em}\n                        y1={y - em * 2 / 3}\n                        y2={y - em * 2 / 3}\n                        stroke={theme.colors.text}\n                        strokeWidth=\"1\"\n                        strokeLinecap=\"round\"\n                      />\n                    ))}\n                    {[\n                      { label: '已開案件量', y: rLabelHeight + rMax - em / 2 },\n                      { label: '局處', y: lableY + em },\n                      { label: '收繳率', y: rateY + em / 3 },\n                      { label: '執行率', y: dollarRateY + em / 3 },\n                    ].map(({ label, y }, i) => (\n                      <LineBreakText\n                        key={i}\n                        x={leftLabelWidth / 2}\n                        y={y}\n                        textAnchor=\"middle\"\n                        fontSize={1.25 * em}\n                        fontWeight=\"bold\"\n                        maxLength={3}\n                        letterSpacing=\"2\"\n                      >\n                        {label}\n                      </LineBreakText>\n                    ))}\n                  </g>\n                  <Animate\n                    start={{\n                      opacity: 1,\n                    }}\n                    update={{\n                      opacity: [(activeId || lockId) ? 0.1 : 1],\n                      timing: { duration: 250 }\n                    }}\n                  >\n                    {state => (\n                      <line\n                        x1={xStart}\n                        y1={rLabelHeight + rMax}\n                        x2={width}\n                        y2={rLabelHeight + rMax}\n                        stroke={theme.colors.lightGray}\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        {...state}\n                      />\n                    )}\n                  </Animate>\n                  <rect\n                    width={xEnd - xStart + rMax}\n                    height={2 * em}\n                    fill=\"url('#rate')\"\n                    x={xStart - rMax / 2}\n                    y={rateY - em}\n                    rx={em}\n                  />\n                  {/* <rect\n                  width={xEnd - xStart + rMax}\n                  height={2 * em}\n                  fill=\"url('#rate')\"\n                  x={xStart - rMax / 2}\n                  y={dollarRateY - em}\n                  rx={em}\n                /> */}\n                  <Bar\n                    x={0}\n                    y={0}\n                    width={width}\n                    height={height}\n                    fill=\"transparent\"\n                    data={data}\n                    onTouchStart={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onTouchMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseLeave={() => this.setState({ activeId: null })}\n                    onClick={this.handleClick}\n                  />\n                  <g ref={this.wrapper}>\n                    <NodeGroup\n                      // must make react-move think data had been updated, so we inject width and height here\n                      data={sortedData.map(d => ({ ...d, width, height }))}\n                      keyAccessor={d => d.label}\n                      start={(d, i) => ({\n                        cx: xScale(i),\n                        r: 0,\n                        opacity: 0.5,\n                        otherOpacity: 1,\n                        centerR: 0,\n                      })}\n                      enter={d => ({\n                        r: [rScale(d.issued)],\n                        timing: { duration: 500 },\n                      })}\n                      update={(d, i) => {\n                        let active = true\n                        let centerActive\n                        if (lockId) {\n                          active = lockId === d.id\n                          centerActive = lockId === d.id\n                        } else if (activeId) {\n                          active = activeId === d.id\n                        }\n                        return [\n                          {\n                            cx: [xScale(i)],\n                            r: [rScale(d.issued)],\n                            timing: { duration: 500 },\n                          },\n                          {\n                            opacity: [active ? 0.5 : 0.1],\n                            otherOpacity: [active ? 1 : 0.1],\n                            centerR: [centerActive ? em : 0],\n                            timing: { duration: 250 },\n                          },\n                        ]\n                      }}\n                      leave={() => ({\n                        opacity: [0],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <g>\n                          {nodes.map(({ key, data: d, state: { cx, r, opacity, otherOpacity } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rLabelHeight + rMax}\n                                  r={r}\n                                  fill={theme.colors.orange2}\n                                  opacity={opacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <text\n                                  fill={theme.colors.darkGray}\n                                  x={cx}\n                                  y={rLabelHeight + rMax - r - 0.5 * em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {d.issued}\n                                </text>\n                                <line\n                                  x1={cx}\n                                  x2={cx}\n                                  y1={rLabelHeight + rMax}\n                                  y2={lableY + em}\n                                  stroke={theme.colors.lightGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <LineBreakText\n                                  x={cx}\n                                  y={lableY + em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  maxLength={3}\n                                  lineBefore\n                                  em={em}\n                                  bg=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                  verticalCenter={false}\n                                >\n                                  {d.label}\n                                </LineBreakText>\n                                <text\n                                  x={cx}\n                                  y={rateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  fill=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveRate)}\n                                </text>\n                                <text\n                                  x={cx}\n                                  y={dollarRateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveDollarRate)}\n                                </text>\n                              </g>\n                            );\n                          })}\n                          {nodes.map(({ key, data: d, state: { cx, otherOpacity, centerR } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rMax + rLabelHeight}\n                                  r={rMax / 25}\n                                  fill={theme.colors.darkGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <HoverSensor>\n                                  {({ isHover }) => {\n                                    const cy = rLabelHeight + rMax\n                                    const boxHeight = 2.5 * em\n                                    const boxWidth = 5 * em\n                                    return (\n                                      <g>\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR}\n                                          fill=\"url('#radial-trans')\"\n                                          style={canGoDown ? { cursor: 'pointer' } : {}}\n                                          onClick={() => {\n                                            if (canGoDown) {\n                                              window.open(`?bureauId=${d.id}`)\n                                            }\n                                          }}\n                                        />\n                                        {canGoDown && isHover && createPortal((\n                                          <Group top={rLabelHeight + rMax} left={cx + 2 * em}>\n                                            <polygon\n                                              points={[\n                                                [-0.75 * em, 0],\n                                                [0.1 * em, -0.5 * em],\n                                                [0.1 * em, 0.5 * em]\n                                              ].map(p => p.join()).join(' ')}\n                                              fill={theme.colors.orange3}\n                                            />\n                                            <rect\n                                              x={0}\n                                              y={-boxHeight / 2}\n                                              width={boxWidth}\n                                              height={boxHeight}\n                                              fill={theme.colors.orange3}\n                                              rx={0.75 * em}\n                                            />\n                                            <text\n                                              fontSize={em}\n                                              fill=\"white\"\n                                              x={boxWidth / 2}\n                                              y={0.3*em}\n                                              textAnchor=\"middle\"\n                                            >前往局處</text>\n                                          </Group>\n                                        ), this.wrapper.current)}\n                                      </g>\n                                    )\n                                  }}\n                                </HoverSensor>\n                              </g>\n                            );\n                          })}\n                        </g>\n                      )}\n                    </NodeGroup>\n                  </g>\n                  <InfoSection\n                    xEnd={width}\n                    y={rLabelHeight + 2 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].issued : data.reduce((sum, d) => sum + d.issued, 0),\n                      label: '已開案量',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].issuedDollar : data.reduce((sum, d) => sum + d.issuedDollar, 0),\n                      label: '案件金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    xEnd={width}\n                    y={rLabelHeight + 9.5 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].received : data.reduce((sum, d) => sum + d.received, 0),\n                      label: '收繳案件',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].receivedDollar : data.reduce((sum, d) => sum + d.receivedDollar, 0),\n                      label: '收繳金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    xEnd={width}\n                    y={rLabelHeight + 18 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].canceled : data.reduce((sum, d) => sum + d.canceled, 0),\n                      label: '撤銷案件量',\n                      unit: '件',\n                    }}\n                  />\n                </Fragment>\n              );\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    )\n  }\n}\n\nexport default BubbleLine;\n","import React, { Component, createRef } from 'react';\nimport TWEEN from '@tweenjs/tween.js';\nimport { SVGPathData, encodeSVGPath } from 'svg-pathdata';\nimport pickBy from 'lodash/pickBy';\nimport isNumber from 'lodash/isNumber';\nimport merge from 'lodash/merge';\nimport mapValues from 'lodash/mapValues';\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\tTWEEN.update();\n}\n\nclass TweenShape extends Component {\n  static defaultProps = {\n    duration: 500,\n  }\n\n  constructor(props) {\n    super(props);\n    const { d } = props;\n    this.prevParsed = new SVGPathData(d).toAbs().commands;\n    this.tick = [];\n    animate();\n  }\n\n  shouldComponentUpdate({ d }) {\n    if (d !== this.props.d) this.updatePath(d);\n    return false;\n  }\n\n  componentWillUnmount() {\n    if (this.tweens) {\n      this.tweens.forEach((tween) => tween.stop());\n    }\n  }\n\n  pathRef = createRef()\n\n  updatePath = (d) => {\n    this.parsed = new SVGPathData(d).toAbs().commands;\n    this.tweens = this.parsed.map((to, index) => {\n      const from = this.prevParsed[index];\n      const toValues = pickBy(to, isNumber);\n      const tween = new TWEEN.Tween(from || mapValues(toValues, (v, k) => k === 'type' ? v : 0))\n        .to(toValues, this.props.duration)\n        .easing(TWEEN.Easing.Quadratic.InOut)\n        .onUpdate(this.handleUpdate(index))\n      tween.start();\n      return tween;\n    });\n  }\n\n  handleUpdate = (index) => (value) => {\n    this.prevParsed[index] = merge(this.prevParsed[index] || {}, value);\n    this.tick[index] = true;\n    if (this.tick.length === this.parsed.length && this.tick.every(Boolean)) {\n      this.doUpdatePath();\n    }\n  }\n\n  doUpdatePath = () => {\n    if (this.pathRef.current) {\n      this.pathRef.current.setAttribute('d', encodeSVGPath(this.prevParsed));\n    }\n    this.tick.fill(null);\n  }\n\n  render() {\n    const { duration, ...props } = this.props\n    return (\n      <path ref={this.pathRef} {...props} />\n    );\n  }\n}\n\nexport default TweenShape;\n\n","import React, { Fragment, PureComponent } from 'react';\nimport { Group } from '@vx/group';\nimport { Pie } from '@vx/shape';\nimport { scaleBand } from '@vx/scale';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\nimport { format } from 'd3-format'\nimport groupBy from 'lodash/groupBy'\nimport reduce from 'lodash/reduce'\nimport range from 'lodash/range'\nimport mapValues from 'lodash/mapValues'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/TweenShape'\n\nconst p = format('.0%')\n\nconst calcSide = (centroid, index) => {\n  return {\n    side: Math.sign(centroid[0]),\n    distanceX: Math.abs(centroid[0]),\n    distanceY: centroid[1],\n    index,\n  }\n}\n\nclass TypeDonut extends PureComponent {\n  static contextType = FontSizeContext\n\n  static defaultProps = {\n    onLegendClick: () => {}\n  }\n\n  static getDerivedStateFromProps({ data, legends, valueGetter }) {\n    return {\n      totalVaue: data.reduce((sum, d) => sum + valueGetter(d), 0),\n      dataLength: data.length,\n      labelLength: Math.floor(data.length / 2) + 1,\n      getColorByName: legends.reduce((cn, l) => {\n        cn[l.label] = l.color\n        return cn\n      }, {}),\n      getIndexByName: legends.reduce((cn, l, i) => {\n        cn[l.label] = i\n        return cn\n      }, {}),\n    }\n  }\n\n  state = {}\n\n  outerShapes = []\n\n  handleOuterShape = (i, shape) => {\n    this.outerShapes[i] = shape\n  }\n\n  render() {\n    const {\n      data,\n      legends,\n      onLegendClick,\n      activeLegend,\n      valueGetter,\n      outerCircle,\n      showLegend,\n      showLabel,\n      showPercentage,\n      ...props\n    } = this.props;\n    const {\n      totalVaue,\n      dataLength,\n      labelLength,\n      getColorByName,\n      getIndexByName,\n    } = this.state;\n    const { em } = this.context\n    return (\n      <ChartBase {...props}>\n        {({ width, height }) => {\n          const donutR = height * 0.45 - (showLabel ? 8 * em : 2 * em);\n          const legendBottom = height - 4 * em\n          return (\n            <Fragment>\n              {showLegend && (\n                <g>\n                  {legends.map((legend, i) => (\n                    <Group\n                      key={i}\n                      left={em}\n                      top={legendBottom - (dataLength - 1 - i) * em * 1.75}\n                      onClick={() => onLegendClick(legend.label === activeLegend ? null : legend.label)}\n                      opacity={!activeLegend || legend.label === activeLegend ? 1 : 0.3}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <circle cx={em / 2} cy={-em * 0.3} r={em / 2} fill={legend.color} />\n                      <text x={1.75 * em} fill=\"white\" fontSize={em}>{legend.label}</text>\n                    </Group>\n                  ))}\n                </g>\n              )}\n              <Group top={height / 2} left={width / 2 + (showLegend ? 5 * em : 0)}>\n                {outerCircle && (\n                  <Fragment>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.05}\n                      innerRadius={donutR * 0.4}\n                      padAngle={0}\n                      pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                    >\n                      {pie => pie.arcs.map((arc, i) => {\n                        const d = pie.path(arc)\n                        return (\n                          <g key={`outer-${arc.data.name}-${i}`}>\n                            <path d={d} fill=\"transparent\" ref={() => this.handleOuterShape(i, d)} />\n                          </g>\n                        )\n                      })}\n                    </Pie>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.1}\n                      innerRadius={donutR * 0.3}\n                      padAngle={0}\n                    >\n                      {pie => pie.arcs.map((arc, i) => (\n                        <g key={`bg-${arc.data.name}-${i}`}>\n                          <path d={pie.path(arc)} fill=\"white\" opacity=\"0.2\" />\n                        </g>\n                      ))}\n                    </Pie>\n                  </Fragment>\n                )}\n                <Pie\n                  data={data}\n                  pieValue={valueGetter}\n                  outerRadius={donutR}\n                  innerRadius={donutR * 0.4}\n                  padAngle={0}\n                  pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                >\n                  {pie => {\n                    let sideOrders\n                    let scaleLabelY\n                    if (showLabel) {\n                      const sides = groupBy(pie.arcs.map((arc, i) => calcSide(pie.path.centroid(arc), i)), 'side')\n                      const sideGroups = reduce(sides, (so, s, i) => {\n                        let ss = so[i] ? s.concat(so[i]) : s\n                        if (s.length > labelLength) {\n                          const sorted = s.sort((a, b) => b.distanceX - a.distanceX)\n                          ss = sorted.slice(0, labelLength)\n                          const otherI = i * -1\n                          so[otherI] = (so[otherI] || []).concat(sorted.slice(labelLength))\n                        }\n                        so[i] = ss\n                        return so\n                      }, {})\n                      scaleLabelY = mapValues(sideGroups, s => scaleBand({\n                        range: [-donutR, donutR],\n                        domain: range(0, s.length),\n                      }))\n                      sideOrders = reduce(sideGroups, (so, s) => {\n                        const sorted = s.sort((a, b) => a.distanceY - b.distanceY)\n                        sorted.forEach((d, index) => {\n                          so[d.index] = { side: d.side, index }\n                        })\n                        return so\n                      }, [])\n                    }\n                    return pie.arcs.map((arc, i) => {\n                      const [centroidX, centroidY] = pie.path.centroid(arc);\n                      const { startAngle, endAngle } = arc;\n                      const hasSpaceForLabel = endAngle - startAngle >= 0.1;\n                      const value = valueGetter(arc.data)\n                      return (\n                        <Fragment key={`inner-${arc.data.name}-${i}`}>\n                          <HoverSensor>\n                            {({ isHover }) => (\n                              <g>\n                                <TweenShape\n                                  d={((!activeLegend && isHover) || activeLegend === arc.data.name) && this.outerShapes[i] ? this.outerShapes[i] : pie.path(arc)}\n                                  fill={getColorByName[arc.data.name]}\n                                  opacity={!activeLegend || arc.data.name === activeLegend ? 1 : 0.3}\n                                  onClick={() => onLegendClick(arc.data.name === activeLegend ? null : arc.data.name)}\n                                  duration={200}\n                                />\n                                {hasSpaceForLabel && (\n                                  <text\n                                    fill=\"white\"\n                                    x={centroidX}\n                                    y={centroidY}\n                                    dy=\".33em\"\n                                    fontSize={em}\n                                    textAnchor=\"middle\"\n                                  >\n                                    {showPercentage ? p(value / totalVaue) : value}\n                                  </text>\n                                )}\n\n                              </g>\n                            )}\n                          </HoverSensor>\n                          {showLabel && (() => {\n                            const side = sideOrders[i]\n                            const scale = scaleLabelY[side.side]\n                            const sign = side.side\n                            const left = (donutR + 8 * em)* sign\n                            const top = scale(side.index) + scale.bandwidth() / 2 - em / 2\n                            const centX = centroidX - left + 2 * em * sign\n                            const centY = centroidY - top\n                            const breakX = centX + Math.abs(centY) * sign\n                            return (\n                              <Fragment>\n                                <Group\n                                  left={left}\n                                  top={top}\n                                >\n                                  <line\n                                    x1={0}\n                                    x2={breakX}\n                                    y1={0}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <line\n                                    x1={centX}\n                                    y1={centY}\n                                    x2={breakX}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <text\n                                    y={1.5 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={em}\n                                    fontWeight=\"bold\"\n                                  >{arc.data.name}</text>\n                                  <text\n                                    y={-0.75 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={1.5 * em}\n                                    fill={theme.colors.primary}\n                                    fontWeight=\"bold\"\n                                  >{valueGetter(arc.data)}</text>\n                                </Group>\n                              </Fragment>\n                            )\n                          })()}\n                        </Fragment>\n                      );\n                    });\n                  }}\n                </Pie>\n              </Group>\n            </Fragment>\n          )\n        }}\n      </ChartBase>\n    );\n  }\n}\n\nexport default TypeDonut;\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleLinear } from '@vx/scale';\nimport { Animate } from 'react-move'\nimport { format } from 'd3-format'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n\nimport ChartBase from '../../components/Charts/ChartBase'\n\nconst pd = format('.0%')\n\nconst PercentBars = ({\n  data,\n  legends,\n  onLegendClick,\n  activeLegend,\n  ...props\n}) => {\n  const dataByKey = data.reduce((dk, d) => {\n    dk[d.name] = d.received / d.issued;\n    return dk\n  }, {})\n  const legendsLength = Math.max(...legends.map(l => l.label.length))\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width }) => {\n            const yStart = 6 * em\n            const xScale = scaleLinear({\n              range: [0, width - 3 * em - legendsLength * em * 1.25],\n              domain: [0, 1],\n            });\n            return (\n              <Group top={yStart}>\n                {legends.map(({ label, color }, i) => {\n                  const handleClick = () => onLegendClick(label === activeLegend ? null : label)\n                  return (\n                    <Group\n                      top={i * em * 2.5}\n                      opacity={!activeLegend || activeLegend === label ? 1 : 0.3}\n                      key={label + i}\n                    >\n                      <text\n                        fill=\"white\"\n                        fontSize={em}\n                        onClick={handleClick}\n                        style={{ cursor: 'pointer' }}\n                      >\n                        {label}\n                      </text>\n                      <rect\n                        x={legendsLength * em * 1.25}\n                        y={-1.25 * em}\n                        width={xScale(1)}\n                        height={1.5 * em}\n                        fill=\"white\"\n                        opacity=\"0.15\"\n                      />\n                      <Animate\n                        start={{ width: 0 }}\n                        enter={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                        update={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                      >\n                        {(state) => (\n                          <Fragment>\n                            <rect\n                              x={legendsLength * em * 1.25}\n                              y={-1.25 * em}\n                              height={1.5 * em}\n                              {...state}\n                              fill={color}\n                              onClick={handleClick}\n                            />\n                            <text\n                              x={legendsLength * em * 1.25 + state.width + 0.5 * em}\n                              y=\"-.3em\"\n                              fill=\"white\"\n                              fontSize={em * 0.8}\n                            >\n                              {pd(dataByKey[label])}\n                            </text>\n                          </Fragment>\n                        )}\n                      </Animate>\n                    </Group>\n                  )\n                })}\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default PercentBars;\n","import { createElement } from 'react'\nimport withData from './withData';\n\nexport default (params, lockId) => (SubComp) => {\n  let key = 'data/bureaus'\n  if (typeof window !== 'undefined' && window.__ID !== '00000000') {\n    key = `${key}/${window.__ID}`\n  }\n  if (lockId) {\n    key = `${key}/${lockId}`\n  }\n  key = `${key}/laws`\n  return withData(key, params)(props => createElement(SubComp, { ...props, data: props[key] }))\n}\n","import React, { Fragment, PureComponent, createElement } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleLinear } from '@vx/scale';\nimport { Animate } from 'react-move'\nimport sortBy from 'lodash/sortBy'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport LineBreakText from '../../components/Charts/LineBreakText'\nimport withLawData from '../../services/api/withLawData'\n\nconst labelLength = 15\n\nclass LawTops extends PureComponent {\n  componentDidUpdate(prevProps) {\n    const { year, updateParams, top } = this.props\n    if (prevProps.year !== year) {\n      updateParams({ year, top })\n    }\n  }\n\n  render() {\n    const { hasLine, color, ratio, top, data } = this.props;\n    const sorted = sortBy(data, 'count').slice(0, top)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase ratio={ratio}>\n            {({ width }) => {\n              const yStart = em * 2.5\n              const xStart = labelLength * em * 1.1;\n              const xScale = scaleLinear({\n                range: [0, width - 3 * em - xStart],\n                domain: [0, Math.max(...sorted.map(d => d.count))],\n              });\n              return (\n                <Fragment>\n                  <Group top={yStart}>\n                    {Array.from(sorted).reverse().map((law, i) => {\n                      return (\n                        <Animate\n                          start={{ width: 0 }}\n                          enter={{\n                            width: [xScale(law.count)],\n                            timing: { duration: 200 },\n                          }}\n                          update={{\n                            width: [xScale(law.count)],\n                            timing: { duration: 200 },\n                          }}\n                          key={law.id}\n                        >\n                          {(state) => (\n                            <Group top={i * em * 2.75}>\n                              <LineBreakText\n                                fill={color}\n                                fontSize={em}\n                                maxLength={labelLength}\n                                fillFront\n                                textAnchor=\"end\"\n                                x={xStart - em}\n                                y={0.5 * em}\n                              >\n                                {law.name}\n                              </LineBreakText>\n                              <rect\n                                fill={theme.colors.primary}\n                                x={xStart}\n                                y=\"-0.5em\"\n                                width={state.width}\n                                height={1.25 * em}\n                              />\n                              <text\n                                fill={color}\n                                x={xStart + state.width + em * 0.5}\n                                y=\"0.5em\"\n                              >{law.count}</text>\n                            </Group>\n                          )}\n                        </Animate>\n                      )\n                    })}\n                  </Group>\n                  {hasLine && (\n                    <line\n                      x1={xStart}\n                      x2={xStart}\n                      y1={yStart / 2}\n                      y2={yStart / 2 + sorted.length * em * 2.75}\n                      stroke={color}\n                      strokeWidth=\"1.5\"\n                    />\n                  )}\n                </Fragment>\n              )\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    );\n  }\n}\n\nexport default props => createElement(withLawData({ top: props.top, year: props.year }, props.lockId)(LawTops), props);\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { LinePath, Bar } from '@vx/shape';\nimport range from 'lodash/range'\nimport map from 'lodash/map'\nimport { NodeGroup } from 'react-move'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/TweenShape'\n\nconst xValue = d => d.month\nconst yValue = d => d.issued\n\nconst YearChart = ({\n  data,\n  ...props\n}) => {\n  const formattedData = map(data, (d, month) => ({\n    month,\n    ...d,\n    receivedRate: d.received / d.issued,\n  }))\n\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n            const yStart = 2 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em * 13\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(1, 13),\n              paddingInner: 0.3,\n              paddingOuter: 0.3,\n            })\n            const percentYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, 1.3],\n            });\n            const valueYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, Math.ceil(Math.max(...formattedData.map(yValue)) / 100) * 100],\n            });\n            const barWidth = xScale.bandwidth()\n            return (\n              <Group top={yStart}>\n                <Group left={xStart}>\n                  <Grid\n                    top={0}\n                    left={0}\n                    xScale={xScale}\n                    yScale={percentYScale}\n                    stroke=\"white\"\n                    width={xEnd - xStart}\n                    height={yHeight}\n                    numTicksRows={3}\n                    numTicksColumns={0}\n                    columnLineStyle={{\n                      strokeWidth: 0,\n                    }}\n                  />\n                  <AxisLeft\n                    top={0}\n                    left={0}\n                    scale={percentYScale}\n                    numTicks={3}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      textAnchor: 'end',\n                      fontSize: em * 0.8,\n                      dx: '-0.25em',\n                      dy: '0.25em'\n                    })}\n                    tickFormat={d => Math.round(d * 100)}\n                  />\n                  <AxisBottom\n                    top={yHeight}\n                    left={0}\n                    scale={xScale}\n                    numTicks={12}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickFormat={d => `${d}月`}\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      fontSize: em * 0.8,\n                      textAnchor: 'middle',\n                    })}\n                  />\n                  <Group left={xStart}>\n                    <LinePath\n                      x={dd => xScale(xValue(dd)) - barWidth / 2}\n                      y={dd => valueYScale(yValue(dd))}\n                    >\n                      {({ path }) => (\n                        <TweenShape\n                          d={path(formattedData)}\n                          stroke={theme.colors.lightOrange}\n                          strokeWidth=\"1.5\"\n                          fill=\"transparent\"\n                          duration={500}\n                        />\n                      )}\n                    </LinePath>\n                    <NodeGroup\n                      data={formattedData}\n                      keyAccessor={xValue}\n                      start={d => ({\n                        xPos: xScale(xValue(d)),\n                        barHeight: 0,\n                        dotY: yHeight,\n                      })}\n                      enter={d => ({\n                        barHeight: [yHeight - percentYScale(d.receivedRate)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                      update={d => ({\n                        xPos: [xScale(xValue(d))],\n                        barHeight: [yHeight - percentYScale(d.receivedRate)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <Fragment>\n                          {nodes.map(({ key, data: d, state: { xPos, barHeight, dotY } }) => {\n                            const barY = yHeight - barHeight;\n                            const dotX = xPos - barWidth / 2\n                            return (\n                              <Fragment key={key}>\n                                <Bar\n                                  x={xPos - barWidth}\n                                  y={barY}\n                                  width={barWidth}\n                                  height={barHeight}\n                                  fill={theme.colors.lightOrange}\n                                  opacity={0.3}\n                                />\n                                <circle\n                                  cx={dotX}\n                                  cy={dotY}\n                                  r={em / 3}\n                                  fill={theme.colors.spectrum[3]}\n                                />\n                                <text\n                                  x={dotX}\n                                  y={dotY - em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  fill={theme.colors.lightOrange}\n                                >\n                                  {yValue(d)}\n                                </text>\n                              </Fragment>\n                            )\n                          })}\n                        </Fragment>\n                      )}\n                    </NodeGroup>\n                  </Group>\n                </Group>\n                <Group top={yHeight / 2 - em} left={xEnd + 5 * em}>\n                  <Group>\n                    <text>案件量</text>\n                    <line\n                      x1={4 * em}\n                      y1={-0.5 * em}\n                      x2={7 * em}\n                      y2={-0.5 * em}\n                      stroke={theme.colors.lightOrange}\n                      strokeWidth=\"1.5\"\n                    />\n                  </Group>\n                  <Group top={2.5 * em}>\n                    <text>收繳率</text>\n                    <rect\n                      x={4 * em}\n                      y={-1 * em}\n                      width={3 * em}\n                      height={em}\n                      fill={theme.colors.lightOrange}\n                      opacity={0.3}\n                    />\n                  </Group>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default YearChart;\n","import React, { PureComponent, createElement } from 'react';\nimport get from 'lodash/get'\n\nimport Text from '../../components/Text'\nimport withData from '../../services/api/withData'\n\nclass AvgDays extends PureComponent {\n  componentDidUpdate(prevProps, prevState) {\n    const { year, updateParams } = this.props\n    if (prevProps.year !== year) {\n      updateParams({ year })\n    }\n  }\n\n  render() {\n    const { year } = this.props\n    const avgDays = this.props['data/avgTransferDays']\n    return (\n      <Text>繳款入市庫平均日數：{get(avgDays, [year, 'days'])} 天</Text>\n    );\n  }\n}\n\nexport default props => createElement(withData('data/avgTransferDays', { year: props.year })(AvgDays), props);\n","import React, { Fragment, PureComponent, createRef } from 'react';\nimport { createPortal } from 'react-dom'\nimport { Group } from '@vx/group';\nimport { scalePoint, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { AreaClosed, Bar, Line } from '@vx/shape';\nimport { withTooltip } from '@vx/tooltip';\nimport { localPoint } from '@vx/event';\nimport range from 'lodash/range'\nimport { NodeGroup } from 'react-move'\nimport styled from 'styled-components';\n\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../../components/ThemeProvider/theme'\n\nimport Text from '../../../components/Text'\nimport Box from '../../../components/Box'\n\nimport ChartBase from '../../../components/Charts/ChartBase'\nimport TweenShape from '../../../components/Charts/TweenShape'\n\nconst TooltipBox = styled(Box)`\n  &::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 50%;\n    top: 100%;\n    transform: translateX(-50%);\n    width: 0;\n    height: 0;\n    border-left: 0.5em solid transparent;\n    border-right: 0.5em solid transparent;\n\n    border-top: 0.5em solid ${theme.colors.darkerBlue};\n  }\n`\n\nconst xValue = d => d.index\nconst yValue = d => d.issued\nconst yCancealedValue = d => d.canceled\n\nconst getZeros = n => {\n  if (n < 10) return 0\n  let i = 0\n  while (n / (10 ** i) > 10) {\n    i += 1\n  }\n  return i\n}\n\nclass IssuedChart extends PureComponent {\n  wrapper = createRef()\n\n  handleTooltip = ({ event, data, xScale, yScale, xStart }) => {\n    const { showTooltip } = this.props;\n    const { x } = localPoint(event);\n    const index = Math.round((x - xStart) / xScale.step());\n    const d = data[index];\n    showTooltip({\n      tooltipData: Object.assign({ canceledTop: yScale(yCancealedValue(d)) }, d),\n      tooltipLeft: xScale(xValue(d)) + xStart,\n      tooltipTop: yScale(yValue(d)),\n    });\n  }\n\n  render() {\n    const {\n      data,\n      xTickFormat,\n      showTooltop,\n      hideTooltip,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      events,\n      ...props\n    } = this.props\n    return (\n      <div ref={this.wrapper}>\n        <FontSizeContext.Consumer>\n          {({ em }) => (\n            <Fragment>\n              <ChartBase {...props}>\n                {({ width, height }) => {\n                  const yStart = 6 * em\n                  const yEnd = height - 2 * em\n                  const yHeight = yEnd - yStart\n                  const xStart = em * 3\n                  const xEnd = width - 2 * em\n                  const xScale = scalePoint({\n                    range: [0, xEnd - xStart],\n                    domain: range(0, data.length),\n                    // padding: 0.2,\n                  })\n                  const yMax = Math.max(...data.map(yValue))\n                  const z = getZeros(yMax)\n                  const yScale = scaleLinear({\n                    range: [yHeight, 0],\n                    domain: [0, Math.ceil(yMax / (10 ** z)) * (10 ** z)],\n                  });\n                  return (\n                    <Group>\n                      <Group top={yStart} left={xStart}>\n                        <AreaClosed\n                          x={dd => xScale(xValue(dd))}\n                          y={dd => yScale(yValue(dd))}\n                          yScale={yScale}\n                        >\n                          {({ path }) => (\n                            <TweenShape\n                              d={path(data)}\n                              stroke={theme.colors.lightOrange}\n                              fill={theme.colors.lightOrange}\n                              opacity={0.7}\n                              duration={500}\n                            />\n                          )}\n                        </AreaClosed>\n                        <AreaClosed\n                          x={dd => xScale(xValue(dd))}\n                          y={dd => yScale(yCancealedValue(dd))}\n                          yScale={yScale}\n                        >\n                          {({ path }) => (\n                            <TweenShape\n                              d={path(data)}\n                              stroke={theme.colors.orange}\n                              fill={theme.colors.orange}\n                              duration={500}\n                            />\n                          )}\n                        </AreaClosed>\n                        <Grid\n                          top={0}\n                          left={0}\n                          xScale={xScale}\n                          yScale={yScale}\n                          stroke={theme.colors.gray}\n                          width={xEnd - xStart}\n                          height={yHeight}\n                          numTicksRows={3}\n                          numTicksColumns={0}\n                          columnLineStyle={{\n                            strokeWidth: 0,\n                          }}\n                        />\n                        <AxisLeft\n                          top={0}\n                          left={0}\n                          scale={yScale}\n                          numTicks={3}\n                          stroke=\"black\"\n                          strokeWidth={1.5}\n                          tickStroke=\"none\"\n                          tickLabelProps={() => ({\n                            fill: 'black',\n                            textAnchor: 'end',\n                            fontSize: em * 0.8,\n                            dx: '-0.25em',\n                            dy: '0.25em'\n                          })}\n                        />\n                        <AxisBottom\n                          top={yHeight}\n                          left={0}\n                          scale={xScale}\n                          numTicks={12}\n                          stroke=\"black\"\n                          strokeWidth={1.5}\n                          tickStroke=\"none\"\n                          tickFormat={xTickFormat}\n                          tickLabelProps={() => ({\n                            fill: 'black',\n                            fontSize: em * 0.8,\n                            textAnchor: 'middle',\n                          })}\n                        />\n                        {tooltipData && (\n                          <Line\n                            from={{ x: tooltipLeft - xStart, y: tooltipTop }}\n                            to={{ x: tooltipLeft - xStart, y: yHeight }}\n                            stroke=\"white\"\n                            strokeWidth={2}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                        )}\n                        <NodeGroup\n                          data={data}\n                          keyAccessor={xValue}\n                          start={d => ({\n                            xPos: xScale(xValue(d)),\n                            dotY: yScale(yValue(d)),\n                            dotCanceledY: yScale(yCancealedValue(d)),\n                          })}\n                          enter={d => ({\n                            dotY: [yScale(yValue(d))],\n                            timing: { duration: 500 },\n                          })}\n                          update={d => ({\n                            xPos: [xScale(xValue(d))],\n                            dotY: [yScale(yValue(d))],\n                            dotCanceledY: [yScale(yCancealedValue(d))],\n                            timing: { duration: 500 },\n                          })}\n                        >\n                          {nodes => (\n                            <Fragment>\n                              {nodes.map(({ key, data: d, state: { xPos, dotY, dotCanceledY } }) => {\n                                return (\n                                  <Fragment key={key}>\n                                    <circle\n                                      cx={xPos}\n                                      cy={dotY}\n                                      r={em / 4}\n                                      fill={theme.colors.spectrum[3]}\n                                    />\n                                    <circle\n                                      cx={xPos}\n                                      cy={dotCanceledY}\n                                      r={em / 4}\n                                      fill={theme.colors.spectrum[3]}\n                                    />\n                                  </Fragment>\n                                )\n                              })}\n                            </Fragment>\n                          )}\n                        </NodeGroup>\n                      </Group>\n                      <Group top={1.75 * em} left={xEnd - 16 * em}>\n                        <Group>\n                          <text>案件量</text>\n                          <rect\n                            x={4 * em}\n                            y={-1 * em}\n                            width={3 * em}\n                            height={em}\n                            fill={theme.colors.lightOrange}\n                            opacity={0.7}\n                          />\n                        </Group>\n                        <Group left={8 * em}>\n                          <text>撤銷件數</text>\n                          <rect\n                            x={5.5 * em}\n                            y={-1 * em}\n                            width={3 * em}\n                            height={em}\n                            fill={theme.colors.orange}\n                          />\n                        </Group>\n                      </Group>\n                      <Bar\n                        x={0}\n                        y={0}\n                        width={width}\n                        height={height}\n                        fill=\"transparent\"\n                        data={data}\n                        onTouchStart={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onTouchMove={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onMouseMove={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onMouseLeave={() => hideTooltip()}\n                      />\n                      {tooltipData && (\n                        <g>\n                          <circle\n                            cx={tooltipLeft}\n                            cy={tooltipTop + yStart}\n                            r={em / 2}\n                            fill={theme.colors.darkBlue}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                          <circle\n                            cx={tooltipLeft}\n                            cy={tooltipData.canceledTop + yStart}\n                            r={em / 2}\n                            fill={theme.colors.darkBlue}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                        </g>\n                      )}\n                      {tooltipData && createPortal((\n                        <TooltipBox\n                          position=\"absolute\"\n                          top={tooltipTop - 0.5 * em}\n                          left={tooltipLeft}\n                          transform=\"translateX(-50%)\"\n                          p=\"1em\"\n                          bg=\"black\"\n                          color=\"white\"\n                          whiteSpace=\"nowrap\"\n                          gradient=\"darkBlue\"\n                          borderRadius=\"0.5em\"\n                          zIndex={10}\n                          fontSize=\"0.8em\"\n                        >\n                          <Text mb=\"0.25em\">案件量 {yValue(tooltipData)}</Text>\n                          <Text>撤銷數 {yCancealedValue(tooltipData)}</Text>\n                        </TooltipBox>\n                      ), this.wrapper.current)}\n                    </Group>\n                  )\n                }}\n              </ChartBase>\n            </Fragment>\n          )}\n        </FontSizeContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport default withTooltip(IssuedChart);\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport range from 'lodash/range'\nimport { NodeGroup } from 'react-move'\nimport { format } from 'd3-format'\n\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../../components/Charts/ChartBase'\n\nconst xValue = d => d.index\nconst yValue = d => d.receivedRate\nconst pd = format('.0%')\n\nconst ReceivedChart = ({\n  data,\n  xTickFormat,\n  ...props\n}) => {\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n            const yStart = 6 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(0, data.length),\n              paddingInner: 0.2,\n            })\n            const yScale = scaleLinear({\n              range: [0, yHeight],\n              domain: [0, 1],\n            });\n            return (\n              <Group>\n                <Group top={yStart} left={xStart}>\n                  <NodeGroup\n                    data={data}\n                    keyAccessor={xValue}\n                    start={d => ({\n                      xPos: xScale(xValue(d)),\n                      y: 0,\n                    })}\n                    enter={d => ({\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                    update={d => ({\n                      xPos: [xScale(xValue(d))],\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                  >\n                    {nodes => (\n                      <Fragment>\n                        {nodes.map(({ key, data: d, state: { xPos, y } }) => {\n                          const barWidth = xScale.bandwidth()\n                          return (\n                            <g key={key}>\n                              <rect\n                                fill=\"#e2e2e3\"\n                                x={xPos}\n                                y={0}\n                                width={barWidth}\n                                height={yHeight}\n                              />\n                              <rect\n                                fill={theme.colors.lightOrange}\n                                x={xPos}\n                                y={yHeight - y}\n                                width={barWidth}\n                                height={y}\n                              />\n                              <text\n                                fontSize={1.25 * em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight - y - em}\n                                textAnchor=\"middle\"\n                              >\n                                {pd(yValue(d))}\n                              </text>\n                              <text\n                                fontSize={0.8 * em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight + 1.5 * em}\n                                textAnchor=\"middle\"\n                              >\n                                {xTickFormat(xValue(d))}\n                              </text>\n                            </g>\n                          )\n                        })}\n                      </Fragment>\n                    )}\n                  </NodeGroup>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default ReceivedChart;\n","import reduce from 'lodash/reduce'\n\nconst keys = [\n  'canceled',\n  'canceledDollar',\n  'issued',\n  'issuedDollar',\n  'received',\n  'receivedDollar',\n]\n\nexport const getBureauTotal = (data, activeType) => data.map(({ label, id, monthData }) => ({\n  label,\n  id,\n  ...keys.reduce((allData, key) => {\n    allData[key] = monthData.reduce((all, d) => all + (activeType ? d.types[activeType].data[key] : d.data[key]), 0)\n    return allData\n  }, {})\n})).map((d) => ({\n  ...d,\n  receiveRate: d.received / d.issued,\n  receiveDollarRate: d.receivedDollar / d.issuedDollar,\n}))\n\nexport const getTypes = (data, lockId) => Object.values(reduce(data, (allTypes, { monthData, id }) => {\n  if (!lockId || lockId === id) {\n    monthData.forEach(m => {\n      m.types.forEach((type) => {\n        allTypes[type.id] = allTypes[type.id] || { id: type.id, name: type.name, issued: 0, received: 0 }\n        allTypes[type.id].issued += type.data.issued\n        allTypes[type.id].received += type.data.received\n      })\n    })\n  }\n  return allTypes\n}, {}))\n\nexport const getMonthData = (data, activeType, lockId) => data.reduce((md, d) => {\n  if (!lockId || lockId === d.id) {\n    d.monthData.forEach((m) => {\n      md[m.month] = md[m.month] || { month: m.month }\n      keys.forEach((key) => {\n        md[m.month][key] = md[m.month][key] || 0\n        md[m.month][key] += (activeType ? m.types[activeType].data[key] : m.data[key])\n      }, {})\n    })\n  }\n  return md\n}, {})\n","import React, { PureComponent, createElement } from 'react';\nimport { compose } from 'redux'\nimport reduce from 'lodash/reduce'\nimport forEach from 'lodash/forEach'\nimport groupBy from 'lodash/groupBy'\n\nimport Box from '../../../components/Box'\nimport Flex from '../../../components/Flex'\nimport Toggler from '../../../components/Toggler'\n\nimport withDataState from '../../../services/api/withDataState'\n\nimport IssuedChart from './IssuedChart'\nimport ReceivedChart from './ReceivedChart'\n\nimport { getMonthData } from '../dataHandler'\n\nconst parseData = (d, initial) => {\n  const parsed = reduce(d, (va, { month, ...vv }) => {\n    Object.keys(vv).forEach(k => {\n      va[k] = va[k] || 0\n      va[k] += vv[k]\n    })\n    return va\n  }, initial)\n  parsed.receivedRate = parsed.received / parsed.issued\n  return parsed\n}\n\nclass YearByYear extends PureComponent {\n  static getDerivedStateFromProps(nextProps) {\n    const { year } = nextProps\n    return {\n      data: {\n        [year]: nextProps[`data/bureaus?year=${year}`],\n        [year - 1]: nextProps[`data/bureaus?year=${year - 1}`],\n        [year - 2]: nextProps[`data/bureaus?year=${year - 2}`],\n      }\n    }\n  }\n\n  state = {\n    chartType: 0,\n    timeType: 0,\n  }\n\n  handleToggle = key => value => this.setState({ [key]: value })\n\n  render() {\n    const { data, chartType, timeType } = this.state\n    const { year } = this.props\n    const formattedData = reduce(data, (fd, d, year) => {\n      let md = getMonthData(d.data)\n      if (timeType) {\n        md = groupBy(md, (dd) => Math.floor((dd.month - 1) / 3))\n        forEach(md, (v, i) => {\n          fd.push(parseData(v, {\n            year,\n            quarter: +i + 1,\n            index: (year - this.props.year + 2) * 4 + i * 1,\n          }))\n        })\n      } else {\n        fd.push(parseData(md, {\n          year,\n          index: year - this.props.year + 2,\n        }))\n      }\n      return fd\n    }, [])\n    const dataLength = formattedData.length\n    return (\n      <Box position=\"relative\" mx=\"4em\">\n        {createElement(chartType ? ReceivedChart : IssuedChart, {\n          key: `t-${timeType}`,\n          data: formattedData,\n          ratio: 0.66,\n          xTickFormat: d => {\n            if (timeType) {\n              const y = Math.floor(d / 4)\n              return year - (dataLength / 4 - y) + 1 + 'Q' + (d % 4 + 1)\n            }\n            return year - (dataLength - d) + 1\n          },\n        })}\n        <Flex position=\"absolute\" width={1} top=\"0\">\n          <Box>\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['案件數', '收繳率']}\n              activeIndex={chartType}\n              onToggle={this.handleToggle('chartType')}\n            />\n          </Box>\n          <Box ml=\"1em\">\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['年', '季']}\n              activeIndex={timeType}\n              onToggle={this.handleToggle('timeType')}\n            />\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default (props) => createElement(compose(\n  withDataState(`data/bureaus?year=${props.year}`),\n  withDataState(`data/bureaus?year=${props.year - 1}`),\n  withDataState(`data/bureaus?year=${props.year - 2}`),\n)(YearByYear), props);\n","import React, { createElement } from 'react';\nimport get from 'lodash/get'\n// import format from 'date-fns/format'\n\nimport Text from '../../components/Text'\nimport withDataState from '../../services/api/withDataState'\n\nconst LastUpdated = ({ lastUpdated }) => {\n  return (\n    <Text>資料更新日期：{get(lastUpdated, 'date')}</Text>\n  );\n}\n\nexport default props => createElement(withDataState('lastUpdated')(LastUpdated), props);\n","import React, { PureComponent, createElement } from 'react'\nimport { compose } from 'redux'\nimport map from 'lodash/map'\nimport last from 'lodash/last'\n\nimport Container from '../../components/Container'\nimport Box from '../../components/Box'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport YearButton from '../../components/YearButton'\nimport Toggler from '../../components/Toggler'\nimport Dropdown from '../../components/Dropdown';\nimport ModalButton from '../../components/ModalButton';\n\nimport theme, { mobileOrDesktop } from '../../components/ThemeProvider/theme';\n\nimport withBureauData from '../../services/api/withBureauData'\nimport withDataState from '../../services/api/withDataState'\n\nimport Layout from '../Layout';\nimport BubbleLine from './BubbleLine'\nimport TypeDonut from './TypeDonut'\nimport PercentBars from './PercentBars'\nimport LawTops from './LawTops'\nimport YearChart from './YearChart'\nimport AvgDays from './AvgDays'\nimport YearByYear from './YearByYear'\nimport LastUpdated from './LastUpdated'\n\nimport {\n  getBureauTotal,\n  getMonthData,\n  getTypes,\n} from './dataHandler'\n\nclass IndexPage extends PureComponent {\n  static getDerivedStateFromProps(nexProps) {\n    const { typeList, data } = nexProps\n    const mappedData = map(data, ({ id, name, monthData }) => ({\n      label: name,\n      id,\n      monthData: monthData.map(m => ({\n        ...m,\n        types: m.types.reduce((t, td) => {\n          t[td.name] = td\n          return t\n        },{})\n      }))\n    }))\n    const typeLegends = typeList.map(({ name }, i) => ({\n      label: name,\n      color: theme.colors.spectrum[theme.colors.spectrum.length - 1 - i],\n    }))\n    return { mappedData, typeLegends }\n  }\n\n  state = {\n    sortBy: 'receiveRate',\n    sortOrder: 'asc',\n    chartIndex: 0,\n    lawType: 0,\n    typeLegends: [],\n    year: last(this.props.yearsList),\n  }\n\n  handleTypeFilter = activeType => this.setState({ activeType })\n\n  handleChartToggle = chartIndex => this.setState({ chartIndex })\n\n  handleYearChange = year => {\n    const { updateParams } = this.props\n    updateParams({ year })\n    this.setState({ year })\n  }\n\n  setLawType = lawType => this.setState({ lawType })\n\n  setLock = lockId => this.setState({ lockId })\n\n  handleReset = () => this.setState({\n    lockId: null,\n    chartIndex: 0,\n    lawType: 0,\n    activeType: null,\n  })\n\n  render() {\n    const { data, typeList, yearsList: years } = this.props\n    const {\n      sortBy,\n      sortOrder,\n      chartIndex,\n      activeType,\n      mappedData,\n      year,\n      lawType,\n      typeLegends,\n      lockId,\n    } = this.state\n\n    const bureauTotal = getBureauTotal(mappedData, activeType)\n    const monthData = getMonthData(mappedData, activeType, lockId)\n    const types = getTypes(data, lockId)\n    return (\n      <Layout>\n        <Box\n          py=\"4em\"\n          backgroundImage={`linear-gradient(#fff 80%, #e0e0e4 100%)`}\n        >\n          <Container>\n            <Flex alignItems=\"center\">\n              <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">案件類別</Text>\n              <Box width=\"12em\" py=\"1em\">\n                <Dropdown\n                  placeholder=\"全部\"\n                  value={activeType}\n                  options={typeList.map(({ name }) => name)}\n                  onChange={({ value }) => this.handleTypeFilter(value)}\n                />\n              </Box>\n              <Box flex=\"1\" />\n              <LastUpdated />\n            </Flex>\n            <Flex alignItems=\"center\">\n              <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">各局處案件量分析</Text>\n              <YearButton\n                currentYear={year}\n                years={years}\n                onChange={this.handleYearChange}\n              />\n            </Flex>\n            <Box textAlign=\"right\" my=\"1em\">\n              <Button onClick={this.handleReset}>切回預設</Button>\n            </Box>\n            <BubbleLine\n              ratio={1 / 4}\n              data={bureauTotal}\n              sortBy={sortBy}\n              sortOrder={sortOrder}\n              lockId={lockId}\n              onLock={this.setLock}\n            />\n          </Container>\n        </Box>\n        <Box\n          py={mobileOrDesktop(0, '2em')}\n          gradient=\"darkBlue\"\n        >\n          <Container>\n            <Flex borderBottom=\"1px solid\">\n              <Box pl=\"1em\" pr=\"2em\" width={2 / 5} borderRight=\"1px solid\">\n                <Box position=\"relative\">\n                  {createElement(chartIndex ? PercentBars : TypeDonut , Object.assign({\n                    ratio: 0.6,\n                    data: types,\n                    legends: typeLegends,\n                    onLegendClick: this.handleTypeFilter,\n                    activeLegend: activeType,\n                  }, chartIndex ? {} : {\n                    valueGetter: d => d.issued,\n                    outerCircle: true,\n                    showLegend: true,\n                  }))}\n                  <Box position=\"absolute\" top=\"0\" left=\"0\">\n                    <Toggler activeIndex={chartIndex} onToggle={this.handleChartToggle} options={['案件數', '收繳率']} />\n                  </Box>\n                  <Box position=\"absolute\" right=\"0\" bottom=\"0\">\n                    {!chartIndex && (\n                      <ModalButton\n                        is={Button.lightBg}\n                        label=\"查看更多\"\n                        title=\"案件分類分析\"\n                      >\n                        <Box px=\"15%\">\n                          <TypeDonut\n                            ratio={1}\n                            valueGetter={d => d.issued}\n                            data={types}\n                            showPercentage\n                            legends={typeLegends}\n                            showLabel\n                          />\n                        </Box>\n                      </ModalButton>\n                    )}\n                  </Box>\n                </Box>\n              </Box>\n              <Box pl=\"2em\" pr=\"1em\" width={3 / 5}>\n                <Flex pt=\"0.5em\" pb=\"1.25em\" alignItems=\"center\" borderBottom=\"1px solid\">\n                  <Text fontSize=\"1.5em\"><Text.inline letterSpacing=\"0.15em\">違反法條</Text.inline> TOP 5</Text>\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"查看更多\"\n                    title=\"違反法條TOP10\"\n                    mx=\"2em\"\n                  >\n                    <Flex alignItems=\"center\">\n                      <Box mx=\"2em\">\n                        <Box my=\"1em\">\n                          <Button active={lawType === 0} onClick={() => this.setLawType(0)}>所有法條分析</Button>\n                        </Box>\n                        <Box my=\"1em\">\n                          <Button active={lawType === 1} onClick={() => this.setLawType(1)}>公安法條分析</Button>\n                        </Box>\n                      </Box>\n                      <Box flex=\"1\" px=\"2em\">\n                        <LawTops key={10} top={10} year={year} color=\"text\" ratio={0.64} lockId={lockId} />\n                      </Box>\n                    </Flex>\n                  </ModalButton>\n                  <Box flex=\"1\" />\n                  <AvgDays year={year} />\n                </Flex>\n                <LawTops key={5} year={year} top={5} hasLine color=\"white\" ratio={0.35} lockId={lockId} />\n              </Box>\n            </Flex>\n            <Flex px=\"5%\" py=\"2em\" alignItems=\"center\">\n              <Box px=\"2em\">\n                <YearButton\n                  justifyContent=\"center\"\n                  darkBg\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n                <Box fontSize=\"1.5em\" letterSpacing=\"0.15em\" my=\"1em\" borderBottom=\"1px solid\" pb=\"0.5rem\">月案件量分析</Box>\n                <Box textAlign=\"center\">\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"看歷年分析\"\n                    title={`${year - 2}-${year}案件量分析`}\n                  >\n                    <YearByYear year={year} />\n                  </ModalButton>\n                </Box>\n              </Box>\n              <Box flex=\"1\">\n                <YearChart ratio={1 / 5} data={monthData} />\n              </Box>\n            </Flex>\n          </Container>\n        </Box>\n      </Layout>\n    )\n  }\n}\n\n\nexport default compose(\n  withDataState('yearsList'),\n  withDataState('typeList'),\n  withBureauData,\n)(IndexPage)\n","import { createElement } from 'react'\nimport withData from './withData';\n\nexport default (SubComp) => {\n  let key = 'data/bureaus'\nconsole.log(window.__ID, window.__ID !== '00000000')\n  if (typeof window !== 'undefined' && window.__ID !== '00000000') {\n    key = `${key}/${window.__ID}`\n  }\n  return withData(key)(props => createElement(SubComp, { ...props, data: props[key] }))\n}\n","import React from 'react';\n\nimport HomePage from './containers/HomePage'\n\nfunction App() {\n  return <HomePage />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WithProvider from './with-provider'\nimport App from './App';\n\nReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('root'));\n\n"],"sourceRoot":""}