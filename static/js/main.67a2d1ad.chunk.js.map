{"version":3,"sources":["components/utils/getColor.js","components/Container.js","stores/reducers.js","components/PatternBg/index.js","containers/Layout/index.js","components/PatternBg/dot.svg","components/LineBg/line.svg","components/Text.js","components/Box.js","components/ThemeProvider/FontSizeContext.js","components/Flex.js","components/ThemeProvider/theme.js","services/api/withDataState.js","components/Button.js","components/YearButton.js","components/Toggler.js","components/Dropdown.js","hoc/withResponsive.js","components/Circle.js","components/Modal.js","components/ModalButton.js","utils/checkStore.js","utils/reducerInjectors.js","utils/injectReducer.js","services/api/withData.js","services/api/withBureauData.js","components/Charts/ChartBase.js","components/Charts/LineBreakText.js","containers/HomePage/InfoSection.js","containers/HomePage/BubbleLine.js","components/Charts/PathInterpolation.js","containers/HomePage/TypeDonut.js","containers/HomePage/PercentBars.js","services/api/withLawData.js","containers/HomePage/LawTops.js","components/Charts/TweenShape.js","containers/HomePage/YearChart.js","containers/HomePage/YearByYear/IssuedChart.js","containers/HomePage/YearByYear/ReceivedChart.js","containers/HomePage/dataHandler.js","containers/HomePage/YearByYear/index.js","containers/HomePage/LastUpdated.js","containers/HomePage/index.js","App.js","components/ThemeProvider/global-styles.js","components/ThemeProvider/index.js","utils/request.js","services/api/config.js","services/api/sagas.js","with-provider.js","stores/createStore.js","index.js","components/Link.js","components/LineBg/index.js","containers/SummaryPage/index.js","Summary.js","components/utils/blacklist.js","services/api/reducer.js","services/api/constants.js","components/utils/injectProps.js"],"names":["customColor","prop","cssProperty","style","key","Container","props","defaultProps","mx","px","width","displayName","names","createReducer","injectedReducers","combineReducers","browser","createResponsiveStateReducer","fromPairs","zip","breakpoints","map","bp","parseInt","api","PatternBg","children","backgroundImage","dot","backgroundSize","backgroundRepeat","backgroundPosition","Layout","height","minWidth","module","exports","Text","styled","tag","typography","display","space","color","position","injectProps","is","fontSize","blacklist","inline","bold","fontWeight","thin","range","forEach","h","Box","layout","zIndex","border","flex","borderRadius","opacity","variant","scale","onClick","forwardRef","ref","verticalAlign","createContext","Flex","flexbox","emToPx","em","containerWidth","mobileOrDesktop","mobile","desktop","generateFade","r","g","b","reduce","fade","merge","join","spectrum","orange","darkOrange","lightOrange","darkRed","oranges","o","c","i","primary","colors","white","black","gray","dropdownBg","textYellow","lightGray","darkGray","textBlue","darkBlue","darkerBlue","text","primaryHover","font","headerHeight","zOrder","gradients","none","params","SIG","md5","JSON","stringify","SubComp","window","WithData","state","request","skip","checkIsPending","checkIsDone","getData","status","STATUS_LOADING","STATUS_LOADED","STATUS_ERROR","setTimeout","this","data","content","textAlign","my","size","createElement","PureComponent","connect","getIn","dispatch","bindActionCreators","active","css","buttonStyle","borderColor","themeGet","disabled","ButtonBase","InButtonSpan","Button","leftIcon","rightIcon","iconSpacing","mr","ml","bg","gradient","hoverColor","hoverBg","hoverBgImg","hoverBorder","py","lightBg","theme","outline","transparent","YearButton","handleNextYear","newYear","activeYear","setState","onChange","years","handleLastYear","currentYear","darkBg","alignItems","length","prevState","findIndex","y","Toggler","poses","options","handleBound","bounds","every","Boolean","activeIndex","onToggle","FontSizeContext","Consumer","left","top","bottom","transition","transform","label","onResize","measureRef","StyledDropdown","Dropdown","CustomDropdown","isMobile","value","onBlur","placeholder","name","concat","withResponsive","WrappedComp","get","lessThan","md","Circle","pt","right","lineHeight","defaultStyles","overlay","backgroundColor","marginRight","padding","overflow","Modal","setAppElement","customStyles","title","justifyContent","pb","borderBottom","letterSpacing","p","onRequestClose","m","ModalButton","openModal","open","closeModal","isOpen","checkStore","store","shape","isFunction","subscribe","getState","replaceReducer","isObject","invariant","conformsTo","injectReducerFactory","isValid","reducer","isString","isEmpty","Reflect","has","WrappedComponent","ReducerInjector","injectors","context","injectReducer","React","Component","contextType","ReactReduxContext","hoistNonReactStatics","transformer","ids","isArray","isNumber","listMode","resources","requestParams","type","actionTypes","READ_RESOURCES_PENDING","resourceType","undefined","requestKey","resync","updateParams","checkStatus","requestStatuses","PENDING","SUCCEEDED","FAILED","withReducer","resourceReducer","comp","compose","keys","ChartBase","dimensions","handleResize","debounce","ratio","backwardAutoLineBreak","str","maxLength","fillFront","strArr","Array","from","reverse","lines","st","substr","LineBreakText","x","lineBefore","verticalCenter","maxLines","perLine","lineCount","yPos","texts","w","yStart","Math","min","yEnd","max","fill","num","format","InfoSection","labelStart","onWidthChange","prevProps","main","sub","xEnd","mainValueStart","subValueStart","mainYStart","subYStart","x1","x2","y1","y2","stroke","strokeWidth","unit","textAnchor","mainLabelStart","toString","subLabelStart","newLabelStart","emPercent","n","isNaN","isTopBureau","__BUREAU_ID","BubbleLine","wrapper","createRef","handleTooltip","event","xScale","localPoint","d","round","invert","activeId","id","handleClick","lockId","onLock","handleInfoWidthChange","newStart","sortBy","sortOrder","namedData","sortedData","loSortBy","rLabelHeight","rMax","leftLabelWidth","xStart","lableY","rateY","executedRateY","scaleLinear","domain","valueMax","issued","rScale","scalePower","exponent","to","vertical","orange6","orange3","orange4","fromOffset","orange5","toOpacity","rx","strokeLinecap","start","update","timing","duration","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","keyAccessor","cx","otherOpacity","centerR","enter","centerActive","leave","nodes","cy","pointerEvents","mixBlendMode","receiveRate","executedRate","HoverSensor","isHover","boxHeight","boxWidth","cursor","location","search","encodeURIComponent","createPortal","points","current","sum","issuedDollar","received","receivedDollar","canceled","nd","PathInterpolation","prevD","thisD","interpolator","interpolate","TypeDonut","outerShapes","handleOuterShape","legends","onLegendClick","activeLegend","valueGetter","outerCircle","showLegend","showLabel","showPercentage","totalVaue","dataLength","labelLength","getColorByName","getIndexByName","donutR","legendBottom","legend","pieValue","outerRadius","innerRadius","padAngle","pieSort","a","pie","arcs","arc","path","sideOrders","scaleLabelY","sides","groupBy","centroid","index","side","sign","distanceX","abs","distanceY","sideGroups","so","s","filteredS","filter","sd","ss","sorted","sort","slice","otherI","mapValues","scaleBand","centroidX","centroidY","dy","bandwidth","centX","centY","breakX","floor","cn","l","pd","PercentBars","dataByKey","dk","legendsLength","maxRate","ceil","LawTops","shortid","generate","year","hasLine","publicOnly","isPublic","count","law","substring","clipPath","withData","Object","assign","withLawData","animate","requestAnimationFrame","TWEEN","relative","lArcFlag","sweepFlag","TweenShape","pathRef","updatePath","parsed","SVGPathData","toAbs","commands","tweens","prevParsed","fromValues","pickBy","v","k","toValues","tickShape","tween","Tween","easing","Easing","Quadratic","InOut","onUpdate","handleUpdate","tick","stop","doUpdatePath","encoded","encodeSVGPath","setAttribute","xValue","month","yValue","YearChart","formattedData","receivedRate","yHeight","paddingInner","paddingOuter","percentYScale","valueYMax","valueYScale","barWidth","yScale","numTicksRows","numTicksColumns","columnLineStyle","numTicks","tickStroke","tickLabelProps","dx","tickFormat","dd","xPos","barHeight","dotY","barY","dotX","TooltipBox","yCancealedValue","IssuedChart","showTooltip","step","tooltipData","canceledTop","tooltipLeft","tooltipTop","xTickFormat","hideTooltip","tooltipOpen","updateTooltip","events","getFill","scalePoint","yMax","z","getZeros","dotCanceledY","whiteSpace","mb","withTooltip","ReceivedChart","getMonthData","activeType","monthData","types","mapData","t","td","parseData","initial","va","vv","YearByYear","chartType","timeType","handleToggle","fd","push","quarter","nextProps","withDataState","LastUpdated","lastUpdated","IndexPage","chartIndex","typeLegends","last","yearsList","handleTypeFilter","handleChartToggle","handleYearChange","setPublicOnly","setLock","handleReset","typeList","mappedData","bureauTotal","allData","all","executed","getBureauTotal","values","allTypes","getTypes","__CAN_BACK","history","back","pl","pr","borderRight","nexProps","Date","getFullYear","App","HomePage","createGlobalStyle","Provider","parseJSON","response","json","error","Error","statusText","url","fetch","then","API_BASE","handleRequest","handleManualRead","handleRead","apiSagas","target","onSuccess","onError","call","sendRequest","res","put","console","payload","qs","q","resourceBase","receivedDataSuccess","receivedDataError","READ_RESOURCES_SUCCEEDED","READ_RESOURCES_FAILED","takeEvery","GET_DATA","initialState","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","createResponsiveStoreEnhancer","calculateInitialState","composeEnhancers","createStore","fromJS","runSaga","run","creatStore","exec","decodeURIComponent","InitialDispatch","calculateResponsiveState","ThemeProvider","document","getElementById","require","default","ReactDOM","render","linkStyle","NomalLink","Link","line","Module","datas","flexWrap","href","__DEPARTMENT_ID","departmentId","summary","primarys","secondarys","secondary","LineBg","createAction","handleActions","setIn","getConfig"],"mappings":"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","file":"static/js/main.67a2d1ad.chunk.js","sourcesContent":["import { style } from 'styled-system';\r\n\r\nexport const customColor = (prop, cssProperty = 'color') => style ({\r\n  prop,\r\n  cssProperty,\r\n  key: 'colors',\r\n});\r\n","import React from 'react';\n\nimport Box from './Box';\n\nconst Container = (props) => <Box {...props} />;\n\nContainer.defaultProps = {\n  mx: 'auto',\n  px: ['1em', null, '2em'],\n  width: 1,\n};\n\nContainer.displayName = 'Container';\n\nexport default Container;\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux-immutable';\nimport fromPairs from 'lodash/fromPairs';\nimport zip from 'lodash/zip';\nimport { createResponsiveStateReducer } from 'redux-responsive';\n\nimport { breakpoints } from '../components/ThemeProvider/theme';\nimport api from '../services/api/reducer'\n\nconst names = [\n  'xxs',\n  'xs',\n  'sm',\n  'md',\n  'lg',\n  'xl',\n];\n\n/**\n * Creates the main reducer with the dynamically injected ones\n */\nexport default function createReducer(injectedReducers) {\n  return combineReducers({\n    browser: createResponsiveStateReducer(fromPairs(zip(names, breakpoints.map((bp) => parseInt(bp, 10) - 1)))),\n    api,\n    ...injectedReducers,\n  });\n}\n","import React from 'react';\n\nimport Box from '../Box'\nimport dot from './dot.svg'\n\nconst PatternBg = ({ children, ...props }) => (\n  <Box\n    {...props}\n    backgroundImage={`url('${dot}')`}\n  >\n    {children}\n  </Box>\n)\n\nPatternBg.defaultProps = {\n  backgroundSize: '10px',\n  backgroundRepeat: 'repeat repeat',\n  backgroundPosition: 'center',\n}\n\nexport default PatternBg;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Box from '../../components/Box';\n\nconst Layout = ({ children }) => (\n  <Box height=\"100vh\" minWidth=\"800px\">\n    {children}\n  </Box>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/media/dot.0702eca7.svg\";","module.exports = __webpack_public_path__ + \"static/media/line.280d3107.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport range from 'lodash/range';\r\nimport {\r\n  typography,\r\n  space,\r\n  color,\r\n  display,\r\n  position,\r\n} from 'styled-system';\r\nimport tag from 'clean-tag';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport injectProps from './utils/injectProps';\r\n\r\nconst Text = styled(tag)`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  ${typography}\r\n  ${display}\r\n  ${space}\r\n  ${color}\r\n  ${position}\r\n  ${injectProps('textTransform')}\r\n  ${injectProps('whiteSpace')}\r\n`;\r\n\r\nText.defaultProps = {\r\n  is: 'p',\r\n  fontSize: '1em',\r\n  // lineHeight: 1.5,\r\n  blacklist,\r\n};\r\n\r\nText.inline = (props) => <Text is=\"span\" {...props} />;\r\nText.bold = (props) => <Text fontWeight=\"bold\" {...props} />;\r\nText.thin = (props) => <Text fontWeight=\"200\" {...props} />;\r\n\r\nrange(1, 7).forEach((key) => {\r\n  const h = `h${key}`;\r\n  Text[h] = (props) => (\r\n    <Text\r\n      is={h}\r\n      fontSize={`${1 + ((6 - key) * 0.125)}em`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nText.displayName = 'Text';\r\n\r\nexport default Text;\r\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport tag from 'clean-tag';\nimport {\n  space,\n  layout,\n  typography,\n  position,\n  color,\n  borderRadius,\n  zIndex,\n  border,\n  flex,\n  opacity,\n  style,\n  backgroundImage,\n  backgroundSize,\n  backgroundPosition,\n  backgroundRepeat,\n  variant,\n} from 'styled-system';\n\nimport blacklist from './utils/blacklist';\nimport injectProps from './utils/injectProps';\n\nconst Box = styled(tag)`\n  ${space}\n  ${layout}\n  ${position}\n  ${typography}\n  ${color}\n  ${position}\n  ${zIndex}\n  ${border}\n  ${flex}\n  ${borderRadius}\n  ${opacity}\n  ${backgroundImage}\n  ${backgroundSize}\n  ${backgroundRepeat}\n  ${backgroundPosition}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${injectProps('whiteSpace')}\n  ${injectProps('overflow')}\n  ${injectProps('transform')}\n  ${injectProps('transition')}\n  ${style({\n    prop: 'zOrder',\n    cssProperty: 'zIndex',\n    key: 'zOrder',\n  })}\n  ${({ onClick }) => onClick && 'cursor: pointer;'}\n`;\n\nBox.defaultProps = {\n  blacklist,\n};\n\nBox.displayName = 'Box';\n\nBox.inline = forwardRef((props, ref) => <Box is=\"span\" ref={ref} display=\"inline-block\" verticalAlign=\"middle\" {...props} />);\n\nexport default Box;\n","import { createContext } from 'react'\n\nexport default createContext({})\n","import { flexbox } from 'styled-system';\r\nimport styled from 'styled-components';\r\n\r\nimport Box from './Box';\r\nimport blacklist from './utils/blacklist'\r\n\r\nconst Flex = styled(Box)`\r\n  ${flexbox}\r\n`;\r\n\r\nFlex.defaultProps = {\r\n  display: 'flex',\r\n  blacklist,\r\n};\r\n\r\nFlex.displayName = 'Flex';\r\n\r\nexport default Flex;\r\n","import merge from 'lodash/merge';\nimport range from 'lodash/range';\n\nconst emToPx = (em) => `${em * 16}px`;\n\nexport const breakpoints = [22, 36, 48, 62, 90, 120].map(emToPx);\nexport const containerWidth = [22, 36, 46, 58].map(emToPx);\nexport const mobileOrDesktop = (mobile, desktop) => [mobile, null, null, desktop];\n\nconst generateFade = (r, g, b) => range(10, 100, 10)\n  .reduce((fade, opacity) => merge(fade, { [opacity]: `rgba(${[r, g, b, opacity / 100].join()})` }), {});\n\n\nconst font = 'Comfortaa, Arial, \"PingFang TC\", \"HeiTi TC\", \"Microsoft JhengHei\", sans-serif';\n\nconst spectrum = [\n  '#d3b998',\n  '#a57c56',\n  '#e8c52e',\n  '#ffa329',\n  '#f2690c',\n  '#d32e02',\n]\n\nconst darkBlue = '#2d3555'\nconst darkerBlue = '#171835'\nconst textBlue = '#1E213E'\nconst textYellow = '#F2B817'\nconst dropdownBg = '#E7EAF6'\n\nconst white = '#fff';\nconst black = '#000';\nconst text = '#040000';\nconst gray = '#7d7e80'\nconst lightGray = '#c9caca'\nconst darkGray = '#4c4948'\nconst orange = spectrum[3]\nconst darkOrange = spectrum[4]\nconst lightOrange = spectrum[2]\nconst darkRed = spectrum[5]\nconst oranges = spectrum.reduce((o, c, i) => {\n  o[`orange${i + 1}`] = c;\n  return o\n}, {});\nconst primary = darkOrange;\n\nexport default {\n  colors: {\n    white,\n    black,\n    gray,\n    dropdownBg,\n    textYellow,\n    lightGray,\n    darkGray,\n    textBlue,\n    darkBlue,\n    darkerBlue,\n    orange,\n    darkOrange,\n    lightOrange,\n    darkRed,\n    text,\n    primary,\n    primaryHover: darkOrange,\n    spectrum,\n    ...oranges,\n    fade: {\n      white: generateFade(255, 255, 255),\n      black: generateFade(0, 0, 0),\n    },\n  },\n  breakpoints,\n  containerWidth,\n  font,\n  headerHeight: '5em',\n  mobileOrDesktop,\n  zOrder: range(4).map((i) => 10 ** i),\n  gradients: {\n    none: {},\n    darkBlue: {\n      backgroundImage: `linear-gradient(to right, ${darkBlue}, ${darkerBlue})`,\n      color: white,\n    },\n  }\n};\n","import React, { PureComponent, createElement } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport { getData } from './reducer'\n\nimport { STATUS_LOADED, STATUS_LOADING, STATUS_ERROR } from './constants'\n\nexport default (key, params) => {\n  const SIG = `_LAW.state.${md5(key + params ? JSON.stringify(params) : '')}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      state = {}\n\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      request = (skip) => {\n        if (!this.checkIsPending()) {\n          if (skip || !this.checkIsDone()) {\n            this.props.getData({ key, params })\n          }\n        }\n      };\n\n      checkIsPending = () => this.props.status === STATUS_LOADING\n\n      checkIsDone = () => this.props.status === STATUS_LOADED || this.props.status === STATUS_ERROR\n\n      render() {\n        const { data, status, ...props } = this.props\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...props,\n            [key]: data,\n            resync: () => this.request(true),\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      data: state.getIn(['api', key, 'data']),\n      status: state.getIn(['api', key, 'status']),\n    })\n\n    const mapDispatchToProps = dispatch => bindActionCreators({\n      getData,\n    }, dispatch)\n    return connect(mapStateToProps, mapDispatchToProps)(WithData)\n  };\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  border,\n  borderRadius,\n  backgroundImage,\n  position,\n  borderColor,\n  variant,\n} from 'styled-system';\nimport themeGet from '@styled-system/theme-get';\nimport tag from 'clean-tag';\n\nimport Box from './Box';\nimport theme from './ThemeProvider/theme';\n\nimport { customColor } from './utils/getColor';\nimport blacklist from './utils/blacklist';\n\nconst active = css`\n  ${customColor('hoverColor')};\n  ${customColor('hoverBg', 'backgroundColor')};\n  ${customColor('hoverBgImg', 'backgroundImage')};\n  ${customColor('hoverBorder', 'borderColor')};\n`;\n\nexport const buttonStyle = css`\n  padding: 0;\n  border: none;\n  font-family: inherit;\n  line-height: 1;\n  text-decoration: none;\n  ${typography}\n  ${layout}\n  ${position}\n  ${backgroundImage}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${space}\n  ${color}\n  ${border}\n  ${borderColor}\n  ${borderRadius}\n  appearance: none;\n  transition: all ${themeGet('duration', 250)}ms;\n  cursor: pointer;\n  &:hover {\n    ${props => !props.disabled && active}\n    outline: none;\n  }\n  ${props => props.active && !props.disabled && active}\n  ${props =>\n    props.disabled &&\n    `\n    cursor: not-allowed;\n    opacity: 0.5;\n  `}\n`;\n\nconst ButtonBase = styled(tag)`\n  ${buttonStyle};\n`;\n\nconst InButtonSpan = props => <Box is=\"span\" {...props} />;\n\nconst Button = ({\n  leftIcon,\n  rightIcon,\n  iconSpacing,\n  children,\n  verticalAlign,\n  ...props\n}) => (\n  <ButtonBase {...props}>\n    {leftIcon ? (\n      <Box is={leftIcon} mr={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n    <InButtonSpan verticalAlign={verticalAlign}>{children}</InButtonSpan>\n    {rightIcon ? (\n      <Box is={rightIcon} ml={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n  </ButtonBase>\n);\n\nButton.defaultProps = {\n  blacklist,\n  is: 'button',\n  border: '1px solid',\n  borderColor: 'darkBlue',\n  bg: 'darkBlue',\n  gradient: 'darkBlue',\n  color: 'white',\n  hoverColor: 'darkBlue',\n  hoverBg: 'white',\n  hoverBgImg: 'none',\n  hoverBorder: 'darkBlue',\n  px: '1.25em',\n  py: '0.5em',\n  fontWeight: 'bold',\n  iconSpacing: '0.25em',\n  borderRadius: '1.25em',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n};\n\nButton.displayName = 'Button';\n\nButton.lightBg = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"white\"\n    hoverColor=\"white\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    hoverBorder=\"white\"\n    {...props}\n  />\n);\n\nButton.border = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    borderColor=\"darkBlue\"\n    hoverColor=\"white\"\n    hoverBg=\"none\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    {...props}\n  />\n);\n\nButton.outline = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"primary\"\n    bg=\"transparent\"\n    color=\"primary\"\n    hoverColor=\"white\"\n    {...props}\n  />\n);\n\nButton.transparent = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid transparent\"\n    bg=\"transparent\"\n    color=\"text\"\n    hoverBorder=\"primary\"\n    {...props}\n  />\n);\n\nexport default Button;\n","import React, { createElement, PureComponent } from 'react';\nimport { IoMdArrowDropleft,  IoMdArrowDropright} from 'react-icons/io';\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Button from './Button'\n\nclass YearButton extends PureComponent {\n  static defaultProps = {\n    onChange: () => {},\n  }\n\n  static getDerivedStateFromProps({ currentYear, years }, prevState) {\n    return {\n      activeYear: typeof currentYear === 'undefined' ? years.length - 1 : years.findIndex(y => y === currentYear),\n    }\n  }\n\n  state = {}\n\n  handleNextYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear + 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  handleLastYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear - 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  render() {\n    const { currentYear, years, darkBg, onChange, ...props} = this.props\n    const { activeYear } = this.state\n    return (\n      <Flex alignItems=\"center\" {...props}>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: !activeYear,\n          onClick: this.handleLastYear,\n        }, <IoMdArrowDropleft size=\"1.5em\" />)}\n        <Box px=\"1.5em\" py=\"0.375em\" border=\"1px solid\" mx=\"0.5em\" borderRadius=\"0.5em\">\n          {years[activeYear]}\n        </Box>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: activeYear === years.length - 1,\n          onClick: this.handleNextYear,\n        }, <IoMdArrowDropright size=\"1.5em\" />)}\n      </Flex>\n    );\n  }\n}\n\nexport default YearButton;\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\n\nimport FontSizeContext from './ThemeProvider/FontSizeContext'\nimport Box from './Box'\n\nclass Toggler extends PureComponent {\n  state = {\n    poses: this.props.options.map(() => ({}))\n  }\n\n  poses = []\n\n  handleBound = (i, bounds) => {\n    this.poses[i] = bounds\n    if (this.poses.every(Boolean) && this.poses.length === this.props.options.length) {\n      this.setState({ poses: this.poses })\n    }\n  }\n\n  render() {\n    const { options, activeIndex, onToggle, color, bg } = this.props\n    const { poses } = this.state;\n    return (\n      <FontSizeContext.Consumer>\n      {({ em }) => (\n        <Box borderRadius=\"1.5em\" bg={bg} px=\"0.5em\">\n          <Box position=\"relative\">\n            <Box\n              position=\"absolute\"\n              left={poses[activeIndex].left - poses[0].left - em * 0.65}\n              top=\"50%\"\n              bottom=\"0\"\n              width={poses[activeIndex].width + 1.3 * em}\n              transition=\"all 0.25s\"\n            >\n              <Box py=\"1.25em\" bg={color} transform=\"translateY(-50%)\" borderRadius=\"1.25em\" />\n            </Box>\n            <Box position=\"relative\">\n              {options.map((label, i) => (\n                <Measure bounds onResize={({ bounds }) => this.handleBound(i, bounds)} key={i}>\n                  {({ measureRef }) => (\n                    <Box.inline ref={measureRef} px=\"1.25em\" py=\"0.5em\" color=\"white\" onClick={() => onToggle(i)}>\n                      {label}\n                    </Box.inline>\n                  )}\n                </Measure>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </FontSizeContext.Consumer>\n    );\n  }\n}\n\n\nToggler.defaultProps = {\n  color: 'primary',\n  bg: 'rgba(255,255,255,0.2)',\n  onToggle: () => {},\n}\n\nexport default Toggler;\n","import React from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport styled from 'styled-components';\n\nimport themeGet from '@styled-system/theme-get';\nimport Box from './Box'\n\nimport withResponsive from '../hoc/withResponsive'\n\nconst StyledDropdown = styled(Dropdown)`\n  .Dropdown-control {\n    border: 1px solid;\n    border-radius: 0.5em;\n    text-align: center;\n    background-color: white;\n    color: black;\n    font-family: inherit;\n    padding: 0.25em;\n    font-size: 1em;\n    cursor: pointer;\n    transition: none;\n  }\n  &.is-open {\n    .Dropdown-control {\n      border-radius: 0.5em 0.5em 0em 0em;\n    }\n  }\n  .Dropdown-menu {\n    border: 1px solid;\n    transform: translateY(1px);\n    border-radius: 0 0 0.5em 0.5em;\n  }\n  .Dropdown-option {\n    color: inherit;\n    text-align: center;\n    padding: 0.5em 1em;\n    border-bottom: 1px solid gray;\n    &.is-selected {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n    &:hover {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n  }\n  .Dropdown-arrow {\n    border-color: black transparent transparent;\n    top: 0.8em;\n    right: 0.5em;\n  }\n`\n\nconst CustomDropdown = ({\n  isMobile,\n  options,\n  onChange,\n  onBlur,\n  value,\n  name,\n  placeholder,\n  disabled,\n  ...props\n}) => {\n  return (\n    <Box {...props}>\n      <StyledDropdown\n        onChange={onChange}\n        options={[{ label: '全部', value: '' }].concat(options.map(value => ({ value, label: value })))}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </Box>\n  );\n};\n\nCustomDropdown.defaultProps = {\n  placeholder: '請選擇',\n  onChange: () => {}\n}\n\nexport default withResponsive(CustomDropdown);\n","import { connect } from 'react-redux';\r\n\r\nexport default (WrappedComp) => connect((state) => {\r\n  const browser = state.get('browser');\r\n  return {\r\n    browser,\r\n    isMobile: browser.lessThan.md,\r\n  };\r\n})(WrappedComp);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from './Box';\r\n\r\nconst Circle = ({ children, border, borderColor, bg, is, ...props }) => (\r\n  <Box {...props}>\r\n    <Box position=\"relative\" pt=\"100%\">\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"0\"\r\n        left=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        width={1}\r\n        borderRadius=\"50%\"\r\n        border={border}\r\n        borderColor={borderColor}\r\n        bg={bg}\r\n        is={is}\r\n      >\r\n        <Box\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          transform=\"translate(-50%, -50%)\"\r\n          position=\"absolute\"\r\n          lineHeight=\"0\"\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCircle.propTypes = {\r\n  children: PropTypes.node,\r\n  border: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bg: PropTypes.string,\r\n  is: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n  ]),\r\n};\r\n\r\nCircle.displayName = 'Circle';\r\n\r\nexport default Circle;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport merge from 'lodash/merge'\r\nimport { IoIosClose } from \"react-icons/io\";\r\n\r\nimport Box from './Box'\r\nimport Flex from './Flex'\r\nimport Text from './Text'\r\nimport Button from './Button'\r\nimport Circle from './Circle'\r\nimport theme from './ThemeProvider/theme'\r\n\r\nconst defaultStyles = {\r\n  overlay: {\r\n    zIndex: theme.zOrder[3],\r\n    backgroundColor: 'rgba(0,0,0,0.7)'\r\n  },\r\n  content: {\r\n    width: '66%',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: '1em',\r\n    border: 'none',\r\n    padding: '0',\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    overflow: 'unset',\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default ({ children, border, borderRadius, customStyles, title, ...props }) => (\r\n  <Modal\r\n    style={merge({}, defaultStyles, { content: customStyles})}\r\n    {...props}\r\n  >\r\n    <Box py=\"1.5em\">\r\n      <Flex justifyContent=\"space-between\" mx=\"2em\" pb=\"1em\" borderBottom=\"1px solid\" borderColor=\"darkBlue\" alignItems=\"center\">\r\n        <Text fontWeight=\"bold\" letterSpacing=\"0.25em\" fontSize=\"1.25em\">{title}</Text>\r\n        <Circle width=\"2em\" is={(p) => <Button borderRadius=\"50%\" px=\"0\" py=\"0\" {...p} />} onClick={props.onRequestClose}>\r\n          <IoIosClose size=\"2em\" />\r\n        </Circle>\r\n      </Flex>\r\n      <Box m=\"1.5em\" position=\"relative\">\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </Modal>\r\n)\r\n","import React, { PureComponent, Fragment, createElement } from 'react';\n\nimport Button from './Button'\nimport Modal from './Modal'\n\nclass ModalButton extends PureComponent {\n  static defaultProps = {\n    is: Button,\n  }\n\n  state = {}\n\n  openModal = () => this.setState({ open: true })\n  closeModal = () => this.setState({ open: false })\n\n  render() {\n    const { is, label, title, children, ...props } = this.props\n    const { open } = this.state\n    return (\n      <Fragment>\n        {createElement(is, {\n          onClick: this.openModal,\n          ...props\n        }, label)}\n        <Modal isOpen={open} onRequestClose={this.closeModal} title={title}>\n          {children}\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default ModalButton;\n","import conformsTo from 'lodash/conformsTo';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isObject from 'lodash/isObject';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    injectedReducers: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(src/utils...) injectors: Expected a valid redux store'\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../stores/reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function'\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => (WrappedComponent) => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n    static contextType = ReactReduxContext;\r\n    static displayName = `withReducer(${(WrappedComponent.displayName || WrappedComponent.name || 'Component')})`;\r\n\r\n    componentWillMount() {\r\n      const { injectReducer } = this.injectors;\r\n\r\n      injectReducer(key, reducer);\r\n    }\r\n\r\n    injectors = getInjectors(this.context.store)\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n","import React, { PureComponent, createElement } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { actionTypes, requestStatuses, resourceReducer } from 'redux-resource';\r\nimport get from 'lodash/get';\r\nimport isArray from 'lodash/isArray';\r\nimport isNumber from 'lodash/isNumber';\r\nimport size from 'lodash/size';\r\nimport md5 from 'blueimp-md5'\r\n\r\nimport Text from '../../components/Text';\r\nimport injectReducer from '../../utils/injectReducer';\r\n\r\nexport default (key, params, transformer) => {\r\n  const ids = (isArray(params) || isNumber(params)) ? params : '';\r\n  const listMode = !ids;\r\n  const resources = isArray(ids) ? ids : [ids];\r\n  const SIG = `_LAW.${md5(`${key}${ids}${params ? JSON.stringify(params) : ''}`)}`\r\n\r\n  return SubComp => {\r\n    if (!key) return () => null;\r\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\r\n\r\n    class WithData extends PureComponent {\r\n      componentDidMount() {\r\n        setTimeout(this.request);\r\n      }\r\n\r\n      // shouldComponentUpdate(nextProps) {\r\n      //   return get(this.props, [key, 'resources']) !== get(nextProps, [key, 'resources'])\r\n      // }\r\n\r\n      request = (skip, requestParams = params) => {\r\n        if (this.props[key]) {\r\n          if (!this.checkIsPending()) {\r\n            if (skip || !this.checkIsDone()) {\r\n              this.props.dispatch({\r\n                type: actionTypes.READ_RESOURCES_PENDING,\r\n                resourceType: key,\r\n                resources: listMode ? undefined : resources,\r\n                requestKey: listMode && `list${JSON.stringify(params)}`,\r\n                requestParams,\r\n                transformer,\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          setTimeout(this.request, 100)\r\n        }\r\n      };\r\n\r\n      resync = () => this.request(true);\r\n\r\n      updateParams = (params) => this.request(true, params);\r\n\r\n      checkStatus = status => {\r\n        if (listMode) {\r\n          return (\r\n            get(this.props, [\r\n              key,\r\n              'requests',\r\n              'list',\r\n              'status',\r\n            ]) === status\r\n          );\r\n        }\r\n        return (\r\n          get(this.props, [\r\n            key,\r\n            'meta',\r\n            resources,\r\n            'readStatus'\r\n          ]) === status\r\n        );\r\n      };\r\n\r\n      checkIsPending = () => this.checkStatus(requestStatuses.PENDING);\r\n\r\n      checkIsDone = () => this.checkStatus(requestStatuses.SUCCEEDED) || this.checkStatus(requestStatuses.FAILED);\r\n\r\n      render() {\r\n        const data = get(this.props, [key, 'resources']);\r\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\r\n        if (size(data)) {\r\n          content = createElement(SubComp, {\r\n            ...this.props,\r\n            [key]: data,\r\n            updateParams: this.updateParams,\r\n            // resync: this.resync,\r\n            // isLoading: this.checkIsPending(),\r\n          });\r\n        }\r\n        return content\r\n      }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n      [key]: state.get(key),\r\n    });\r\n\r\n    const withReducer = injectReducer({\r\n      key: key,\r\n      reducer: resourceReducer(key),\r\n    });\r\n\r\n    const comp = compose(\r\n      withReducer,\r\n      connect(mapStateToProps),\r\n    )(WithData)\r\n    if (typeof window !== 'undefined') window[SIG] = comp\r\n\r\n    return comp\r\n  };\r\n}\r\n","import { createElement } from 'react'\nimport mapValues from 'lodash/mapValues'\n\nimport withData from './withData';\n\nconst keys = [\n  'canceled',\n  'canceledDollar',\n  'issued',\n  'issuedDollar',\n  'received',\n  'receivedDollar',\n  'executed',\n]\n\nconst transformData = data => mapValues(data, d => ({\n  ...d,\n  monthData: d.monthData.map(m => ({\n    ...m,\n    data: m.types.reduce((sum, t) => {\n      keys.forEach((key) => {\n        sum[key] = sum[key] || 0\n        sum[key] += t.data[key]\n      }, {})\n      return sum\n    }, {})\n  })),\n}))\n\nexport default (SubComp) => {\n  let key = 'data/bureaus'\n\n  if (typeof window !== 'undefined' && window.__BUREAU_ID !== '00000000') {\n    key = `${key}/${window.__BUREAU_ID}`\n  }\n  return withData(key, { year: new Date().getFullYear() - 1911 })(props => createElement(SubComp, { ...props, data: transformData(props[key]) }))\n}\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\nimport debounce from 'lodash/debounce'\n\nimport Box from '../Box'\n\nclass ChartBase extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleResize = debounce(this.handleResize, 200)\n  }\n\n  state = {\n    dimensions: {},\n  }\n\n  handleResize = ({ bounds }) => this.setState({ dimensions: bounds })\n\n  render() {\n    const { children, ratio, ...props } = this.props;\n    const { width, height } = this.state.dimensions;\n    return (\n      <Measure onResize={this.handleResize} bounds>\n        {({ measureRef }) => (\n          <Box position=\"relative\" pt={`${ratio * 100}%`} {...props} ref={measureRef}>\n            {width && height && (\n              <Box\n                is=\"svg\"\n                position=\"absolute\"\n                top=\"0\"\n                left=\"0\"\n                width={width}\n                height={height}\n              >\n                {children({ width, height })}\n              </Box>\n            )}\n          </Box>\n        )}\n      </Measure>\n    );\n  }\n}\n\nChartBase.defaultProps = {\n  ratio: 1 / 3,\n}\n\nexport default ChartBase;\n","import React from 'react';\n\nfunction backwardAutoLineBreak(str, maxLength, fillFront) {\n  if (!maxLength) return [str]\n  const strArr = Array.from(str)\n  if (!fillFront) strArr.reverse()\n  let i = 0\n  const lines = strArr.reduce((lines, st) => {\n    lines[i] = lines[i] || ''\n    if (lines[i].length == maxLength) {\n      i += 1\n      lines[i] = ''\n    }\n    if (fillFront) {\n      lines[i] += st\n    } else {\n      lines[i] = st + lines[i]\n    }\n    return lines\n  }, [])\n  if (!fillFront) {\n    lines.reverse()\n  }\n  if (fillFront) {\n    const { length } = lines\n    if (lines[length - 1].length === 1) {\n      lines[length - 1] = lines[length - 2].substr(lines[length - 2].length - 1) + lines[length - 1]\n      lines[length - 2] = lines[length - 2].substr(0, lines[length - 2].length - 1)\n    }\n  } else {\n    if (lines[0].length === 1) {\n      lines[0] += lines[1][0]\n      lines[1] = lines[1].substr(1)\n    }\n  }\n  return lines\n}\n\nconst LineBreakText = ({\n  x,\n  y,\n  children,\n  fontSize,\n  maxLength,\n  lineHeight,\n  lineBefore,\n  fillFront,\n  bg,\n  style,\n  verticalCenter,\n  title,\n  maxLines,\n  ...props\n}) => {\n  if (typeof children !== 'string') {\n    return (\n      <text\n        x={x}\n        y={y}\n        fontSize={fontSize}\n        style={style}\n        {...props}\n      >\n        {children}\n      </text>\n    );\n  }\n  let perLine = maxLength\n  let lines = backwardAutoLineBreak(children, perLine, fillFront)\n  let lineCount = lines.length\n  while (lineCount > maxLines) {\n    perLine += 1\n    lines = backwardAutoLineBreak(children, perLine, fillFront)\n    lineCount = lines.length\n  }\n  const yPos = lines.map((c, i) => y + (verticalCenter && lineCount > 1 ? (0.5 * fontSize * (lineBefore ? 1 : -1)) : 0) + lineHeight * fontSize * (lineBefore ? i - lineCount + 1 : i));\n  const texts = lines.map((c, i) => (\n    <text\n      key={i}\n      x={x}\n      y={yPos[i]}\n      fontSize={fontSize}\n      style={style}\n      {...props}\n    >\n      {c}\n    </text>\n  )).concat(title && <title key=\"title\">{title}</title>)\n  return bg ? (() => {\n    const w = maxLength * fontSize\n    const yStart = Math.min(...yPos)\n    const yEnd = Math.max(...yPos)\n    return (\n      <g>\n        <rect\n          width={w}\n          height={yEnd - yStart + 1.75 * fontSize}\n          x={x - w / 2}\n          y={yStart - 1.25 * fontSize}\n          fill={bg}\n          style={style}\n        />\n        {texts}\n      </g>\n    )\n  })() : <g>{texts}</g>;\n};\n\nLineBreakText.defaultProps = {\n  lineHeight: 1.3,\n  y: 0,\n  verticalCenter: true,\n  maxLines: 3,\n}\n\nexport default LineBreakText;\n","import React, { Component } from 'react';\nimport { format } from 'd3-format'\nimport get from 'lodash/get'\n\nimport theme from '../../components/ThemeProvider/theme'\n\nconst num = format(',')\n\nclass InfoSection extends Component {\n  static getDerivedStateFromProps({\n    sub,\n    main,\n    em,\n    xEnd,\n    labelStart,\n  }) {\n    const mainValueStart = xEnd - (get(main.unit, 'length', -0.25) + 0.25) * em\n    const mainValueWidth = main.value.toString().length * 1.5 * em\n    const mainLabelStart = mainValueStart - mainValueWidth\n    const subValueStart = xEnd - (get(sub, ['unit', 'length'], -0.25) + 0.25) * em\n    const subValueWidth = get(sub, 'value', '').toString().length * 0.75 * em\n    const subLabelStart = subValueStart - subValueWidth\n    const newLabelStart = Math.min(mainLabelStart, subLabelStart)\n    return {\n      mainValueStart,\n      mainLabelStart,\n      subValueStart,\n      labelStart: newLabelStart !== labelStart ? newLabelStart : labelStart,\n    }\n  }\n\n  state = {}\n\n  componentDidMount() {\n    const { labelStart } = this.state\n    const { onWidthChange } = this.props\n    if (onWidthChange) {\n      onWidthChange(labelStart)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { labelStart } = this.state\n    const { onWidthChange } = this.props\n    if (labelStart !== prevState.labelStart && onWidthChange) {\n      onWidthChange(labelStart)\n    }\n  }\n\n  render() {\n    const {\n      y,\n      em,\n      main,\n      sub,\n      xEnd,\n    } = this.props\n    const {\n      mainValueStart,\n      subValueStart,\n      labelStart,\n    } = this.state;\n    const mainYStart = y - 0.8 * em\n    const subYStart = y + 1.5 * em\n    return (\n      <g>\n        <line\n          x1={labelStart - get(main.label, 'length') * em}\n          x2={xEnd}\n          y1={y}\n          y2={y}\n          stroke=\"black\"\n          strokeWidth=\"2\"\n        />\n        <g>\n          {main.unit && (\n            <text\n              x={xEnd}\n              y={mainYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {main.unit}\n            </text>\n          )}\n          <text\n            fill={theme.colors.primary}\n            x={mainValueStart}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={2 * em}\n          >\n            {num(main.value)}\n          </text>\n          <text\n            x={labelStart}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {main.label}\n          </text>\n        </g>\n        {sub && (\n          <g>\n            <text\n              x={xEnd}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {sub.unit}\n            </text>\n            <text\n              x={subValueStart - 0.25 * em}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n              color={theme.colors.gray}\n            >\n              {num(sub.value)}\n            </text>\n            <text\n              x={labelStart}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {sub.label}\n            </text>\n          </g>\n        )}\n      </g>\n    );\n  }\n}\n\n\nexport default InfoSection;\n","import React, { Fragment, PureComponent, createRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport { Animate, NodeGroup } from 'react-move'\nimport loSortBy from 'lodash/sortBy'\nimport { max } from 'd3-array'\nimport { format } from 'd3-format'\nimport { Bar, Circle } from '@vx/shape';\nimport { scaleLinear, scalePower } from '@vx/scale';\nimport { LinearGradient, RadialGradient } from '@vx/gradient';\nimport { localPoint } from '@vx/event';\nimport { Group } from '@vx/group';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport LineBreakText from '../../components/Charts/LineBreakText'\nimport theme from '../../components/ThemeProvider/theme'\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n\nimport InfoSection from './InfoSection'\n\nconst emPercent = (n, p = 0) => (\n  <Fragment>\n    {isNaN(n) ? '-' : format(`.${p}f`)(n * 100)}\n    <tspan fontSize=\"0.7em\">%</tspan>\n  </Fragment>\n)\n\nconst isTopBureau = window.__BUREAU_ID === '00000000'\n\nclass BubbleLine extends PureComponent {\n  static getDerivedStateFromProps({ data }) {\n    return {\n      namedData: data.reduce((nd, d) => {\n        nd[d.id] = d\n        return nd\n      }, {})\n    }\n  }\n\n  state = {\n    labelStart: 0,\n  }\n\n  wrapper = createRef()\n\n  handleTooltip = ({ event, xScale, data }) => {\n    const { x } = localPoint(event);\n    const index = Math.round(xScale.invert(x))\n    const d = data[index]\n    if (d) {\n      this.setState({ activeId: d.id })\n    } else {\n      this.setState({ activeId: null })\n    }\n  }\n\n  handleClick = () => {\n    const { activeId } = this.state\n    const { lockId, onLock } = this.props\n    if (lockId) {\n      onLock(null)\n      // this.setState({ activeId: null }, () => onLock(null))\n    } else {\n      onLock(activeId)\n    }\n  }\n\n  handleInfoWidthChange = (newStart) => {\n    this.setState(({ labelStart }) => ({ labelStart: labelStart > 0 ? Math.min(labelStart, newStart) : newStart }))\n  }\n\n  render() {\n    const {\n      data,\n      sortBy,\n      sortOrder,\n      onLock,\n      lockId,\n      ...props\n    } = this.props\n    const { activeId, namedData, labelStart } = this.state;\n    if (!data || !data.length) return null\n    const sortedData = loSortBy(data, sortBy)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase {...props}>\n            {({ width, height }) => {\n              const rLabelHeight = 2 * em\n              const rMax = height * 0.2\n              const leftLabelWidth = width * 0.075\n              const rightInfoWidth = width * 0.15\n              const xStart = leftLabelWidth + rMax\n              const xEnd = width - rMax - rightInfoWidth\n              const lableY = rLabelHeight + rMax * 2 + em * 3.5\n              const rateY = lableY + em * 3\n              const executedRateY = rateY + em * 2.5\n\n              const xScale = scaleLinear({\n                domain: [0, data.length - 1],\n                range: [xStart, xEnd]\n              })\n              const valueMax = max(data, d => d.issued)\n              const rScale = valueMax ? scalePower({\n                domain: [0, valueMax],\n                range: [0, rMax],\n                exponent: 0.5,\n              }) : () => 0;\n\n              return (\n                <Fragment>\n                  <LinearGradient from={theme.colors.darkBlue} to={theme.colors.darkerBlue} vertical={false} id=\"dark\" />\n                  <LinearGradient from={theme.colors.orange6} to={theme.colors.orange3} vertical={false} id=\"rate\" />\n                  <RadialGradient from={theme.colors.orange3} to={theme.colors.orange4} fromOffset=\"30%\" id=\"radial-fill\" />\n                  <RadialGradient from={theme.colors.orange5} to={theme.colors.orange5} toOpacity={0} id=\"radial-trans\" />\n                  <g>\n                    <rect\n                      width={leftLabelWidth}\n                      height={height - rLabelHeight / 2}\n                      x={0}\n                      y={rLabelHeight / 2}\n                      opacity={0.15}\n                      fill=\"url('#dark')\"\n                      rx={em}\n                    />\n                    {[lableY, rateY - 2 * em / 3, executedRateY - 2 * em / 3].map((y, i) => (\n                      <line\n                        key={i}\n                        x1={em}\n                        x2={leftLabelWidth - em}\n                        y1={y - em * 2 / 3}\n                        y2={y - em * 2 / 3}\n                        stroke={theme.colors.text}\n                        strokeWidth=\"1\"\n                        strokeLinecap=\"round\"\n                      />\n                    ))}\n                    {[\n                      { label: '已開案件量', y: rLabelHeight + rMax - em / 2 },\n                      { label: isTopBureau ? '局處' : '科室', y: lableY + em },\n                      { label: '收繳率', y: rateY + em / 3 },\n                      { label: '執行率', y: executedRateY + em / 3 },\n                    ].map(({ label, y }, i) => (\n                      <LineBreakText\n                        key={i}\n                        x={leftLabelWidth / 2}\n                        y={y}\n                        textAnchor=\"middle\"\n                        fontSize={1.25 * em}\n                        fontWeight=\"bold\"\n                        maxLength={3}\n                        letterSpacing=\"2\"\n                      >\n                        {label}\n                      </LineBreakText>\n                    ))}\n                  </g>\n                  <Animate\n                    start={{\n                      opacity: 1,\n                    }}\n                    update={{\n                      opacity: [(activeId || lockId) ? 0.1 : 1],\n                      timing: { duration: 250 }\n                    }}\n                  >\n                    {state => (\n                      <line\n                        x1={xStart}\n                        y1={rLabelHeight + rMax}\n                        x2={width}\n                        y2={rLabelHeight + rMax}\n                        stroke={theme.colors.lightGray}\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        {...state}\n                      />\n                    )}\n                  </Animate>\n                  <rect\n                    width={xEnd - xStart + rMax + em / 2}\n                    height={2 * em}\n                    fill=\"url('#rate')\"\n                    x={xStart - rMax / 2 - em / 2}\n                    y={rateY - em}\n                    rx={em}\n                  />\n                  {/* <rect\n                  width={xEnd - xStart + rMax}\n                  height={2 * em}\n                  fill=\"url('#rate')\"\n                  x={xStart - rMax / 2}\n                  y={executedRateY - em}\n                  rx={em}\n                /> */}\n                  <Bar\n                    x={0}\n                    y={0}\n                    width={width}\n                    height={height}\n                    fill=\"transparent\"\n                    data={data}\n                    onTouchStart={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onTouchMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseLeave={() => this.setState({ activeId: null })}\n                    onClick={this.handleClick}\n                  />\n                  <g ref={this.wrapper}>\n                    <NodeGroup\n                      // must make react-move think data had been updated, so we inject width and height here\n                      data={sortedData.map(d => ({ ...d, width, height }))}\n                      keyAccessor={d => d.label}\n                      start={(d, i) => ({\n                        cx: xScale(i),\n                        r: 0,\n                        opacity: 0.5,\n                        otherOpacity: 1,\n                        centerR: 0,\n                      })}\n                      enter={d => ({\n                        r: [rScale(d.issued)],\n                        timing: { duration: 500 },\n                      })}\n                      update={(d, i) => {\n                        let active = true\n                        let centerActive\n                        if (lockId) {\n                          active = lockId === d.id\n                          centerActive = lockId === d.id\n                        } else if (activeId) {\n                          active = activeId === d.id\n                        }\n                        return [\n                          {\n                            cx: [xScale(i)],\n                            r: [rScale(d.issued)],\n                            timing: { duration: 500 },\n                          },\n                          {\n                            opacity: [active ? 0.5 : 0.1],\n                            otherOpacity: [active ? 1 : 0.1],\n                            centerR: [centerActive ? em : 0],\n                            timing: { duration: 250 },\n                          },\n                        ]\n                      }}\n                      leave={() => ({\n                        opacity: [0],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <g>\n                          {nodes.map(({ key, data: d, state: { cx, r, opacity, otherOpacity } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rLabelHeight + rMax}\n                                  r={r}\n                                  fill=\"url('#radial-fill')\"\n                                  opacity={opacity}\n                                  style={{\n                                    pointerEvents: 'none',\n                                    mixBlendMode: 'multiply',\n                                  }}\n                                />\n                                <text\n                                  fill={theme.colors.darkGray}\n                                  x={cx}\n                                  y={rLabelHeight + rMax - Math.max(r, 0.15 * rMax) - 0.5 * em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {d.issued}\n                                </text>\n                                <line\n                                  x1={cx}\n                                  x2={cx}\n                                  y1={rLabelHeight + rMax}\n                                  y2={lableY + em}\n                                  stroke={theme.colors.lightGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <LineBreakText\n                                  x={cx}\n                                  y={lableY + em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  maxLength={3}\n                                  lineBefore\n                                  em={em}\n                                  bg=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                  verticalCenter={false}\n                                >\n                                  {d.label}\n                                </LineBreakText>\n                                <text\n                                  x={cx}\n                                  y={rateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  fill=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveRate, activeId === d.id ? '2' : '0')}\n                                </text>\n                                <text\n                                  x={cx}\n                                  y={executedRateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.executedRate, activeId === d.id ? '2' : '0')}\n                                </text>\n                              </g>\n                            );\n                          })}\n                          {nodes.map(({ key, data: d, state: { cx, otherOpacity, centerR } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rMax + rLabelHeight}\n                                  r={rMax / 25}\n                                  fill={theme.colors.darkGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <HoverSensor>\n                                  {({ isHover }) => {\n                                    const cy = rLabelHeight + rMax\n                                    const boxHeight = 2.5 * em\n                                    const boxWidth = 5 * em\n                                    return (\n                                      <g>\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR * 0.6}\n                                          fill={theme.colors.orange5}\n                                        />\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR}\n                                          fill=\"transparent\"\n                                          strokeWidth=\"2\"\n                                          stroke={theme.colors.orange5}\n                                          style={isTopBureau ? { cursor: 'pointer' } : {}}\n                                          onClick={() => {\n                                            if (isTopBureau) {\n                                              window.location.search = `?bureauId=${encodeURIComponent(d.id)}`\n                                            }\n                                          }}\n                                        />\n                                        {isTopBureau && isHover && createPortal((\n                                          <Group top={rLabelHeight + rMax} left={cx + 2 * em}>\n                                            <polygon\n                                              points={[\n                                                [-0.75 * em, 0],\n                                                [0.1 * em, -0.5 * em],\n                                                [0.1 * em, 0.5 * em]\n                                              ].map(p => p.join()).join(' ')}\n                                              fill={theme.colors.orange5}\n                                            />\n                                            <rect\n                                              x={0}\n                                              y={-boxHeight / 2}\n                                              width={boxWidth}\n                                              height={boxHeight}\n                                              fill={theme.colors.orange5}\n                                              rx={0.5 * em}\n                                            />\n                                            <text\n                                              fontSize={em}\n                                              fill=\"white\"\n                                              x={boxWidth / 2}\n                                              y={0.3*em}\n                                              textAnchor=\"middle\"\n                                            >前往局處</text>\n                                          </Group>\n                                        ), this.wrapper.current)}\n                                      </g>\n                                    )\n                                  }}\n                                </HoverSensor>\n                              </g>\n                            );\n                          })}\n                        </g>\n                      )}\n                    </NodeGroup>\n                  </g>\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 2 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].issued : data.reduce((sum, d) => sum + d.issued, 0),\n                      label: '已開案量',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].issuedDollar : data.reduce((sum, d) => sum + d.issuedDollar, 0),\n                      label: '案件金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 9.5 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].received : data.reduce((sum, d) => sum + d.received, 0),\n                      label: '收繳案件',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].receivedDollar : data.reduce((sum, d) => sum + d.receivedDollar, 0),\n                      label: '收繳金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 18 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].canceled : data.reduce((sum, d) => sum + d.canceled, 0),\n                      label: '撤銷案件',\n                      unit: '件',\n                    }}\n                  />\n                </Fragment>\n              );\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    )\n  }\n}\n\nexport default BubbleLine;\n","import React, { Component } from 'react';\n\nimport { Animate } from 'react-move'\nimport { interpolate } from 'flubber'\n\nclass PathInterpolation extends Component {\n  static getDerivedStateFromProps({ d }, { thisD }) {\n    return {\n      thisD: d,\n      prevD: thisD,\n    }\n  }\n\n  static defaultProps = {\n    duration: 200,\n  }\n\n  state = {\n    prevD: this.props.d,\n    thisD: this.props.d,\n  }\n\n  render() {\n    const { d, duration, ...props } = this.props\n    const { prevD, thisD } = this.state\n\n    if (!prevD) {\n      return (\n        <path\n          d={d}\n          {...props}\n        />\n      )\n    }\n\n    const interpolator = interpolate(prevD, thisD)\n    return (\n      <Animate\n        start={{\n          d: interpolator(1),\n        }}\n        enter={[\n          {\n            timing: { duration },\n          },\n        ]}\n        update={{\n          d: interpolator,\n          timing: { duration },\n        }}\n      >\n        {(state) => (\n          <path\n            {...state}\n            {...props}\n          />\n        )}\n      </Animate>\n    );\n  }\n}\n\nexport default PathInterpolation\n","import React, { Fragment, PureComponent } from 'react';\nimport { Group } from '@vx/group';\nimport { Pie } from '@vx/shape';\nimport { scaleBand } from '@vx/scale';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\nimport { format } from 'd3-format'\nimport groupBy from 'lodash/groupBy'\nimport reduce from 'lodash/reduce'\nimport range from 'lodash/range'\nimport mapValues from 'lodash/mapValues'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/PathInterpolation'\n\nconst p = format('.0%')\n\nconst calcSide = (centroid, index) => {\n  return {\n    side: Math.sign(centroid[0]),\n    distanceX: Math.abs(centroid[0]),\n    distanceY: centroid[1],\n    index,\n  }\n}\n\nclass TypeDonut extends PureComponent {\n  static contextType = FontSizeContext\n\n  static defaultProps = {\n    onLegendClick: () => {}\n  }\n\n  static getDerivedStateFromProps({ data, legends, valueGetter }) {\n    return {\n      totalVaue: data.reduce((sum, d) => sum + valueGetter(d), 0),\n      dataLength: data.length,\n      labelLength: Math.floor(data.length / 2) + 1,\n      getColorByName: legends.reduce((cn, l) => {\n        cn[l.label] = l.color\n        return cn\n      }, {}),\n      getIndexByName: legends.reduce((cn, l, i) => {\n        cn[l.label] = i\n        return cn\n      }, {}),\n    }\n  }\n\n  state = {}\n\n  outerShapes = []\n\n  handleOuterShape = (i, shape) => {\n    this.outerShapes[i] = shape\n  }\n\n  render() {\n    const {\n      data,\n      legends,\n      onLegendClick,\n      activeLegend,\n      valueGetter,\n      outerCircle,\n      showLegend,\n      showLabel,\n      showPercentage,\n      ...props\n    } = this.props;\n    const {\n      totalVaue,\n      dataLength,\n      labelLength,\n      getColorByName,\n      getIndexByName,\n    } = this.state;\n    const { em } = this.context\n    return (\n      <ChartBase {...props}>\n        {({ width, height }) => {\n          const donutR = height * 0.45 - (showLabel ? 8 * em : 2 * em);\n          const legendBottom = height - 4 * em\n          return (\n            <Fragment>\n              {showLegend && (\n                <g>\n                  {legends.map((legend, i) => (\n                    <Group\n                      key={i}\n                      left={em}\n                      top={legendBottom - (dataLength - 1 - i) * em * 1.75}\n                      onClick={() => onLegendClick(legend.label === activeLegend ? null : legend.label)}\n                      opacity={!activeLegend || legend.label === activeLegend ? 1 : 0.3}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <circle cx={em / 2} cy={-em * 0.3} r={em / 2} fill={legend.color} />\n                      <text x={1.75 * em} fill=\"white\" fontSize={em}>{legend.label}</text>\n                    </Group>\n                  ))}\n                </g>\n              )}\n              <Group top={height / 2} left={width / 2 + (showLegend ? 5 * em : 0)}>\n                {outerCircle && (\n                  <Fragment>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.05}\n                      innerRadius={donutR * 0.4}\n                      padAngle={0}\n                      pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                    >\n                      {pie => pie.arcs.map((arc, i) => {\n                        const d = pie.path(arc)\n                        return (\n                          <g key={`outer-${arc.data.name}-${i}`}>\n                            <path d={d} fill=\"transparent\" ref={() => this.handleOuterShape(i, d)} />\n                          </g>\n                        )\n                      })}\n                    </Pie>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.1}\n                      innerRadius={donutR * 0.3}\n                      padAngle={0}\n                    >\n                      {pie => pie.arcs.map((arc, i) => (\n                        <g key={`bg-${arc.data.name}-${i}`}>\n                          <path d={pie.path(arc)} fill=\"white\" opacity=\"0.2\" />\n                        </g>\n                      ))}\n                    </Pie>\n                  </Fragment>\n                )}\n                <Pie\n                  data={data}\n                  pieValue={valueGetter}\n                  outerRadius={donutR}\n                  innerRadius={donutR * 0.4}\n                  padAngle={0}\n                  pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                >\n                  {pie => {\n                    let sideOrders\n                    let scaleLabelY\n                    if (showLabel) {\n                      const sides = groupBy(pie.arcs.map((arc, i) => calcSide(pie.path.centroid(arc), i)), 'side')\n                      const sideGroups = reduce(sides, (so, s, i) => {\n                        const filteredS = s.filter(sd => pie.arcs[sd.index].value)\n                        let ss = so[i] ? filteredS.concat(so[i]) : filteredS\n                        if (filteredS.length > labelLength) {\n                          const sorted = filteredS.sort((a, b) => b.distanceX - a.distanceX)\n                          ss = sorted.slice(0, labelLength)\n                          const otherI = i * -1\n                          so[otherI] = (so[otherI] || []).concat(sorted.slice(labelLength))\n                        }\n                        so[i] = ss\n                        return so\n                      }, {})\n                      scaleLabelY = mapValues(sideGroups, s => scaleBand({\n                        range: [-donutR, donutR],\n                        domain: range(0, s.length),\n                      }))\n                      sideOrders = reduce(sideGroups, (so, s) => {\n                        const sorted = s.sort((a, b) => a.distanceY - b.distanceY)\n                        sorted.forEach((d, index) => {\n                          so[d.index] = { side: d.side, index }\n                        })\n                        return so\n                      }, [])\n                    }\n                    return pie.arcs.map((arc, i) => {\n                      const [centroidX, centroidY] = pie.path.centroid(arc);\n                      // const { startAngle, endAngle } = arc;\n                      // const hasSpaceForLabel = endAngle - startAngle >= 0.1;\n                      const value = valueGetter(arc.data)\n                      return (\n                        <Fragment key={`inner-${arc.data.name}-${i}`}>\n                          <HoverSensor>\n                            {({ isHover }) => (\n                              <g>\n                                <TweenShape\n                                  d={((!activeLegend && isHover) || activeLegend === arc.data.name) && this.outerShapes[i] ? this.outerShapes[i] : pie.path(arc)}\n                                  fill={getColorByName[arc.data.name]}\n                                  opacity={(!activeLegend || arc.data.name === activeLegend) ? 1 : 0.3}\n                                  onClick={() => onLegendClick(arc.data.name === activeLegend ? null : arc.data.name)}\n                                  duration={150}\n                                />\n                                {arc.value && (\n                                  <text\n                                    fill=\"white\"\n                                    x={centroidX}\n                                    y={centroidY}\n                                    dy=\".33em\"\n                                    fontSize={em}\n                                    fontWeight=\"bold\"\n                                    textAnchor=\"middle\"\n                                    style={{ pointerEvents: 'none' }}\n                                  >\n                                    {showPercentage ? p(value / totalVaue) : value}\n                                  </text>\n                                )}\n                              </g>\n                            )}\n                          </HoverSensor>\n\n                          {showLabel && (() => {\n                            const side = sideOrders[i]\n                            if (!side) return null\n                            const scale = scaleLabelY[side.side]\n                            const sign = side.side\n                            const left = (donutR + 8 * em)* sign\n                            const top = scale(side.index) + scale.bandwidth() / 2 - em / 2\n                            const centX = centroidX - left + 2 * em * sign\n                            const centY = centroidY - top\n                            const breakX = centX + Math.abs(centY) * sign\n                            return (\n                              <Fragment>\n                                <Group\n                                  left={left}\n                                  top={top}\n                                >\n                                  <line\n                                    x1={0}\n                                    x2={breakX}\n                                    y1={0}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <line\n                                    x1={centX}\n                                    y1={centY}\n                                    x2={breakX}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <text\n                                    y={1.5 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={em}\n                                    fontWeight=\"bold\"\n                                  >{arc.data.name}</text>\n                                  <text\n                                    y={-0.75 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={1.5 * em}\n                                    fill={theme.colors.primary}\n                                    fontWeight=\"bold\"\n                                  >{valueGetter(arc.data)}</text>\n                                </Group>\n                              </Fragment>\n                            )\n                          })()}\n                        </Fragment>\n                      );\n                    });\n                  }}\n                </Pie>\n              </Group>\n            </Fragment>\n          )\n        }}\n      </ChartBase>\n    );\n  }\n}\n\nexport default TypeDonut;\n","import React, { Fragment } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleLinear } from '@vx/scale';\r\nimport { Animate } from 'react-move'\r\nimport { format } from 'd3-format'\r\nimport { max } from 'd3-array'\r\n\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\n\r\nconst pd = format('.0%')\r\n\r\nconst PercentBars = ({\r\n  data,\r\n  legends,\r\n  onLegendClick,\r\n  activeLegend,\r\n  ...props\r\n}) => {\r\n  const dataByKey = data.reduce((dk, d) => {\r\n    dk[d.name] = d.issued ? d.received / d.issued : 0;\r\n    return dk\r\n  }, {})\r\n\r\n  const legendsLength = Math.max(...legends.map(l => l.label.length))\r\n  const maxRate = Math.ceil(max(legends, ({ label }) => dataByKey[label]))\r\n  return (\r\n    <FontSizeContext.Consumer>\r\n      {({ em }) => (\r\n        <ChartBase {...props}>\r\n          {({ width }) => {\r\n            const yStart = 6 * em\r\n            const xScale = scaleLinear({\r\n              range: [0, width - 3 * em - legendsLength * em * 1.25],\r\n              domain: [0, maxRate],\r\n            });\r\n            return (\r\n              <Group top={yStart}>\r\n                {legends.map(({ label, color }, i) => {\r\n                  const handleClick = () => onLegendClick(label === activeLegend ? null : label)\r\n                  return (\r\n                    <Group\r\n                      top={i * em * 2.5}\r\n                      opacity={!activeLegend || activeLegend === label ? 1 : 0.3}\r\n                      key={label + i}\r\n                    >\r\n                      <text\r\n                        fill=\"white\"\r\n                        fontSize={em}\r\n                        onClick={handleClick}\r\n                        style={{ cursor: 'pointer' }}\r\n                      >\r\n                        {label}\r\n                      </text>\r\n                      <rect\r\n                        x={legendsLength * em * 1.25}\r\n                        y={-1.25 * em}\r\n                        width={xScale(maxRate)}\r\n                        height={1.5 * em}\r\n                        fill=\"white\"\r\n                        opacity=\"0.15\"\r\n                      />\r\n                      <Animate\r\n                        start={{ width: 0 }}\r\n                        enter={{\r\n                          width: [xScale(dataByKey[label])],\r\n                          timing: { duration: 500 },\r\n                        }}\r\n                        update={{\r\n                          width: [xScale(dataByKey[label])],\r\n                          timing: { duration: 500 },\r\n                        }}\r\n                      >\r\n                        {(state) => (\r\n                          <Fragment>\r\n                            <rect\r\n                              x={legendsLength * em * 1.25}\r\n                              y={-1.25 * em}\r\n                              height={1.5 * em}\r\n                              {...state}\r\n                              fill={color}\r\n                              onClick={handleClick}\r\n                            />\r\n                            <text\r\n                              x={legendsLength * em * 1.25 + state.width + 0.5 * em}\r\n                              y=\"-.3em\"\r\n                              fill=\"white\"\r\n                              fontSize={em * 0.8}\r\n                            >\r\n                              {pd(dataByKey[label])}\r\n                            </text>\r\n                          </Fragment>\r\n                        )}\r\n                      </Animate>\r\n                    </Group>\r\n                  )\r\n                })}\r\n              </Group>\r\n            )\r\n          }}\r\n        </ChartBase>\r\n      )}\r\n    </FontSizeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default PercentBars;\r\n","import { createElement } from 'react'\r\nimport withData from './withData';\r\n\r\nexport default ({ publicOnly, ...params }, lockId) => (SubComp) => {\r\n  let key = 'data/bureaus'\r\n  if (typeof window !== 'undefined' && window.__BUREAU_ID !== '00000000') {\r\n    key = `${key}/${window.__BUREAU_ID}`\r\n  }\r\n  if (lockId) {\r\n    key = `${key}/${lockId}`\r\n  }\r\n  key = `${key}/laws`\r\n  return withData(\r\n    key,\r\n    Object.assign(publicOnly ? { publicOnly } : {}, params),\r\n    publicOnly ? d => ({ ...d, isPublic: true }) : undefined,\r\n  )(props => createElement(SubComp, { ...props, publicOnly, data: props[key] }))\r\n}\r\n","import React, { Fragment, PureComponent, createElement } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleLinear } from '@vx/scale';\r\nimport { LinearGradient } from '@vx/gradient';\r\nimport { RectClipPath } from '@vx/clip-path'\r\nimport { Animate } from 'react-move'\r\nimport sortBy from 'lodash/sortBy'\r\nimport shortid from 'shortid';\r\n\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\n// import theme from '../../components/ThemeProvider/theme'\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\nimport LineBreakText from '../../components/Charts/LineBreakText'\r\nimport withLawData from '../../services/api/withLawData'\r\n\r\nconst labelLength = 18\r\n\r\nclass LawTops extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.SIG = shortid.generate()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { year, updateParams, top } = this.props\r\n    if (prevProps.year !== year) {\r\n      updateParams({ year, top })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { hasLine, color, ratio, top, data, publicOnly } = this.props;\r\n    let sorted = sortBy(data, 'count').reverse()\r\n    if (publicOnly) sorted = sorted.filter(d => d.isPublic)\r\n    sorted = sorted.slice(0, top)\r\n    return (\r\n      <FontSizeContext.Consumer>\r\n        {({ em }) => (\r\n          <ChartBase ratio={ratio}>\r\n            {({ width }) => {\r\n              const yStart = em * 2.5\r\n              const xStart = labelLength * em * 1.1;\r\n              const xEnd = width - 3 * em - xStart\r\n              const xScale = scaleLinear({\r\n                range: [0, xEnd],\r\n                domain: [0, Math.max(...sorted.map(d => d.count))],\r\n              });\r\n              return (\r\n                <Fragment>\r\n                  <LinearGradient from=\"#ffab2a\" to=\"#ff712a\" vertical={false} id={`bar-ramp-${this.SIG}`} />\r\n                  <Group top={yStart}>\r\n                    {sorted.map((law, i) => {\r\n                      return (\r\n                        <Animate\r\n                          start={{ width: 0 }}\r\n                          enter={{\r\n                            width: [xScale(law.count)],\r\n                            timing: { duration: 200 },\r\n                          }}\r\n                          update={{\r\n                            width: [xScale(law.count)],\r\n                            timing: { duration: 200 },\r\n                          }}\r\n                          key={law.id}\r\n                        >\r\n                          {(state) => (\r\n                            <Group top={i * em * 3}>\r\n                              <LineBreakText\r\n                                fill={color}\r\n                                fontSize={em}\r\n                                maxLength={labelLength}\r\n                                fillFront\r\n                                textAnchor=\"end\"\r\n                                x={xStart - em}\r\n                                y={0.5 * em}\r\n                                title={law.name}\r\n                              >\r\n                                {law.name.length > labelLength * 2 ? law.name.substring(0, labelLength * 2 - 3).concat('...') : law.name}\r\n                              </LineBreakText>\r\n                              <RectClipPath\r\n                                id={`bar-${this.SIG}-${i}`}\r\n                                x={xStart}\r\n                                y=\"-0.5em\"\r\n                                width={state.width}\r\n                                height={1.25 * em}\r\n                              />\r\n                              <rect\r\n                                fill={`url(#bar-ramp-${this.SIG})`}\r\n                                clipPath={`url(#bar-${this.SIG}-${i})`}\r\n                                x={xStart}\r\n                                y=\"-0.5em\"\r\n                                width={xEnd}\r\n                                height={1.25 * em}\r\n                              />\r\n                              <text\r\n                                fill={color}\r\n                                x={xStart + state.width + em * 0.5}\r\n                                y=\"0.5em\"\r\n                              >{law.count}</text>\r\n                            </Group>\r\n                          )}\r\n                        </Animate>\r\n                      )\r\n                    })}\r\n                  </Group>\r\n                  {hasLine && (\r\n                    <line\r\n                      x1={xStart}\r\n                      x2={xStart}\r\n                      y1={yStart / 2}\r\n                      y2={yStart / 2 + sorted.length * em * 3}\r\n                      stroke={color}\r\n                      strokeWidth=\"1.5\"\r\n                    />\r\n                  )}\r\n                </Fragment>\r\n              )\r\n            }}\r\n          </ChartBase>\r\n        )}\r\n      </FontSizeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ({ publicOnly, ...props }) => createElement(withLawData({ top: props.top, year: props.year, publicOnly }, props.lockId)(LawTops), props);\r\n","import React, { PureComponent, createRef } from 'react';\nimport TWEEN from '@tweenjs/tween.js';\nimport { SVGPathData, encodeSVGPath } from 'svg-pathdata';\nimport pickBy from 'lodash/pickBy';\nimport size from 'lodash/size';\nimport merge from 'lodash/merge';\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\tTWEEN.update();\n}\n\nconst blacklist = {\n  type: true,\n  relative: true,\n  lArcFlag: true,\n  sweepFlag: true,\n}\n\nclass TweenShape extends PureComponent {\n  static defaultProps = {\n    duration: 500,\n  }\n\n  constructor(props) {\n    super(props);\n    const { d } = props;\n    this.prevParsed = new SVGPathData(d).toAbs().commands;\n    this.tick = [];\n    this.tickShape = [];\n    animate();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { d } = this.props;\n    if (d !== prevProps.d) this.updatePath(d);\n  }\n\n  componentWillUnmount() {\n    if (this.tweens) {\n      this.tweens.forEach((tween) => tween.stop());\n    }\n  }\n\n  pathRef = createRef()\n\n  updatePath = (d) => {\n    this.parsed = new SVGPathData(d).toAbs().commands;\n    this.tweens = this.parsed.map((to, index) => {\n      const from = this.prevParsed[index];\n      const fromValues = pickBy(from, (v, k) => !blacklist[k]);\n      const toValues = pickBy(to, (v, k) => !blacklist[k]);\n      if (size(toValues)) {\n        this.tickShape[index] = false;\n        const tween = new TWEEN.Tween(fromValues)\n          .to(toValues, this.props.duration)\n          .easing(TWEEN.Easing.Quadratic.InOut)\n          .onUpdate(this.handleUpdate(index))\n        tween.start();\n        return tween;\n      }\n      this.tick[index] = true;\n      this.tickShape[index] = true;\n      return {\n        stop: () => {},\n      };\n    });\n  }\n\n  handleUpdate = (index) => (value) => {\n    this.prevParsed[index] = merge(this.prevParsed[index] || {}, value);\n    this.tick[index] = true;\n    if (this.tick.length === this.parsed.length && this.tick.every(Boolean)) {\n      this.doUpdatePath();\n    }\n  }\n\n  doUpdatePath = () => {\n    if (this.pathRef.current) {\n      try {\n        const encoded = encodeSVGPath(this.prevParsed)\n        this.pathRef.current.setAttribute('d', encoded);\n      } catch {\n\n      }\n    }\n    this.tick = Array.from(this.tickShape)\n  }\n\n  render() {\n    const { duration, ...props } = this.props\n    return (\n      <path ref={this.pathRef} style={props.onClick ? { cursor: 'pointer' } : {}} {...props} />\n    );\n  }\n}\n\nexport default TweenShape;\n\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { LinePath, Bar } from '@vx/shape';\nimport range from 'lodash/range'\nimport map from 'lodash/map'\nimport { NodeGroup } from 'react-move'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/TweenShape'\n\nconst xValue = d => d.month\nconst yValue = d => d.issued\n\nconst YearChart = ({\n  data,\n  ...props\n}) => {\n\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n\n            const formattedData = map(data, (d, month) => ({\n              month,\n              ...d,\n              receivedRate: d.received / d.issued,\n              width,\n            }))\n            const yStart = 2 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em * 13\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(1, 13),\n              paddingInner: 0.3,\n              paddingOuter: 0.3,\n            })\n            const percentYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, 1.3],\n            });\n            const valueYMax = Math.ceil(Math.max(...formattedData.map(yValue)) / 100) * 100\n            const valueYScale = valueYMax ? scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, valueYMax],\n            }) : () => yHeight;\n            const barWidth = xScale.bandwidth()\n            return (\n              <Group top={yStart}>\n                <Group left={xStart}>\n                  <Grid\n                    top={0}\n                    left={0}\n                    xScale={xScale}\n                    yScale={percentYScale}\n                    stroke=\"white\"\n                    width={xEnd - xStart}\n                    height={yHeight}\n                    numTicksRows={3}\n                    numTicksColumns={0}\n                    columnLineStyle={{\n                      strokeWidth: 0,\n                    }}\n                  />\n                  <AxisLeft\n                    top={0}\n                    left={0}\n                    scale={percentYScale}\n                    numTicks={3}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      textAnchor: 'end',\n                      fontSize: em * 0.8,\n                      dx: '-0.25em',\n                      dy: '0.25em'\n                    })}\n                    tickFormat={d => Math.round(d * 100)}\n                  />\n                  <AxisBottom\n                    top={yHeight}\n                    left={0}\n                    scale={xScale}\n                    numTicks={12}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickFormat={d => `${d}月`}\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      fontSize: em * 0.8,\n                      textAnchor: 'middle',\n                    })}\n                  />\n                  <Group left={xStart}>\n                    <LinePath\n                      x={dd => xScale(xValue(dd)) - barWidth / 2}\n                      y={dd => valueYScale(yValue(dd))}\n                    >\n                      {({ path }) => (\n                        <TweenShape\n                          d={path(formattedData)}\n                          stroke={theme.colors.lightOrange}\n                          strokeWidth=\"1.5\"\n                          fill=\"transparent\"\n                          duration={500}\n                        />\n                      )}\n                    </LinePath>\n                    <NodeGroup\n                      data={formattedData}\n                      keyAccessor={xValue}\n                      start={d => ({\n                        xPos: xScale(xValue(d)),\n                        barHeight: 0,\n                        dotY: yHeight,\n                      })}\n                      enter={d => ({\n                        barHeight: [yHeight - (percentYScale(d.receivedRate) || yHeight)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                      update={d => ({\n                        xPos: [xScale(xValue(d))],\n                        barHeight: [yHeight - (percentYScale(d.receivedRate) || yHeight)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <Fragment>\n                          {nodes.map(({ key, data: d, state: { xPos, barHeight, dotY } }) => {\n                            const barY = yHeight - barHeight;\n                            const dotX = xPos - barWidth / 2\n                            return (\n                              <Fragment key={key}>\n                                <Bar\n                                  x={xPos - barWidth}\n                                  y={barY}\n                                  width={barWidth}\n                                  height={barHeight}\n                                  fill={theme.colors.orange}\n                                  opacity={0.5}\n                                />\n                                <circle\n                                  cx={dotX}\n                                  cy={dotY}\n                                  r={em / 3}\n                                  fill={theme.colors.orange5}\n                                />\n                                <text\n                                  x={dotX}\n                                  y={dotY - em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  fill={theme.colors.orange}\n                                >\n                                  {yValue(d)}\n                                </text>\n                              </Fragment>\n                            )\n                          })}\n                        </Fragment>\n                      )}\n                    </NodeGroup>\n                  </Group>\n                </Group>\n                <Group top={yHeight / 2 - em} left={xEnd + 5 * em}>\n                  <Group>\n                    <text>案件量</text>\n                    <line\n                      x1={4 * em}\n                      y1={-0.5 * em}\n                      x2={7 * em}\n                      y2={-0.5 * em}\n                      stroke={theme.colors.lightOrange}\n                      strokeWidth=\"1.5\"\n                    />\n                  </Group>\n                  <Group top={2.5 * em}>\n                    <text>收繳率</text>\n                    <rect\n                      x={4 * em}\n                      y={-1 * em}\n                      width={3 * em}\n                      height={em}\n                      fill={theme.colors.orange}\n                      opacity={0.5}\n                    />\n                  </Group>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default YearChart;\n","import React, { Fragment, PureComponent, createRef } from 'react';\r\nimport { createPortal } from 'react-dom'\r\nimport { Group } from '@vx/group';\r\nimport { scalePoint, scaleLinear } from '@vx/scale';\r\nimport { AxisLeft, AxisBottom } from '@vx/axis';\r\nimport { Grid } from '@vx/grid';\r\nimport { AreaClosed, Bar, Line } from '@vx/shape';\r\nimport { withTooltip } from '@vx/tooltip';\r\nimport { localPoint } from '@vx/event';\r\nimport range from 'lodash/range'\r\nimport { NodeGroup } from 'react-move'\r\nimport styled from 'styled-components';\r\n\r\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\r\nimport theme from '../../../components/ThemeProvider/theme'\r\n\r\nimport Text from '../../../components/Text'\r\nimport Box from '../../../components/Box'\r\n\r\nimport ChartBase from '../../../components/Charts/ChartBase'\r\nimport TweenShape from '../../../components/Charts/TweenShape'\r\n\r\nconst TooltipBox = styled(Box)`\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 100%;\r\n    transform: translateX(-50%);\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 0.5em solid transparent;\r\n    border-right: 0.5em solid transparent;\r\n\r\n    border-top: 0.5em solid ${theme.colors.darkerBlue};\r\n  }\r\n`\r\n\r\nconst xValue = d => d.index\r\nconst yValue = d => d.issued\r\nconst yCancealedValue = d => d.canceled\r\n\r\nconst getZeros = n => {\r\n  if (n < 10) return 0\r\n  let i = 0\r\n  while (n / (10 ** i) > 10) {\r\n    i += 1\r\n  }\r\n  return i\r\n}\r\n\r\nclass IssuedChart extends PureComponent {\r\n  wrapper = createRef()\r\n\r\n  handleTooltip = ({ event, data, xScale, yScale, xStart }) => {\r\n    const { showTooltip } = this.props;\r\n    const { x } = localPoint(event);\r\n    const index = Math.round((x - xStart) / xScale.step());\r\n    const d = data[index];\r\n    showTooltip({\r\n      tooltipData: Object.assign({ canceledTop: yScale(yCancealedValue(d)) }, d),\r\n      tooltipLeft: xScale(xValue(d)) + xStart,\r\n      tooltipTop: yScale(yValue(d)),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      xTickFormat,\r\n      tooltipOpen,\r\n      updateTooltip,\r\n      showTooltip,\r\n      hideTooltip,\r\n      tooltipData,\r\n      tooltipTop,\r\n      tooltipLeft,\r\n      events,\r\n      getFill,\r\n      ...props\r\n    } = this.props\r\n    return (\r\n      <div ref={this.wrapper}>\r\n        <FontSizeContext.Consumer>\r\n          {({ em }) => (\r\n            <Fragment>\r\n              <ChartBase {...props}>\r\n                {({ width, height }) => {\r\n                  const yStart = 6 * em\r\n                  const yEnd = height - 2 * em\r\n                  const yHeight = yEnd - yStart\r\n                  const xStart = em * 3\r\n                  const xEnd = width - 2 * em\r\n                  const xScale = scalePoint({\r\n                    range: [0, xEnd - xStart],\r\n                    domain: range(0, data.length),\r\n                    // padding: 0.2,\r\n                  })\r\n                  const yMax = Math.max(...data.map(yValue))\r\n                  const z = getZeros(yMax)\r\n                  const yScale = scaleLinear({\r\n                    range: [yHeight, 0],\r\n                    domain: [0, Math.ceil(yMax / (10 ** z)) * (10 ** z)],\r\n                  });\r\n                  return (\r\n                    <Group>\r\n                      <Group top={yStart} left={xStart}>\r\n                        <AreaClosed\r\n                          x={dd => xScale(xValue(dd))}\r\n                          y={dd => yScale(yValue(dd))}\r\n                          yScale={yScale}\r\n                        >\r\n                          {({ path }) => (\r\n                            <TweenShape\r\n                              d={path(data)}\r\n                              stroke={theme.colors.lightOrange}\r\n                              fill={theme.colors.lightOrange}\r\n                              opacity={0.7}\r\n                              duration={500}\r\n                            />\r\n                          )}\r\n                        </AreaClosed>\r\n                        <AreaClosed\r\n                          x={dd => xScale(xValue(dd))}\r\n                          y={dd => yScale(yCancealedValue(dd))}\r\n                          yScale={yScale}\r\n                        >\r\n                          {({ path }) => (\r\n                            <TweenShape\r\n                              d={path(data)}\r\n                              stroke={theme.colors.orange}\r\n                              fill={theme.colors.orange}\r\n                              duration={500}\r\n                            />\r\n                          )}\r\n                        </AreaClosed>\r\n                        <Grid\r\n                          top={0}\r\n                          left={0}\r\n                          xScale={xScale}\r\n                          yScale={yScale}\r\n                          stroke={theme.colors.gray}\r\n                          width={xEnd - xStart}\r\n                          height={yHeight}\r\n                          numTicksRows={3}\r\n                          numTicksColumns={0}\r\n                          columnLineStyle={{\r\n                            strokeWidth: 0,\r\n                          }}\r\n                        />\r\n                        <AxisLeft\r\n                          top={0}\r\n                          left={0}\r\n                          scale={yScale}\r\n                          numTicks={3}\r\n                          stroke=\"black\"\r\n                          strokeWidth={1.5}\r\n                          tickStroke=\"none\"\r\n                          tickLabelProps={() => ({\r\n                            fill: 'black',\r\n                            textAnchor: 'end',\r\n                            fontSize: em * 0.8,\r\n                            dx: '-0.25em',\r\n                            dy: '0.25em'\r\n                          })}\r\n                        />\r\n                        <AxisBottom\r\n                          top={yHeight}\r\n                          left={0}\r\n                          scale={xScale}\r\n                          numTicks={12}\r\n                          stroke=\"black\"\r\n                          strokeWidth={1.5}\r\n                          tickStroke=\"none\"\r\n                          tickFormat={xTickFormat}\r\n                          tickLabelProps={() => ({\r\n                            fill: 'black',\r\n                            fontSize: em * 0.8,\r\n                            textAnchor: 'middle',\r\n                          })}\r\n                        />\r\n                        {tooltipData && (\r\n                          <Line\r\n                            from={{ x: tooltipLeft - xStart, y: tooltipTop }}\r\n                            to={{ x: tooltipLeft - xStart, y: yHeight }}\r\n                            stroke=\"white\"\r\n                            strokeWidth={2}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                        )}\r\n                        <NodeGroup\r\n                          data={data}\r\n                          keyAccessor={xValue}\r\n                          start={d => ({\r\n                            xPos: xScale(xValue(d)),\r\n                            dotY: yScale(yValue(d)),\r\n                            dotCanceledY: yScale(yCancealedValue(d)),\r\n                          })}\r\n                          enter={d => ({\r\n                            dotY: [yScale(yValue(d))],\r\n                            timing: { duration: 500 },\r\n                          })}\r\n                          update={d => ({\r\n                            xPos: [xScale(xValue(d))],\r\n                            dotY: [yScale(yValue(d))],\r\n                            dotCanceledY: [yScale(yCancealedValue(d))],\r\n                            timing: { duration: 500 },\r\n                          })}\r\n                        >\r\n                          {nodes => (\r\n                            <Fragment>\r\n                              {nodes.map(({ key, data: d, state: { xPos, dotY, dotCanceledY } }) => {\r\n                                return (\r\n                                  <Fragment key={key}>\r\n                                    <circle\r\n                                      cx={xPos}\r\n                                      cy={dotY}\r\n                                      r={em / 4}\r\n                                      fill={theme.colors.orange5}\r\n                                    />\r\n                                    <circle\r\n                                      cx={xPos}\r\n                                      cy={dotCanceledY}\r\n                                      r={em / 4}\r\n                                      fill={theme.colors.orange5}\r\n                                    />\r\n                                  </Fragment>\r\n                                )\r\n                              })}\r\n                            </Fragment>\r\n                          )}\r\n                        </NodeGroup>\r\n                      </Group>\r\n                      <Group top={1.75 * em} left={xEnd - 16 * em}>\r\n                        <Group>\r\n                          <text>案件量</text>\r\n                          <rect\r\n                            x={4 * em}\r\n                            y={-1 * em}\r\n                            width={3 * em}\r\n                            height={em}\r\n                            fill={theme.colors.lightOrange}\r\n                            opacity={0.7}\r\n                          />\r\n                        </Group>\r\n                        <Group left={8 * em}>\r\n                          <text>撤銷件數</text>\r\n                          <rect\r\n                            x={5.5 * em}\r\n                            y={-1 * em}\r\n                            width={3 * em}\r\n                            height={em}\r\n                            fill={theme.colors.orange}\r\n                          />\r\n                        </Group>\r\n                      </Group>\r\n                      <Bar\r\n                        x={0}\r\n                        y={0}\r\n                        width={width}\r\n                        height={height}\r\n                        fill=\"transparent\"\r\n                        data={data}\r\n                        onTouchStart={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onTouchMove={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onMouseMove={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onMouseLeave={() => hideTooltip()}\r\n                      />\r\n                      {tooltipData && (\r\n                        <g>\r\n                          <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipTop + yStart}\r\n                            r={em / 2}\r\n                            fill={theme.colors.darkBlue}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                          <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipData.canceledTop + yStart}\r\n                            r={em / 2}\r\n                            fill={theme.colors.darkBlue}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                        </g>\r\n                      )}\r\n                      {tooltipData && createPortal((\r\n                        <TooltipBox\r\n                          position=\"absolute\"\r\n                          top={tooltipTop - 0.5 * em}\r\n                          left={tooltipLeft}\r\n                          transform=\"translateX(-50%)\"\r\n                          p=\"1em\"\r\n                          bg=\"black\"\r\n                          color=\"white\"\r\n                          whiteSpace=\"nowrap\"\r\n                          gradient=\"darkBlue\"\r\n                          borderRadius=\"0.5em\"\r\n                          zIndex={10}\r\n                          fontSize=\"0.8em\"\r\n                        >\r\n                          <Text mb=\"0.25em\">案件量 {yValue(tooltipData)}</Text>\r\n                          <Text>撤銷數 {yCancealedValue(tooltipData)}</Text>\r\n                        </TooltipBox>\r\n                      ), this.wrapper.current)}\r\n                    </Group>\r\n                  )\r\n                }}\r\n              </ChartBase>\r\n            </Fragment>\r\n          )}\r\n        </FontSizeContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTooltip(IssuedChart);\r\n","import React, { Fragment } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleBand, scaleLinear } from '@vx/scale';\r\nimport range from 'lodash/range'\r\nimport { NodeGroup } from 'react-move'\r\nimport { format } from 'd3-format'\r\nimport { max } from 'd3-array'\r\n\r\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\r\n\r\nimport ChartBase from '../../../components/Charts/ChartBase'\r\n\r\nconst xValue = d => d.index\r\nconst yValue = d => d.receivedRate\r\nconst pd = format('.0%')\r\n\r\nconst ReceivedChart = ({\r\n  data,\r\n  getFill,\r\n  xTickFormat,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <FontSizeContext.Consumer>\r\n      {({ em }) => (\r\n        <ChartBase {...props}>\r\n          {({ width, height }) => {\r\n            const yStart = 6 * em\r\n            const yEnd = height - 2 * em\r\n            const yHeight = yEnd - yStart\r\n\r\n            const xStart = em * 3\r\n            const xEnd = width - em\r\n            const xScale = scaleBand({\r\n              range: [0, xEnd - xStart],\r\n              domain: range(0, data.length),\r\n              paddingInner: 0.2,\r\n            })\r\n            const yScale = scaleLinear({\r\n              range: [0, yHeight],\r\n              domain: [0, Math.ceil(max(data, yValue))],\r\n            });\r\n            return (\r\n              <Group>\r\n                <Group top={yStart} left={xStart}>\r\n                  <NodeGroup\r\n                    data={data}\r\n                    keyAccessor={xValue}\r\n                    start={d => ({\r\n                      xPos: xScale(xValue(d)),\r\n                      y: 0,\r\n                    })}\r\n                    enter={d => ({\r\n                      y: [yScale(yValue(d))],\r\n                      timing: { duration: 500 },\r\n                    })}\r\n                    update={d => ({\r\n                      xPos: [xScale(xValue(d))],\r\n                      y: [yScale(yValue(d))],\r\n                      timing: { duration: 500 },\r\n                    })}\r\n                  >\r\n                    {nodes => (\r\n                      <Fragment>\r\n                        {nodes.map(({ key, data: d, state: { xPos, y } }) => {\r\n                          const barWidth = xScale.bandwidth()\r\n                          return (\r\n                            <g key={key}>\r\n                              <rect\r\n                                fill=\"#e2e2e3\"\r\n                                x={xPos}\r\n                                y={0}\r\n                                width={barWidth}\r\n                                height={yHeight}\r\n                              />\r\n                              <rect\r\n                                fill={getFill(d.index)}\r\n                                x={xPos}\r\n                                y={yHeight - y}\r\n                                width={barWidth}\r\n                                height={y}\r\n                              />\r\n                              <text\r\n                                fontSize={em}\r\n                                x={xPos + barWidth / 2}\r\n                                y={yHeight - y - em}\r\n                                textAnchor=\"middle\"\r\n                              >\r\n                                {pd(yValue(d))}\r\n                              </text>\r\n                              <text\r\n                                fontSize={0.8 * em}\r\n                                x={xPos + barWidth / 2}\r\n                                y={yHeight + 1.5 * em}\r\n                                textAnchor=\"middle\"\r\n                              >\r\n                                {xTickFormat(xValue(d))}\r\n                              </text>\r\n                            </g>\r\n                          )\r\n                        })}\r\n                      </Fragment>\r\n                    )}\r\n                  </NodeGroup>\r\n                </Group>\r\n              </Group>\r\n            )\r\n          }}\r\n        </ChartBase>\r\n      )}\r\n    </FontSizeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default ReceivedChart;\r\n","import map from 'lodash/map'\nimport reduce from 'lodash/reduce'\n\nconst keys = [\n  'canceled',\n  'canceledDollar',\n  'issued',\n  'issuedDollar',\n  'received',\n  'receivedDollar',\n  'executed',\n]\n\nexport const getBureauTotal = (data, activeType) => data.map(({ label, id, monthData }) => ({\n  label,\n  id,\n  ...keys.reduce((allData, key) => {\n    allData[key] = monthData.reduce((all, d) => all + (activeType ? d.types[activeType].data[key] : d.data[key]), 0)\n    return allData\n  }, {})\n})).map((d) => ({\n  ...d,\n  receiveRate: d.received / d.issued,\n  executedRate: d.executed / d.issued,\n}))\n\nexport const getTypes = (data, lockId) => Object.values(reduce(data, (allTypes, { monthData, id }) => {\n  if (!lockId || lockId === id) {\n    monthData.forEach(m => {\n      m.types.forEach((type) => {\n        allTypes[type.id] = allTypes[type.id] || { id: type.id, name: type.name, issued: 0, received: 0 }\n        allTypes[type.id].issued += type.data.issued\n        allTypes[type.id].received += type.data.received\n      })\n    })\n  }\n  return allTypes\n}, {}))\n\nexport const getMonthData = (data, activeType, lockId) => data.reduce((md, d) => {\n  if (!lockId || lockId === d.id) {\n    d.monthData.forEach((m) => {\n      md[m.month] = md[m.month] || { month: m.month }\n      keys.forEach((key) => {\n        md[m.month][key] = md[m.month][key] || 0\n        md[m.month][key] += (activeType ? m.types[activeType].data[key] : m.data[key])\n      }, {})\n    })\n  }\n  return md\n}, {})\n\nexport const mapData = data => map(data, ({ id, name, monthData }) => ({\n  label: name,\n  id,\n  monthData: monthData.map(m => ({\n    ...m,\n    types: m.types.reduce((t, td) => {\n      t[td.name] = td\n      return t\n    },{})\n  }))\n}))\n","import React, { PureComponent, createElement } from 'react';\nimport { compose } from 'redux'\nimport reduce from 'lodash/reduce'\nimport forEach from 'lodash/forEach'\nimport groupBy from 'lodash/groupBy'\n\nimport Box from '../../../components/Box'\nimport Flex from '../../../components/Flex'\nimport Toggler from '../../../components/Toggler'\n\nimport withDataState from '../../../services/api/withDataState'\n\nimport IssuedChart from './IssuedChart'\nimport ReceivedChart from './ReceivedChart'\n\nimport { mapData, getMonthData } from '../dataHandler'\nimport theme from '../../../components/ThemeProvider/theme';\n\nconst parseData = (d, initial) => {\n  const parsed = reduce(d, (va, { month, ...vv }) => {\n    Object.keys(vv).forEach(k => {\n      va[k] = va[k] || 0\n      va[k] += vv[k]\n    })\n    return va\n  }, initial)\n  parsed.receivedRate = parsed.received / parsed.issued\n  return parsed\n}\n\nconst colors = [\n  theme.colors.orange3,\n  theme.colors.orange5,\n  theme.colors.orange4,\n];\n\nclass YearByYear extends PureComponent {\n  static getDerivedStateFromProps(nextProps) {\n    const { year } = nextProps\n    return {\n      data: {\n        [year]: nextProps[`data/bureaus?year=${year}`],\n        [year - 1]: nextProps[`data/bureaus?year=${year - 1}`],\n        [year - 2]: nextProps[`data/bureaus?year=${year - 2}`],\n      }\n    }\n  }\n\n  state = {\n    chartType: 0,\n    timeType: 0,\n  }\n\n  handleToggle = key => value => this.setState({ [key]: value })\n\n  render() {\n    const { data, chartType, timeType } = this.state\n    const { year, activeType, lockId } = this.props\n    const formattedData = reduce(data, (fd, d, year) => {\n      let md = getMonthData(mapData(d.data), activeType, lockId)\n      if (timeType) {\n        md = groupBy(md, (dd) => Math.floor((dd.month - 1) / 3))\n        forEach(md, (v, i) => {\n          fd.push(parseData(v, {\n            year,\n            quarter: +i + 1,\n            index: (year - this.props.year + 2) * 4 + i * 1,\n          }))\n        })\n      } else {\n        fd.push(parseData(md, {\n          year,\n          index: year - this.props.year + 2,\n        }))\n      }\n      return fd\n    }, [])\n    const dataLength = formattedData.length\n    return (\n      <Box position=\"relative\" mx=\"4em\">\n        {createElement(chartType ? ReceivedChart : IssuedChart, {\n          key: `t-${timeType}`,\n          data: formattedData,\n          ratio: 0.66,\n          getFill: i => {\n            let c = i\n            if (timeType) {\n              c = Math.floor(i / 4)\n            }\n            return colors[c]\n          },\n          xTickFormat: d => {\n            if (timeType) {\n              const y = Math.floor(d / 4)\n              return year - (dataLength / 4 - y) + 1 + '第' + (d % 4 + 1) + '季'\n            }\n            return year - (dataLength - d) + 1\n          },\n        })}\n        <Flex position=\"absolute\" width={1} top=\"0\">\n          <Box>\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['案件數', '收繳率']}\n              activeIndex={chartType}\n              onToggle={this.handleToggle('chartType')}\n            />\n          </Box>\n          <Box ml=\"1em\">\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['年', '季']}\n              activeIndex={timeType}\n              onToggle={this.handleToggle('timeType')}\n            />\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default (props) => createElement(compose(\n  withDataState(`data/bureaus?year=${props.year}`),\n  withDataState(`data/bureaus?year=${props.year - 1}`),\n  withDataState(`data/bureaus?year=${props.year - 2}`),\n)(YearByYear), props);\n","import React, { createElement } from 'react';\nimport get from 'lodash/get'\n// import format from 'date-fns/format'\n\nimport Text from '../../components/Text'\nimport withDataState from '../../services/api/withDataState'\n\nconst LastUpdated = ({ lastUpdated }) => {\n  return (\n    <Text>資料更新日期：{get(lastUpdated, 'date')}</Text>\n  );\n}\n\nexport default props => createElement(withDataState('lastUpdated')(LastUpdated), props);\n","import React, { PureComponent, createElement } from 'react'\nimport { compose } from 'redux'\nimport last from 'lodash/last'\n\nimport Container from '../../components/Container'\nimport Box from '../../components/Box'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport YearButton from '../../components/YearButton'\nimport Toggler from '../../components/Toggler'\nimport Dropdown from '../../components/Dropdown';\nimport ModalButton from '../../components/ModalButton';\nimport PatternBg from '../../components/PatternBg';\n\nimport theme, { mobileOrDesktop } from '../../components/ThemeProvider/theme';\n\nimport withBureauData from '../../services/api/withBureauData'\nimport withDataState from '../../services/api/withDataState'\n\nimport Layout from '../Layout';\nimport BubbleLine from './BubbleLine'\nimport TypeDonut from './TypeDonut'\nimport PercentBars from './PercentBars'\nimport LawTops from './LawTops'\nimport YearChart from './YearChart'\n// import AvgDays from './AvgDays'\nimport YearByYear from './YearByYear'\nimport LastUpdated from './LastUpdated'\n\nimport {\n  getBureauTotal,\n  getMonthData,\n  getTypes,\n  mapData,\n} from './dataHandler'\n\nconst isTopBureau = window.__BUREAU_ID === '00000000'\n\nclass IndexPage extends PureComponent {\n  static getDerivedStateFromProps(nexProps) {\n    const { typeList, data } = nexProps\n    const mappedData = mapData(data)\n    const typeLegends = typeList.map(({ name }, i) => ({\n      label: name,\n      color: theme.colors.spectrum[theme.colors.spectrum.length - 1 - i],\n    }))\n    return { mappedData, typeLegends }\n  }\n\n  state = {\n    sortBy: 'receiveRate',\n    sortOrder: 'asc',\n    chartIndex: 0,\n    publicOnly: 0,\n    typeLegends: [],\n    year: last(this.props.yearsList),\n  }\n\n  handleTypeFilter = activeType => this.setState({ activeType })\n\n  handleChartToggle = chartIndex => this.setState({ chartIndex })\n\n  handleYearChange = year => {\n    const { updateParams } = this.props\n    updateParams({ year })\n    this.setState({ year })\n  }\n\n  setPublicOnly = publicOnly => this.setState({ publicOnly })\n\n  setLock = lockId => this.setState({ lockId })\n\n  handleReset = () => this.setState({\n    lockId: null,\n    chartIndex: 0,\n    publicOnly: 0,\n    activeType: null,\n  })\n\n  render() {\n    const { data, typeList, yearsList: years } = this.props\n    const {\n      sortBy,\n      sortOrder,\n      chartIndex,\n      activeType,\n      mappedData,\n      year,\n      publicOnly,\n      typeLegends,\n      lockId,\n    } = this.state\n\n    const bureauTotal = getBureauTotal(mappedData, activeType)\n    const monthData = getMonthData(mappedData, activeType, lockId)\n    const types = getTypes(data, lockId)\n    return (\n      <Layout>\n        <Box backgroundImage=\"linear-gradient(#fff 80%, #e0e0e4 100%)\">\n          <PatternBg pt=\"2em\" pb=\"3em\">\n            <Container>\n              <Flex alignItems=\"center\">\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">案件類別</Text>\n                <Box width=\"12em\" py=\"1em\">\n                  <Dropdown\n                    placeholder=\"全部\"\n                    value={activeType}\n                    options={typeList.map(({ name }) => name)}\n                    onChange={({ value }) => this.handleTypeFilter(value)}\n                  />\n                </Box>\n                <Box flex=\"1\" />\n                <LastUpdated />\n              </Flex>\n              <Flex alignItems=\"center\">\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">各{isTopBureau ? '局處' : '科室'}案件量分析</Text>\n                <YearButton\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n              </Flex>\n              <Box textAlign=\"right\" my=\"1em\">\n                {window.__CAN_BACK && <Button onClick={() => window.history.back()} mr=\"1em\">返回全局處</Button>}\n                <Button onClick={this.handleReset}>切回預設</Button>\n              </Box>\n              <BubbleLine\n                ratio={1 / 4}\n                data={bureauTotal}\n                sortBy={sortBy}\n                sortOrder={sortOrder}\n                lockId={lockId}\n                onLock={this.setLock}\n              />\n            </Container>\n          </PatternBg>\n        </Box>\n        <Box\n          py={mobileOrDesktop(0, '2em')}\n          gradient=\"darkBlue\"\n        >\n          <Container>\n            <Flex borderBottom=\"1px solid\">\n              <Box pl=\"1em\" pr=\"2em\" pb=\"1em\" width={2 / 5} borderRight=\"1px solid\">\n                <Box position=\"relative\">\n                  {createElement(chartIndex ? PercentBars : TypeDonut , Object.assign({\n                    ratio: 0.66,\n                    data: types,\n                    legends: typeLegends,\n                    onLegendClick: this.handleTypeFilter,\n                    activeLegend: activeType,\n                  }, chartIndex ? {} : {\n                    valueGetter: d => d.issued,\n                    outerCircle: true,\n                    showLegend: true,\n                  }))}\n                  <Box position=\"absolute\" top=\"0\" left=\"0\">\n                    <Toggler activeIndex={chartIndex} onToggle={this.handleChartToggle} options={['案件數', '收繳率']} />\n                  </Box>\n                  <Box position=\"absolute\" right=\"0\" bottom=\"0\">\n                    {!chartIndex && (\n                      <ModalButton\n                        is={Button.lightBg}\n                        label=\"查看更多\"\n                        title=\"案件分類分析\"\n                      >\n                        <Box px=\"10%\">\n                          <TypeDonut\n                            ratio={0.7}\n                            valueGetter={d => d.issued}\n                            data={types}\n                            showPercentage\n                            legends={typeLegends}\n                            showLabel\n                          />\n                        </Box>\n                      </ModalButton>\n                    )}\n                  </Box>\n                </Box>\n              </Box>\n              <Box pl=\"2em\" pr=\"1em\" width={3 / 5}>\n                <Flex pt=\"0.5em\" pb=\"1.25em\" alignItems=\"center\" borderBottom=\"1px solid\">\n                  <Text fontSize=\"1.5em\"><Text.inline letterSpacing=\"0.15em\">違反法條</Text.inline> TOP 5</Text>\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"查看更多\"\n                    title=\"違反法條TOP10\"\n                    mx=\"2em\"\n                  >\n                    <Flex alignItems=\"center\">\n                      <Box mx=\"2em\">\n                        <Box my=\"1em\">\n                          <Button active={publicOnly === 0} onClick={() => this.setPublicOnly(0)}>所有法條分析</Button>\n                        </Box>\n                        <Box my=\"1em\">\n                          <Button active={publicOnly === true} onClick={() => this.setPublicOnly(true)}>公安法條分析</Button>\n                        </Box>\n                      </Box>\n                      <Box flex=\"1\" px=\"2em\">\n                        <LawTops key={10} top={10} year={year} color=\"text\" ratio={0.77} publicOnly={publicOnly} lockId={lockId} />\n                      </Box>\n                    </Flex>\n                  </ModalButton>\n                  {/* <Box flex=\"1\" /> */}\n                  {/* <AvgDays year={year} /> */}\n                </Flex>\n                <LawTops key={5} year={year} top={5} hasLine color=\"white\" ratio={0.35} lockId={lockId} />\n              </Box>\n            </Flex>\n            <Flex px=\"5%\" py=\"2em\" alignItems=\"center\">\n              <Box px=\"2em\">\n                <YearButton\n                  justifyContent=\"center\"\n                  darkBg\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n                <Box fontSize=\"1.5em\" letterSpacing=\"0.15em\" my=\"1em\" borderBottom=\"1px solid\" pb=\"0.5rem\">月案件量分析</Box>\n                <Box textAlign=\"center\">\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"看歷年分析\"\n                    title={`${year - 2}-${year}案件量分析`}\n                  >\n                    <YearByYear year={year} activeType={activeType} lockId={lockId} />\n                  </ModalButton>\n                </Box>\n              </Box>\n              <Box flex=\"1\">\n                <YearChart ratio={1 / 5} data={monthData} />\n              </Box>\n            </Flex>\n          </Container>\n        </Box>\n      </Layout>\n    )\n  }\n}\n\n\nexport default compose(\n  withDataState('yearsList'),\n  withDataState('typeList'),\n  withBureauData,\n)(IndexPage)\n","import React from 'react';\n\nimport HomePage from './containers/HomePage'\n\nfunction App() {\n  return <HomePage />\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport { fontSize } from 'styled-system'\n\nimport theme from './theme';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Comfortaa:400,700&display=swap');\n  body {\n    font-family: ${theme.font};\n    ${fontSize};\n    min-width: 100%;\n    min-height: 100%;\n    color: ${theme.colors.text};\n  }\n`;\n","import React, { Fragment } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport 'sanitize.css';\nimport { SizeMe } from 'react-sizeme'\n\nimport FontSizeContext from './FontSizeContext'\nimport GlobalStyles from './global-styles';\n\nimport theme from './theme';\n\nexport default ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <SizeMe>\n      {({ size: { width } }) => {\n        const fontSize = Math.round(Math.max(width, 800) / 94)\n        return (\n          <div>\n            <FontSizeContext.Provider value={{ em: fontSize }}>\n              <Fragment>\n                <GlobalStyles fontSize={fontSize} />\n                {children}\n              </Fragment>\n            </FontSizeContext.Provider>\n          </div>\n        )\n      }}\n    </SizeMe>\n  </ThemeProvider>\n);\n","/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}\n","// const BASE_URI = 'https://relab.cc/law-api-test/v2';\nconst BASE_URI = 'https://59.120.75.229/GTFK/v2';\n\n// const BASE = process.env.NODE_ENV === 'production' ? BASE_URI : BASE_URI_LOCAL;\n\nexport const API_BASE = BASE_URI;\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { actionTypes } from 'redux-resource';\r\nimport reduce from 'lodash/reduce'\r\nimport isObject from 'lodash/isObject'\r\n\r\nimport sendRequest from '../../utils/request';\r\n\r\nimport { API_BASE } from './config';\r\nimport { GET_DATA, receivedDataSuccess, receivedDataError } from './reducer';\r\n\r\nfunction* handleRequest(target, onSuccess, onError) {\r\n  try {\r\n    const res = yield call(sendRequest, target);\r\n    yield put(onSuccess(res));\r\n  } catch (error) {\r\n    console.error(error)\r\n    yield put(onError(error));\r\n  }\r\n}\r\n\r\nfunction* handleManualRead({ payload: { key, params } }) {\r\n  const qs = isObject(params) ? reduce(params, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\r\n  const resourceBase = `${API_BASE}/${key}${qs}`;\r\n  yield call(\r\n    handleRequest,\r\n    resourceBase,\r\n    (data) => receivedDataSuccess({\r\n      key,\r\n      data,\r\n    }),\r\n    // onError\r\n    () => receivedDataError({ key }),\r\n  );\r\n}\r\n\r\nfunction* handleRead({ resourceType, resources, requestKey, requestParams, transformer }) {\r\n  const qs = isObject(requestParams) ? reduce(requestParams, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\r\n  const resourceBase = `${API_BASE}/${resourceType}${qs}`;\r\n  if (resources) {\r\n    yield all(\r\n      resources.map(id =>\r\n        call(\r\n          handleRequest,\r\n          // target\r\n          `${resourceBase}/${id}`,\r\n          // onSuccess\r\n          data => ({\r\n            type: actionTypes.READ_RESOURCES_SUCCEEDED,\r\n            resourceType,\r\n            resources: [transformer ? transformer(data) : data],\r\n          }),\r\n          // onError\r\n          () => ({\r\n            type: actionTypes.READ_RESOURCES_FAILED,\r\n            resourceType,\r\n            resources: [id],\r\n          }),\r\n        ),\r\n      ),\r\n    );\r\n  } else {\r\n    yield call(\r\n      handleRequest,\r\n      resourceBase,\r\n      ({ data }) => ({\r\n        type: actionTypes.READ_RESOURCES_SUCCEEDED,\r\n        resourceType,\r\n        resources: transformer ? data.map(transformer) : data,\r\n        requestKey,\r\n      }),\r\n      // onError\r\n      () => ({\r\n        type: actionTypes.READ_RESOURCES_FAILED,\r\n        resourceType,\r\n        requestKey,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nexport default function* apiSagas() {\r\n  yield all([\r\n    takeEvery(actionTypes.READ_RESOURCES_PENDING, handleRead),\r\n    takeEvery(GET_DATA, handleManualRead),\r\n  ]);\r\n}\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux';\nimport { calculateResponsiveState } from 'redux-responsive'\n\nimport ThemeProvider from './components/ThemeProvider';\nimport creatStore from './stores/createStore';\n\nconst store = creatStore();\n\n// window.__DEPARTMENT_ID = '1631100000000'\nwindow.__BUREAU_ID = window.__BUREAU_ID || '00000000'\nif (window.location.search) {\n  const res = /bureauId=([^&]+)/g.exec(window.location.search)\n  if (res && res[1]) {\n    window.__BUREAU_ID = decodeURIComponent(res[1])\n    window.__CAN_BACK = true\n  }\n}\n\nclass InitialDispatch extends Component {\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      store.dispatch(calculateResponsiveState(window))\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default ({ children }) => (\n  <Provider store={store}>\n    <InitialDispatch>\n      <ThemeProvider>{children}</ThemeProvider>\n    </InitialDispatch>\n  </Provider>\n)\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport { createResponsiveStoreEnhancer } from 'redux-responsive';\nimport createSagaMiddleware from 'redux-saga';\n\nimport apiSagas from '../services/api/sagas';\nimport createReducer from './reducers';\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    createResponsiveStoreEnhancer({ calculateInitialState: false }),\n  ];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers =\n    (process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n  /* eslint-enable */\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n\n  store.runSaga = sagaMiddleware.run;\n  sagaMiddleware.run(apiSagas);\n  store.injectedReducers = {}; // Reducer registry\n\n  return store;\n}\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WithProvider from './with-provider'\n\nif (document.getElementById('root')) {\n  const App = require('./App').default;\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('root'));\n}\n\nif (document.getElementById('summary')) {\n  const App = require('./Summary').default;\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('summary'));\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  color,\n  letterSpacing,\n  display,\n} from 'styled-system';\nimport tag from 'clean-tag';\n\nimport blacklist from './utils/blacklist';\nimport { customColor } from './utils/getColor';\n\nconst linkStyle = css`\n  ${fontSize}\n  ${space}\n  ${color}\n  ${fontWeight}\n  ${lineHeight}\n  ${letterSpacing}\n  ${display}\n  text-decoration: none;\n  ${({ disabled }) => disabled && `\n    pointer-events: none;\n  `}\n  &:hover {\n    ${customColor('hoverColor')};\n  }\n`;\n\nconst NomalLink = styled(tag)`\n  ${linkStyle}\n`;\n\n\nconst Link = ({ blacklist, ...props }) => {\n  return (\n    <NomalLink\n      is=\"a\"\n      target=\"_blank\"\n      blacklist={blacklist}\n      color=\"text\"\n      { ...props }\n    />\n  );\n};\n\nLink.displayName = 'Link';\n\nLink.defaultProps = {\n  blacklist,\n};\n\nexport default Link;\n","import React from 'react';\r\n\r\nimport Box from '../Box'\r\nimport line from './line.svg'\r\n\r\nconst PatternBg = ({ children, ...props }) => (\r\n  <Box\r\n    {...props}\r\n    backgroundImage={`url('${line}')`}\r\n  >\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nPatternBg.defaultProps = {\r\n  backgroundSize: '20px',\r\n  backgroundRepeat: 'repeat no-repeat',\r\n  backgroundPosition: 'center',\r\n}\r\n\r\nexport default PatternBg;\r\n","import React from 'react'\n\nimport Container from '../../components/Container'\nimport Box from '../../components/Box'\nimport Link from '../../components/Link'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport PatternBg from '../../components/PatternBg';\nimport LineBg from '../../components/LineBg';\n\nimport withDataState from '../../services/api/withDataState'\n\nimport Layout from '../Layout';\n// {label.replace(String.fromCharCode(92).concat('n'), '\\n')}\n\nconst Module = ({ color, value, label, unit, datas, ...props}) => (\n  <Flex flexWrap=\"wrap\" px=\"4em\" {...props}>\n    {datas.map(({ value, label, unit, url }, index) => (\n      <Box pr=\"1em\" width={1 / 3} key={index}>\n        <Box bg=\"#f4f4f4\" my=\"1em\" borderRadius=\"5em\" py=\"1.5em\">\n          <Flex alignItems=\"center\" px=\"2em\">\n            <Box width=\"7.5em\" textAlign=\"right\" borderRight=\"2px solid\" pr=\"1em\" py=\"0.5em\">\n              <Text.inline fontSize=\"2em\" color={color}>{value}</Text.inline>\n              <Text.inline pl=\"0.25em\">{unit}</Text.inline>\n            </Box>\n            <Box flex=\"1\" pl=\"1em\" py=\"0.5em\">\n              {url ? <Link href={url}>{label}</Link> : label}\n            </Box>\n          </Flex>\n        </Box>\n      </Box>\n    ))}\n  </Flex>\n)\n\nconst SummaryPage = ({ summary }) => {\n  const primarys = summary.primary;\n  const secondarys = summary.secondary\n\n  return (\n    <Layout>\n      <PatternBg py=\"2em\">\n        <Container>\n          <Module datas={primarys} color=\"textYellow\" my=\"2em\" />\n          <LineBg>\n            <Box height=\"2em\" />\n          </LineBg>\n          <Module datas={secondarys} color=\"textBlue\" />\n        </Container>\n      </PatternBg>\n    </Layout>\n  )\n}\n\n\nexport default withDataState('summary', window.__DEPARTMENT_ID && { departmentId: window.__DEPARTMENT_ID })(SummaryPage)\n","import React from 'react';\n\nimport SummaryPage from './containers/SummaryPage'\n\nfunction App() {\n  return <SummaryPage />\n}\n\nexport default App;\n","const allProps = [\n  'margin',\n  'm',\n  'marginTop',\n  'mt',\n  'marginBottom',\n  'mb',\n  'marginLeft',\n  'ml',\n  'marginRight',\n  'mr',\n  'mx',\n  'my',\n  'padding',\n  'p',\n  'paddingTop',\n  'pt',\n  'paddingBottom',\n  'pb',\n  'paddingLeft',\n  'pl',\n  'paddingRight',\n  'pr',\n  'px',\n  'py',\n  'width',\n  'fontSize',\n  'fontFamily',\n  'fontWeight',\n  'lineHeight',\n  'textAlign',\n  'fontStyle',\n  'letterSpacing',\n  'display',\n  'maxWidth',\n  'minWidth',\n  'height',\n  'maxHeight',\n  'minHeight',\n  'color',\n  'backgroundColor',\n  'bg',\n  'verticalAlign',\n  'alignItems',\n  'alignContent',\n  'justifyItems',\n  'justifyContent',\n  'flexWrap',\n  'flexBasis',\n  'flexDirection',\n  'flex',\n  'justifySelf',\n  'alignSelf',\n  'order',\n  'gridGap',\n  'gridColumnGap',\n  'gridRowGap',\n  'gridColumn',\n  'gridRow',\n  'gridAutoFlow',\n  'gridAutoColumns',\n  'gridAutoRows',\n  'gridTemplateColumns',\n  'gridTemplateRows',\n  'gridTemplateAreas',\n  'gridArea',\n  'border',\n  'borderWidth',\n  'borderStyle',\n  'borderColor',\n  'borderTop',\n  'borderRight',\n  'borderBottom',\n  'borderLeft',\n  'borderRadius',\n  'boxShadow',\n  'opacity',\n  'overflow',\n  'background',\n  'backgroundImage',\n  'backgroundSize',\n  'backgroundPosition',\n  'backgroundRepeat',\n  'position',\n  'zIndex',\n  'top',\n  'right',\n  'bottom',\n  'left',\n];\n\nexport default [\n  ...allProps,\n  'transform',\n  'transition',\n  'overflow',\n  'opacity',\n  'alpha',\n  'hoverColor',\n  'hoverBg',\n  'hoverBorder',\n  'hoverBgImg',\n  'zOrder',\n  'verticalAlign',\n  'whiteSpace',\n  'dispatch',\n  'isMobile',\n  'browser',\n  'gradient',\n];\n","import { fromJS } from 'immutable';\nimport { createAction, handleActions } from 'redux-actions'\n\nimport {\n  STATUS_ERROR,\n  STATUS_LOADED,\n  STATUS_LOADING,\n} from './constants'\n\nexport const GET_DATA = 'API/GET_DATA'\n\nexport const getData = createAction(GET_DATA)\nexport const receivedDataSuccess = createAction('API/RECEIVED_DATA_SUCCESS')\nexport const receivedDataError = createAction('API/RECEIVED_DATA_ERROR')\n\nconst initialState = fromJS({})\n\nconst reducer = handleActions({\n  [getData]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_LOADING),\n  [receivedDataSuccess]: (state, { payload: { key, data } }) => state\n    .setIn([key, 'status'], STATUS_LOADED)\n    .setIn([key, 'data'], data),\n  [receivedDataError]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_ERROR),\n}, initialState)\n\nexport default reducer\n","export const STATUS_LOADING = 'STATUS_LOADING';\nexport const STATUS_LOADED = 'STATUS_LOADED';\nexport const STATUS_ERROR = 'STATUS_ERROR';\n","import merge from 'lodash/merge';\r\nimport { style } from 'styled-system';\r\n\r\nconst getConfig = (key, options) => merge({\r\n  prop: key,\r\n  cssProperty: key,\r\n}, options);\r\n\r\nconst injectProps = (key, options) => style(getConfig(key, options));\r\n\r\nexport default injectProps;\r\n"],"sourceRoot":""}