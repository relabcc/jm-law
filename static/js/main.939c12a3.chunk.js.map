{"version":3,"sources":["components/Container.js","stores/reducers.js","components/PatternBg/index.js","containers/Layout/index.js","components/PatternBg/dot.svg","components/Text.js","components/LineBg/line.svg","components/ThemeProvider/FontSizeContext.js","components/Box.js","components/Flex.js","components/ThemeProvider/theme.js","services/api/withDataState.js","components/utils/getColor.js","components/Button.js","components/YearButton.js","components/Toggler.js","components/Dropdown.js","hoc/withResponsive.js","components/Circle.js","components/Modal.js","components/ModalButton.js","utils/checkStore.js","utils/reducerInjectors.js","utils/injectReducer.js","services/api/withData.js","services/api/withBureauData.js","components/Charts/ChartBase.js","components/Charts/LineBreakText.js","containers/HomePage/InfoSection.js","containers/HomePage/BubbleLine.js","components/Charts/TweenShape.js","containers/HomePage/TypeDonut.js","containers/HomePage/PercentBars.js","services/api/withLawData.js","containers/HomePage/LawTops.js","containers/HomePage/YearChart.js","containers/HomePage/YearByYear/IssuedChart.js","containers/HomePage/YearByYear/ReceivedChart.js","containers/HomePage/dataHandler.js","containers/HomePage/YearByYear/index.js","containers/HomePage/LastUpdated.js","containers/HomePage/index.js","App.js","components/ThemeProvider/global-styles.js","components/ThemeProvider/index.js","utils/request.js","services/api/config.js","services/api/sagas.js","with-provider.js","stores/createStore.js","index.js","components/LineBg/index.js","containers/SummaryPage/index.js","Summary.js","components/utils/blacklist.js","services/api/reducer.js","services/api/constants.js","components/utils/injectProps.js"],"names":["Container","props","defaultProps","mx","px","width","displayName","names","createReducer","injectedReducers","combineReducers","browser","createResponsiveStateReducer","fromPairs","zip","breakpoints","map","bp","parseInt","api","PatternBg","children","backgroundImage","dot","backgroundSize","backgroundRepeat","backgroundPosition","Layout","height","minWidth","module","exports","Text","styled","tag","typography","display","space","color","position","injectProps","is","fontSize","blacklist","inline","bold","fontWeight","thin","range","forEach","key","h","createContext","Box","layout","zIndex","border","flex","borderRadius","opacity","variant","scale","prop","style","cssProperty","onClick","forwardRef","ref","verticalAlign","Flex","flexbox","emToPx","em","containerWidth","mobileOrDesktop","mobile","desktop","generateFade","r","g","b","reduce","fade","merge","join","spectrum","orange","darkOrange","lightOrange","darkRed","oranges","o","c","i","primary","colors","white","black","gray","dropdownBg","textYellow","lightGray","darkGray","textBlue","darkBlue","darkerBlue","text","primaryHover","font","headerHeight","zOrder","gradients","none","SIG","md5","SubComp","window","WithData","state","request","skip","checkIsPending","checkIsDone","getData","status","STATUS_LOADING","STATUS_LOADED","STATUS_ERROR","setTimeout","this","data","content","textAlign","my","size","createElement","PureComponent","connect","getIn","dispatch","bindActionCreators","customColor","active","css","buttonStyle","borderColor","themeGet","disabled","ButtonBase","InButtonSpan","Button","leftIcon","rightIcon","iconSpacing","mr","ml","bg","gradient","hoverColor","hoverBg","hoverBgImg","hoverBorder","py","lightBg","theme","outline","transparent","YearButton","handleNextYear","newYear","activeYear","setState","onChange","years","handleLastYear","currentYear","darkBg","alignItems","length","prevState","findIndex","y","Toggler","poses","options","handleBound","bounds","every","Boolean","activeIndex","onToggle","FontSizeContext","Consumer","left","top","bottom","transition","transform","label","onResize","measureRef","StyledDropdown","Dropdown","CustomDropdown","isMobile","value","onBlur","placeholder","name","concat","withResponsive","WrappedComp","get","lessThan","md","Circle","pt","right","lineHeight","defaultStyles","overlay","backgroundColor","marginRight","padding","overflow","Modal","setAppElement","customStyles","title","justifyContent","pb","borderBottom","letterSpacing","p","onRequestClose","m","ModalButton","openModal","open","closeModal","isOpen","checkStore","store","shape","isFunction","subscribe","getState","replaceReducer","isObject","invariant","conformsTo","injectReducerFactory","isValid","reducer","isString","isEmpty","Reflect","has","WrappedComponent","ReducerInjector","injectors","context","injectReducer","React","Component","contextType","ReactReduxContext","hoistNonReactStatics","params","ids","isArray","isNumber","listMode","resources","JSON","stringify","requestParams","type","actionTypes","READ_RESOURCES_PENDING","resourceType","undefined","requestKey","resync","updateParams","checkStatus","requestStatuses","PENDING","SUCCEEDED","FAILED","withReducer","resourceReducer","comp","compose","ChartBase","dimensions","handleResize","debounce","ratio","LineBreakText","x","maxLength","lineBefore","fillFront","verticalCenter","lines","str","strArr","Array","from","reverse","st","substr","backwardAutoLineBreak","lineCount","yPos","texts","w","yStart","Math","min","yEnd","max","fill","num","format","InfoSection","labelStart","onWidthChange","prevProps","main","sub","xEnd","mainValueStart","subValueStart","mainYStart","subYStart","x1","x2","y1","y2","stroke","strokeWidth","unit","textAnchor","mainLabelStart","toString","subLabelStart","emPercent","n","round","canGoDown","__ID","BubbleLine","wrapper","createRef","handleTooltip","event","xScale","localPoint","d","invert","activeId","id","handleClick","lockId","onLock","handleInfoWidthChange","newStart","sortBy","sortOrder","namedData","sortedData","loSortBy","rLabelHeight","rMax","leftLabelWidth","xStart","lableY","rateY","dollarRateY","scaleLinear","domain","rScale","scalePower","issued","exponent","to","vertical","orange6","orange3","orange4","fromOffset","orange5","toOpacity","rx","strokeLinecap","start","update","timing","duration","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","keyAccessor","cx","otherOpacity","centerR","enter","centerActive","leave","nodes","cy","pointerEvents","mixBlendMode","receiveRate","receiveDollarRate","HoverSensor","isHover","boxHeight","boxWidth","cursor","createPortal","points","current","sum","issuedDollar","received","receivedDollar","canceled","nd","animate","requestAnimationFrame","TWEEN","TweenShape","pathRef","updatePath","parsed","SVGPathData","toAbs","commands","tweens","index","prevParsed","toValues","pickBy","tween","Tween","mapValues","v","k","easing","Easing","Quadratic","InOut","onUpdate","handleUpdate","tick","doUpdatePath","setAttribute","encodeSVGPath","stop","TypeDonut","outerShapes","handleOuterShape","legends","onLegendClick","activeLegend","valueGetter","outerCircle","showLegend","showLabel","showPercentage","totalVaue","dataLength","labelLength","getColorByName","getIndexByName","donutR","legendBottom","legend","pieValue","outerRadius","innerRadius","padAngle","pieSort","a","pie","arcs","arc","path","sideOrders","scaleLabelY","sides","groupBy","centroid","side","sign","distanceX","abs","distanceY","sideGroups","so","s","ss","sorted","sort","slice","otherI","scaleBand","centroidX","centroidY","startAngle","hasSpaceForLabel","endAngle","dy","bandwidth","centX","centY","breakX","floor","cn","l","pd","PercentBars","dataByKey","dk","legendsLength","withData","LawTops","shortid","generate","year","hasLine","count","law","clip-path","withLawData","xValue","month","yValue","YearChart","formattedData","receivedRate","yHeight","paddingInner","paddingOuter","percentYScale","valueYScale","ceil","barWidth","yScale","numTicksRows","numTicksColumns","columnLineStyle","numTicks","tickStroke","tickLabelProps","dx","tickFormat","dd","xPos","barHeight","dotY","barY","dotX","TooltipBox","yCancealedValue","IssuedChart","showTooltip","step","tooltipData","Object","assign","canceledTop","tooltipLeft","tooltipTop","xTickFormat","hideTooltip","showTooltop","events","scalePoint","yMax","z","getZeros","dotCanceledY","whiteSpace","mb","withTooltip","ReceivedChart","getFill","keys","getMonthData","activeType","monthData","types","parseData","initial","va","vv","YearByYear","chartType","timeType","handleToggle","fd","push","quarter","nextProps","withDataState","LastUpdated","lastUpdated","IndexPage","chartIndex","lawType","typeLegends","last","yearsList","handleTypeFilter","handleChartToggle","handleYearChange","setLawType","setLock","handleReset","typeList","mappedData","bureauTotal","allData","all","getBureauTotal","values","allTypes","getTypes","pl","pr","borderRight","nexProps","t","td","App","HomePage","createGlobalStyle","Provider","parseJSON","response","json","error","Error","statusText","url","fetch","then","API_BASE","handleRequest","handleManualRead","handleRead","apiSagas","processData","target","onSuccess","onError","call","sendRequest","res","put","console","payload","qs","q","encodeURIComponent","resourceBase","receivedDataSuccess","receivedDataError","READ_RESOURCES_SUCCEEDED","READ_RESOURCES_FAILED","takeEvery","GET_DATA","initialState","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","createResponsiveStoreEnhancer","calculateInitialState","composeEnhancers","createStore","fromJS","runSaga","run","creatStore","location","search","exec","decodeURIComponent","InitialDispatch","calculateResponsiveState","ThemeProvider","document","getElementById","require","default","ReactDOM","render","line","SummaryPage","summary","log","primarys","secondarys","secondary","Module","datas","flexWrap","replace","String","fromCharCode","LineBg","createAction","handleActions","setIn","getConfig"],"mappings":"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","file":"static/js/main.939c12a3.chunk.js","sourcesContent":["import React from 'react';\n\nimport Box from './Box';\n\nconst Container = (props) => <Box {...props} />;\n\nContainer.defaultProps = {\n  mx: 'auto',\n  px: ['1em', null, '2em'],\n  width: 1,\n};\n\nContainer.displayName = 'Container';\n\nexport default Container;\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux-immutable';\nimport fromPairs from 'lodash/fromPairs';\nimport zip from 'lodash/zip';\nimport { createResponsiveStateReducer } from 'redux-responsive';\n\nimport { breakpoints } from '../components/ThemeProvider/theme';\nimport api from '../services/api/reducer'\n\nconst names = [\n  'xxs',\n  'xs',\n  'sm',\n  'md',\n  'lg',\n  'xl',\n];\n\n/**\n * Creates the main reducer with the dynamically injected ones\n */\nexport default function createReducer(injectedReducers) {\n  return combineReducers({\n    browser: createResponsiveStateReducer(fromPairs(zip(names, breakpoints.map((bp) => parseInt(bp, 10) - 1)))),\n    api,\n    ...injectedReducers,\n  });\n}\n","import React from 'react';\n\nimport Box from '../Box'\nimport dot from './dot.svg'\n\nconst PatternBg = ({ children, ...props }) => (\n  <Box\n    {...props}\n    backgroundImage={`url('${dot}')`}\n  >\n    {children}\n  </Box>\n)\n\nPatternBg.defaultProps = {\n  backgroundSize: '10px',\n  backgroundRepeat: 'repeat repeat',\n  backgroundPosition: 'center',\n}\n\nexport default PatternBg;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Box from '../../components/Box';\n\nconst Layout = ({ children }) => (\n  <Box height=\"100vh\" minWidth=\"800px\">\n    {children}\n  </Box>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/media/dot.0702eca7.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport range from 'lodash/range';\r\nimport {\r\n  typography,\r\n  space,\r\n  color,\r\n  display,\r\n  position,\r\n} from 'styled-system';\r\nimport tag from 'clean-tag';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport injectProps from './utils/injectProps';\r\n\r\nconst Text = styled(tag)`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  ${typography}\r\n  ${display}\r\n  ${space}\r\n  ${color}\r\n  ${position}\r\n  ${injectProps('textTransform')}\r\n  ${injectProps('whiteSpace')}\r\n`;\r\n\r\nText.defaultProps = {\r\n  is: 'p',\r\n  fontSize: '1em',\r\n  // lineHeight: 1.5,\r\n  blacklist,\r\n};\r\n\r\nText.inline = (props) => <Text is=\"span\" {...props} />;\r\nText.bold = (props) => <Text fontWeight=\"bold\" {...props} />;\r\nText.thin = (props) => <Text fontWeight=\"200\" {...props} />;\r\n\r\nrange(1, 7).forEach((key) => {\r\n  const h = `h${key}`;\r\n  Text[h] = (props) => (\r\n    <Text\r\n      is={h}\r\n      fontSize={`${1 + ((6 - key) * 0.125)}em`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nText.displayName = 'Text';\r\n\r\nexport default Text;\r\n","module.exports = __webpack_public_path__ + \"static/media/line.280d3107.svg\";","import { createContext } from 'react'\n\nexport default createContext({})\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport tag from 'clean-tag';\nimport {\n  space,\n  layout,\n  typography,\n  position,\n  color,\n  borderRadius,\n  zIndex,\n  border,\n  flex,\n  opacity,\n  style,\n  backgroundImage,\n  backgroundSize,\n  backgroundPosition,\n  backgroundRepeat,\n  variant,\n} from 'styled-system';\n\nimport blacklist from './utils/blacklist';\nimport injectProps from './utils/injectProps';\n\nconst Box = styled(tag)`\n  ${space}\n  ${layout}\n  ${position}\n  ${typography}\n  ${color}\n  ${position}\n  ${zIndex}\n  ${border}\n  ${flex}\n  ${borderRadius}\n  ${opacity}\n  ${backgroundImage}\n  ${backgroundSize}\n  ${backgroundRepeat}\n  ${backgroundPosition}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${injectProps('whiteSpace')}\n  ${injectProps('overflow')}\n  ${injectProps('transform')}\n  ${injectProps('transition')}\n  ${style({\n    prop: 'zOrder',\n    cssProperty: 'zIndex',\n    key: 'zOrder',\n  })}\n  ${({ onClick }) => onClick && 'cursor: pointer;'}\n`;\n\nBox.defaultProps = {\n  blacklist,\n};\n\nBox.displayName = 'Box';\n\nBox.inline = forwardRef((props, ref) => <Box is=\"span\" ref={ref} display=\"inline-block\" verticalAlign=\"middle\" {...props} />);\n\nexport default Box;\n","import { flexbox } from 'styled-system';\r\nimport styled from 'styled-components';\r\n\r\nimport Box from './Box';\r\nimport blacklist from './utils/blacklist'\r\n\r\nconst Flex = styled(Box)`\r\n  ${flexbox}\r\n`;\r\n\r\nFlex.defaultProps = {\r\n  display: 'flex',\r\n  blacklist,\r\n};\r\n\r\nFlex.displayName = 'Flex';\r\n\r\nexport default Flex;\r\n","import merge from 'lodash/merge';\nimport range from 'lodash/range';\n\nconst emToPx = (em) => `${em * 16}px`;\n\nexport const breakpoints = [22, 36, 48, 62, 90, 120].map(emToPx);\nexport const containerWidth = [22, 36, 46, 58].map(emToPx);\nexport const mobileOrDesktop = (mobile, desktop) => [mobile, null, null, desktop];\n\nconst generateFade = (r, g, b) => range(10, 100, 10)\n  .reduce((fade, opacity) => merge(fade, { [opacity]: `rgba(${[r, g, b, opacity / 100].join()})` }), {});\n\n\nconst font = 'Comfortaa, Arial, \"PingFang TC\", \"HeiTi TC\", \"Microsoft JhengHei\", sans-serif';\n\nconst spectrum = [\n  '#d3b998',\n  '#a57c56',\n  '#e8c52e',\n  '#ffa329',\n  '#f2690c',\n  '#d32e02',\n]\n\nconst darkBlue = '#2d3555'\nconst darkerBlue = '#171835'\nconst textBlue = '#1E213E'\nconst textYellow = '#F2B817'\nconst dropdownBg = '#E7EAF6'\n\nconst white = '#fff';\nconst black = '#000';\nconst text = '#040000';\nconst gray = '#7d7e80'\nconst lightGray = '#c9caca'\nconst darkGray = '#4c4948'\nconst orange = spectrum[3]\nconst darkOrange = spectrum[4]\nconst lightOrange = spectrum[2]\nconst darkRed = spectrum[5]\nconst oranges = spectrum.reduce((o, c, i) => {\n  o[`orange${i + 1}`] = c;\n  return o\n}, {});\nconst primary = darkOrange;\n\nexport default {\n  colors: {\n    white,\n    black,\n    gray,\n    dropdownBg,\n    textYellow,\n    lightGray,\n    darkGray,\n    textBlue,\n    darkBlue,\n    darkerBlue,\n    orange,\n    darkOrange,\n    lightOrange,\n    darkRed,\n    text,\n    primary,\n    primaryHover: darkOrange,\n    spectrum,\n    ...oranges,\n    fade: {\n      white: generateFade(255, 255, 255),\n      black: generateFade(0, 0, 0),\n    },\n  },\n  breakpoints,\n  containerWidth,\n  font,\n  headerHeight: '5em',\n  mobileOrDesktop,\n  zOrder: range(4).map((i) => 10 ** i),\n  gradients: {\n    none: {},\n    darkBlue: {\n      backgroundImage: `linear-gradient(to right, ${darkBlue}, ${darkerBlue})`,\n      color: white,\n    },\n  }\n};\n","import React, { PureComponent, createElement } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport { getData } from './reducer'\n\nimport { STATUS_LOADED, STATUS_LOADING, STATUS_ERROR } from './constants'\n\nexport default (key) => {\n  const SIG = `_LAW.state.${md5(key)}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      state = {}\n\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      request = (skip) => {\n        if (!this.checkIsPending()) {\n          if (skip || !this.checkIsDone()) {\n            this.props.getData({ key })\n          }\n        }\n      };\n\n      checkIsPending = () => this.props.status === STATUS_LOADING\n\n      checkIsDone = () => this.props.status === STATUS_LOADED || this.props.status === STATUS_ERROR\n\n      render() {\n        const { data, status, ...props } = this.props\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...props,\n            [key]: data,\n            resync: () => this.request(true),\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      data: state.getIn(['api', key, 'data']),\n      status: state.getIn(['api', key, 'status']),\n    })\n\n    const mapDispatchToProps = dispatch => bindActionCreators({\n      getData,\n    }, dispatch)\n    return connect(mapStateToProps, mapDispatchToProps)(WithData)\n  };\n}\n","import { style } from 'styled-system';\r\n\r\nexport const customColor = (prop, cssProperty = 'color') => style ({\r\n  prop,\r\n  cssProperty,\r\n  key: 'colors',\r\n});\r\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  border,\n  borderRadius,\n  backgroundImage,\n  position,\n  borderColor,\n  variant,\n} from 'styled-system';\nimport themeGet from '@styled-system/theme-get';\nimport tag from 'clean-tag';\n\nimport Box from './Box';\nimport theme from './ThemeProvider/theme';\n\nimport { customColor } from './utils/getColor';\nimport blacklist from './utils/blacklist';\n\nconst active = css`\n  ${customColor('hoverColor')};\n  ${customColor('hoverBg', 'backgroundColor')};\n  ${customColor('hoverBgImg', 'backgroundImage')};\n  ${customColor('hoverBorder', 'borderColor')};\n`;\n\nexport const buttonStyle = css`\n  padding: 0;\n  border: none;\n  font-family: inherit;\n  line-height: 1;\n  text-decoration: none;\n  ${typography}\n  ${layout}\n  ${position}\n  ${backgroundImage}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${space}\n  ${color}\n  ${border}\n  ${borderColor}\n  ${borderRadius}\n  appearance: none;\n  transition: all ${themeGet('duration', 250)}ms;\n  cursor: pointer;\n  &:hover {\n    ${props => !props.disabled && active}\n    outline: none;\n  }\n  ${props => props.active && !props.disabled && active}\n  ${props =>\n    props.disabled &&\n    `\n    cursor: not-allowed;\n    opacity: 0.5;\n  `}\n`;\n\nconst ButtonBase = styled(tag)`\n  ${buttonStyle};\n`;\n\nconst InButtonSpan = props => <Box is=\"span\" {...props} />;\n\nconst Button = ({\n  leftIcon,\n  rightIcon,\n  iconSpacing,\n  children,\n  verticalAlign,\n  ...props\n}) => (\n  <ButtonBase {...props}>\n    {leftIcon ? (\n      <Box is={leftIcon} mr={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n    <InButtonSpan verticalAlign={verticalAlign}>{children}</InButtonSpan>\n    {rightIcon ? (\n      <Box is={rightIcon} ml={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n  </ButtonBase>\n);\n\nButton.defaultProps = {\n  blacklist,\n  is: 'button',\n  border: '1px solid',\n  borderColor: 'darkBlue',\n  bg: 'darkBlue',\n  gradient: 'darkBlue',\n  color: 'white',\n  hoverColor: 'darkBlue',\n  hoverBg: 'white',\n  hoverBgImg: 'none',\n  hoverBorder: 'darkBlue',\n  px: '1.25em',\n  py: '0.5em',\n  fontWeight: 'bold',\n  iconSpacing: '0.25em',\n  borderRadius: '1.25em',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n};\n\nButton.displayName = 'Button';\n\nButton.lightBg = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"white\"\n    hoverColor=\"white\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    hoverBorder=\"white\"\n    {...props}\n  />\n);\n\nButton.border = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    borderColor=\"darkBlue\"\n    hoverColor=\"white\"\n    hoverBg=\"none\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    {...props}\n  />\n);\n\nButton.outline = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"primary\"\n    bg=\"transparent\"\n    color=\"primary\"\n    hoverColor=\"white\"\n    {...props}\n  />\n);\n\nButton.transparent = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid transparent\"\n    bg=\"transparent\"\n    color=\"text\"\n    hoverBorder=\"primary\"\n    {...props}\n  />\n);\n\nexport default Button;\n","import React, { createElement, PureComponent } from 'react';\nimport { IoMdArrowDropleft,  IoMdArrowDropright} from 'react-icons/io';\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Button from './Button'\n\nclass YearButton extends PureComponent {\n  static defaultProps = {\n    onChange: () => {},\n  }\n\n  static getDerivedStateFromProps({ currentYear, years }, prevState) {\n    return {\n      activeYear: typeof currentYear === 'undefined' ? years.length - 1 : years.findIndex(y => y === currentYear),\n    }\n  }\n\n  state = {}\n\n  handleNextYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear + 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  handleLastYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear - 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  render() {\n    const { currentYear, years, darkBg, onChange, ...props} = this.props\n    const { activeYear } = this.state\n    return (\n      <Flex alignItems=\"center\" {...props}>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: !activeYear,\n          onClick: this.handleLastYear,\n        }, <IoMdArrowDropleft size=\"1.5em\" />)}\n        <Box px=\"1.5em\" py=\"0.375em\" border=\"1px solid\" mx=\"0.5em\" borderRadius=\"0.5em\">\n          {years[activeYear]}\n        </Box>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: activeYear === years.length - 1,\n          onClick: this.handleNextYear,\n        }, <IoMdArrowDropright size=\"1.5em\" />)}\n      </Flex>\n    );\n  }\n}\n\nexport default YearButton;\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\n\nimport FontSizeContext from './ThemeProvider/FontSizeContext'\nimport Box from './Box'\n\nclass Toggler extends PureComponent {\n  state = {\n    poses: this.props.options.map(() => ({}))\n  }\n\n  poses = []\n\n  handleBound = (i, bounds) => {\n    this.poses[i] = bounds\n    if (this.poses.every(Boolean) && this.poses.length === this.props.options.length) {\n      this.setState({ poses: this.poses })\n    }\n  }\n\n  render() {\n    const { options, activeIndex, onToggle, color, bg } = this.props\n    const { poses } = this.state;\n    return (\n      <FontSizeContext.Consumer>\n      {({ em }) => (\n        <Box borderRadius=\"1.5em\" bg={bg} px=\"0.5em\">\n          <Box position=\"relative\">\n            <Box\n              position=\"absolute\"\n              left={poses[activeIndex].left - poses[0].left - em * 0.65}\n              top=\"50%\"\n              bottom=\"0\"\n              width={poses[activeIndex].width + 1.3 * em}\n              transition=\"all 0.25s\"\n            >\n              <Box py=\"1.25em\" bg={color} transform=\"translateY(-50%)\" borderRadius=\"1.25em\" />\n            </Box>\n            <Box position=\"relative\">\n              {options.map((label, i) => (\n                <Measure bounds onResize={({ bounds }) => this.handleBound(i, bounds)} key={i}>\n                  {({ measureRef }) => (\n                    <Box.inline ref={measureRef} px=\"1.25em\" py=\"0.5em\" color=\"white\" onClick={() => onToggle(i)}>\n                      {label}\n                    </Box.inline>\n                  )}\n                </Measure>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </FontSizeContext.Consumer>\n    );\n  }\n}\n\n\nToggler.defaultProps = {\n  color: 'primary',\n  bg: 'rgba(255,255,255,0.2)',\n  onToggle: () => {},\n}\n\nexport default Toggler;\n","import React from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport styled from 'styled-components';\n\nimport themeGet from '@styled-system/theme-get';\nimport Box from './Box'\n\nimport withResponsive from '../hoc/withResponsive'\n\nconst StyledDropdown = styled(Dropdown)`\n  .Dropdown-control {\n    border: 1px solid;\n    border-radius: 0.5em;\n    text-align: center;\n    background-color: white;\n    color: black;\n    font-family: inherit;\n    padding: 0.25em;\n    font-size: 1em;\n    cursor: pointer;\n    transition: none;\n  }\n  &.is-open {\n    .Dropdown-control {\n      border-radius: 0.5em 0.5em 0em 0em;\n    }\n  }\n  .Dropdown-menu {\n    border: 1px solid;\n    transform: translateY(1px);\n    border-radius: 0 0 0.5em 0.5em;\n  }\n  .Dropdown-option {\n    color: inherit;\n    text-align: center;\n    padding: 0.5em 1em;\n    border-bottom: 1px solid gray;\n    &.is-selected {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n    &:hover {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n  }\n  .Dropdown-arrow {\n    border-color: black transparent transparent;\n    top: 0.8em;\n    right: 0.5em;\n  }\n`\n\nconst CustomDropdown = ({\n  isMobile,\n  options,\n  onChange,\n  onBlur,\n  value,\n  name,\n  placeholder,\n  disabled,\n  ...props\n}) => {\n  return (\n    <Box {...props}>\n      <StyledDropdown\n        onChange={onChange}\n        options={[{ label: '全部', value: '' }].concat(options.map(value => ({ value, label: value })))}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </Box>\n  );\n};\n\nCustomDropdown.defaultProps = {\n  placeholder: '請選擇',\n  onChange: () => {}\n}\n\nexport default withResponsive(CustomDropdown);\n","import { connect } from 'react-redux';\r\n\r\nexport default (WrappedComp) => connect((state) => {\r\n  const browser = state.get('browser');\r\n  return {\r\n    browser,\r\n    isMobile: browser.lessThan.md,\r\n  };\r\n})(WrappedComp);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from './Box';\r\n\r\nconst Circle = ({ children, border, borderColor, bg, is, ...props }) => (\r\n  <Box {...props}>\r\n    <Box position=\"relative\" pt=\"100%\">\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"0\"\r\n        left=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        width={1}\r\n        borderRadius=\"50%\"\r\n        border={border}\r\n        borderColor={borderColor}\r\n        bg={bg}\r\n        is={is}\r\n      >\r\n        <Box\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          transform=\"translate(-50%, -50%)\"\r\n          position=\"absolute\"\r\n          lineHeight=\"0\"\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCircle.propTypes = {\r\n  children: PropTypes.node,\r\n  border: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bg: PropTypes.string,\r\n  is: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n  ]),\r\n};\r\n\r\nCircle.displayName = 'Circle';\r\n\r\nexport default Circle;\r\n","import React from 'react';\nimport Modal from 'react-modal';\nimport merge from 'lodash/merge'\nimport { IoIosClose } from \"react-icons/io\";\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Text from './Text'\nimport Button from './Button'\nimport Circle from './Circle'\nimport theme from './ThemeProvider/theme'\n\nconst defaultStyles = {\n  overlay: {\n    zIndex: theme.zOrder[3],\n    backgroundColor: 'rgba(0,0,0,0.7)'\n  },\n  content: {\n    width: '66%',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    borderRadius: '1em',\n    border: 'none',\n    padding: '0',\n    backgroundColor: 'rgba(255,255,255,0.9)',\n    overflow: 'unset',\n  }\n};\n\nModal.setAppElement('#root')\n\nexport default ({ children, border, borderRadius, customStyles, title, ...props }) => (\n  <Modal\n    style={merge({}, defaultStyles, { content: customStyles})}\n    {...props}\n  >\n    <Box py=\"1.5em\">\n      <Flex justifyContent=\"space-between\" mx=\"2em\" pb=\"1em\" borderBottom=\"1px solid\" borderColor=\"darkBlue\" alignItems=\"center\">\n        <Text fontWeight=\"bold\" letterSpacing=\"0.25em\" fontSize=\"1.25em\">{title}</Text>\n        <Circle width=\"2em\" is={(p) => <Button borderRadius=\"50%\" px=\"0\" py=\"0\" {...p} />} onClick={props.onRequestClose}>\n          <IoIosClose size=\"2em\" />\n        </Circle>\n      </Flex>\n      <Box m=\"2em\" position=\"relative\">\n        {children}\n      </Box>\n    </Box>\n  </Modal>\n)\n","import React, { PureComponent, Fragment, createElement } from 'react';\n\nimport Button from './Button'\nimport Modal from './Modal'\n\nclass ModalButton extends PureComponent {\n  static defaultProps = {\n    is: Button,\n  }\n\n  state = {}\n\n  openModal = () => this.setState({ open: true })\n  closeModal = () => this.setState({ open: false })\n\n  render() {\n    const { is, label, title, children, ...props } = this.props\n    const { open } = this.state\n    return (\n      <Fragment>\n        {createElement(is, {\n          onClick: this.openModal,\n          ...props\n        }, label)}\n        <Modal isOpen={open} onRequestClose={this.closeModal} title={title}>\n          {children}\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default ModalButton;\n","import conformsTo from 'lodash/conformsTo';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isObject from 'lodash/isObject';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    injectedReducers: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(src/utils...) injectors: Expected a valid redux store'\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../stores/reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function'\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => (WrappedComponent) => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n    static contextType = ReactReduxContext;\r\n    static displayName = `withReducer(${(WrappedComponent.displayName || WrappedComponent.name || 'Component')})`;\r\n\r\n    componentWillMount() {\r\n      const { injectReducer } = this.injectors;\r\n\r\n      injectReducer(key, reducer);\r\n    }\r\n\r\n    injectors = getInjectors(this.context.store)\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n","import React, { PureComponent, createElement } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { actionTypes, requestStatuses, resourceReducer } from 'redux-resource';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport isNumber from 'lodash/isNumber';\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport injectReducer from '../../utils/injectReducer';\n\nexport default (key, params) => {\n  const ids = (isArray(params) || isNumber(params)) ? params : '';\n  const listMode = !ids;\n  const resources = isArray(ids) ? ids : [ids];\n  const SIG = `_LAW.${md5(`${key}${ids}${params ? JSON.stringify(params) : ''}`)}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      // shouldComponentUpdate(nextProps) {\n      //   return get(this.props, [key, 'resources']) !== get(nextProps, [key, 'resources'])\n      // }\n\n      request = (skip, requestParams = params) => {\n        if (this.props[key]) {\n          if (!this.checkIsPending()) {\n            if (skip || !this.checkIsDone()) {\n              this.props.dispatch({\n                type: actionTypes.READ_RESOURCES_PENDING,\n                resourceType: key,\n                resources: listMode ? undefined : resources,\n                requestKey: listMode && `list${JSON.stringify(params)}`,\n                requestParams,\n              });\n            }\n          }\n        } else {\n          setTimeout(this.request, 100)\n        }\n      };\n\n      resync = () => this.request(true);\n\n      updateParams = (params) => this.request(true, params);\n\n      checkStatus = status => {\n        if (listMode) {\n          return (\n            get(this.props, [\n              key,\n              'requests',\n              'list',\n              'status',\n            ]) === status\n          );\n        }\n        return (\n          get(this.props, [\n            key,\n            'meta',\n            resources,\n            'readStatus'\n          ]) === status\n        );\n      };\n\n      checkIsPending = () => this.checkStatus(requestStatuses.PENDING);\n\n      checkIsDone = () => this.checkStatus(requestStatuses.SUCCEEDED) || this.checkStatus(requestStatuses.FAILED);\n\n      render() {\n        const data = get(this.props, [key, 'resources']);\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...this.props,\n            [key]: data,\n            updateParams: this.updateParams,\n            // resync: this.resync,\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      [key]: state.get(key),\n    });\n\n    const withReducer = injectReducer({\n      key: key,\n      reducer: resourceReducer(key),\n    });\n\n    const comp = compose(\n      withReducer,\n      connect(mapStateToProps),\n    )(WithData)\n    if (typeof window !== 'undefined') window[SIG] = comp\n\n    return comp\n  };\n}\n","import { createElement } from 'react'\nimport withData from './withData';\n\nexport default (SubComp) => {\n  let key = 'data/bureaus'\n\n  if (typeof window !== 'undefined' && window.__ID !== '00000000') {\n    key = `${key}/${window.__ID}`\n  }\n  return withData(key)(props => createElement(SubComp, { ...props, data: props[key] }))\n}\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\nimport debounce from 'lodash/debounce'\n\nimport Box from '../Box'\n\nclass ChartBase extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleResize = debounce(this.handleResize, 200)\n  }\n\n  state = {\n    dimensions: {},\n  }\n\n  handleResize = ({ bounds }) => this.setState({ dimensions: bounds })\n\n  render() {\n    const { children, ratio, ...props } = this.props;\n    const { width, height } = this.state.dimensions;\n    return (\n      <Measure onResize={this.handleResize} bounds>\n        {({ measureRef }) => (\n          <Box position=\"relative\" pt={`${ratio * 100}%`} {...props} ref={measureRef}>\n            {width && height && (\n              <Box\n                is=\"svg\"\n                position=\"absolute\"\n                top=\"0\"\n                left=\"0\"\n                width={width}\n                height={height}\n              >\n                {children({ width, height })}\n              </Box>\n            )}\n          </Box>\n        )}\n      </Measure>\n    );\n  }\n}\n\nChartBase.defaultProps = {\n  ratio: 1 / 3,\n}\n\nexport default ChartBase;\n","import React from 'react';\n\nfunction backwardAutoLineBreak(str, maxLength, fillFront) {\n  if (!maxLength) return [str]\n  const strArr = Array.from(str)\n  if (!fillFront) strArr.reverse()\n  let i = 0\n  const lines = strArr.reduce((lines, st) => {\n    lines[i] = lines[i] || ''\n    if (lines[i].length == maxLength) {\n      i += 1\n      lines[i] = ''\n    }\n    if (fillFront) {\n      lines[i] += st\n    } else {\n      lines[i] = st + lines[i]\n    }\n    return lines\n  }, [])\n  if (!fillFront) {\n    lines.reverse()\n  }\n  if (fillFront) {\n    const { length } = lines\n    if (lines[length - 1].length === 1) {\n      lines[length - 1] = lines[length - 2].substr(lines[length - 2].length - 1) + lines[length - 1]\n      lines[length - 2] = lines[length - 2].substr(0, lines[length - 2].length - 1)\n    }\n  } else {\n    if (lines[0].length === 1) {\n      lines[0] += lines[1][0]\n      lines[1] = lines[1].substr(1)\n    }\n  }\n  return lines\n}\n\nconst LineBreakText = ({\n  x,\n  y,\n  children,\n  fontSize,\n  maxLength,\n  lineHeight,\n  lineBefore,\n  fillFront,\n  bg,\n  style,\n  verticalCenter,\n  ...props\n}) => {\n  if (typeof children !== 'string') {\n    return (\n      <text\n        x={x}\n        y={y}\n        fontSize={fontSize}\n        style={style}\n        {...props}\n      >\n        {children}\n      </text>\n    );\n  }\n  const lines = backwardAutoLineBreak(children, maxLength, fillFront)\n  const lineCount = lines.length\n  const yPos = lines.map((c, i) => y + (verticalCenter && lineCount > 1 ? (0.5 * fontSize * (lineBefore ? 1 : -1)) : 0) + lineHeight * fontSize * (lineBefore ? i - lineCount + 1 : i));\n  const texts = lines.map((c, i) => (\n    <text\n      key={i}\n      x={x}\n      y={yPos[i]}\n      fontSize={fontSize}\n      style={style}\n      {...props}\n    >\n      {c}\n    </text>\n  ))\n  return bg ? (() => {\n    const w = maxLength * fontSize\n    const yStart = Math.min(...yPos)\n    const yEnd = Math.max(...yPos)\n    return (\n      <g>\n        <rect\n          width={w}\n          height={yEnd - yStart + 1.75 * fontSize}\n          x={x - w / 2}\n          y={yStart - 1.25 * fontSize}\n          fill={bg}\n          style={style}\n        />\n        {texts}\n      </g>\n    )\n  })() : <g>{texts}</g>;\n};\n\nLineBreakText.defaultProps = {\n  lineHeight: 1.3,\n  y: 0,\n  verticalCenter: true,\n}\n\nexport default LineBreakText;\n","import React, { PureComponent } from 'react';\nimport { format } from 'd3-format'\nimport get from 'lodash/get'\n\nimport theme from '../../components/ThemeProvider/theme'\n\nconst num = format(',')\n\nclass InfoSection extends PureComponent {\n  static getDerivedStateFromProps({\n    sub,\n    main,\n    em,\n    xEnd,\n    labelStart,\n  }) {\n    const mainValueStart = xEnd - (get(main.unit, 'length', -0.25) + 0.25) * em\n    const mainValueWidth = main.value.toString().length * 1.5 * em\n    const mainLabelStart = mainValueStart - mainValueWidth\n    const subValueStart = xEnd - (get(sub, ['unit', 'length'], -0.25) + 0.25) * em\n    const subValueWidth = get(sub, 'value', '').toString().length * 0.75 * em\n    const subLabelStart = subValueStart - subValueWidth\n    return {\n      mainValueStart,\n      mainLabelStart,\n      subValueStart,\n      labelStart: labelStart || Math.min(mainLabelStart, subLabelStart),\n    }\n  }\n\n  state = {}\n\n  componentDidMount() {\n    const { labelStart } = this.state\n    const { onWidthChange } = this.props\n    if (onWidthChange) {\n      onWidthChange(labelStart)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { labelStart } = this.state\n    const { onWidthChange } = this.props\n    if (labelStart !== prevState.labelStart && onWidthChange) {\n      onWidthChange(labelStart)\n    }\n  }\n\n  render() {\n    const {\n      y,\n      em,\n      main,\n      sub,\n      xEnd,\n    } = this.props\n    const {\n      mainValueStart,\n      subValueStart,\n      labelStart,\n    } = this.state;\n    const mainYStart = y - 0.8 * em\n    const subYStart = y + 1.5 * em\n    return (\n      <g>\n        <line\n          x1={labelStart - get(main.label, 'length') * em}\n          x2={xEnd}\n          y1={y}\n          y2={y}\n          stroke=\"black\"\n          strokeWidth=\"2\"\n        />\n        <g>\n          {main.unit && (\n            <text\n              x={xEnd}\n              y={mainYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {main.unit}\n            </text>\n          )}\n          <text\n            fill={theme.colors.primary}\n            x={mainValueStart}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={2 * em}\n          >\n            {num(main.value)}\n          </text>\n          <text\n            x={labelStart}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {main.label}\n          </text>\n        </g>\n        {sub && (\n          <g>\n            <text\n              x={xEnd}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {sub.unit}\n            </text>\n            <text\n              x={subValueStart - 0.25 * em}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n              color={theme.colors.gray}\n            >\n              {num(sub.value)}\n            </text>\n            <text\n              x={labelStart}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {sub.label}\n            </text>\n          </g>\n        )}\n      </g>\n    );\n  }\n}\n\n\nexport default InfoSection;\n","import React, { Fragment, PureComponent, createRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport { Animate, NodeGroup } from 'react-move'\nimport loSortBy from 'lodash/sortBy'\nimport { max } from 'd3-array'\nimport { Bar, Circle } from '@vx/shape';\nimport { scaleLinear, scalePower } from '@vx/scale';\nimport { LinearGradient, RadialGradient } from '@vx/gradient';\nimport { localPoint } from '@vx/event';\nimport { Group } from '@vx/group';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport LineBreakText from '../../components/Charts/LineBreakText'\nimport theme from '../../components/ThemeProvider/theme'\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n\nimport InfoSection from './InfoSection'\n\nconst emPercent = n => (\n  <Fragment>\n    {Math.round(n * 100)}\n    <tspan fontSize=\"0.7em\">%</tspan>\n  </Fragment>\n)\n\nconst canGoDown = typeof window !== 'undefined' && window.__ID === '00000000'\n\nclass BubbleLine extends PureComponent {\n  static getDerivedStateFromProps({ data }) {\n    return {\n      namedData: data.reduce((nd, d) => {\n        nd[d.id] = d\n        return nd\n      }, {})\n    }\n  }\n\n  state = {\n    labelStart: 0,\n  }\n\n  wrapper = createRef()\n\n  handleTooltip = ({ event, xScale, data }) => {\n    const { x } = localPoint(event);\n    const index = Math.round(xScale.invert(x))\n    const d = data[index]\n    if (d) {\n      this.setState({ activeId: d.id })\n    } else {\n      this.setState({ activeId: null })\n    }\n  }\n\n  handleClick = () => {\n    const { activeId } = this.state\n    const { lockId, onLock } = this.props\n    if (lockId) {\n      this.setState({ activeId: null }, () => onLock(null))\n    } else {\n      onLock(activeId)\n    }\n  }\n\n  handleInfoWidthChange = (newStart) => {\n    this.setState(({ labelStart }) => ({ labelStart: labelStart > 0 ? Math.min(labelStart, newStart) : newStart }))\n  }\n\n  render() {\n    const {\n      data,\n      sortBy,\n      sortOrder,\n      onLock,\n      lockId,\n      ...props\n    } = this.props\n    const { activeId, namedData, labelStart } = this.state;\n    if (!data || !data.length) return null\n    const sortedData = loSortBy(data, sortBy)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase {...props}>\n            {({ width, height }) => {\n              const rLabelHeight = 2 * em\n              const rMax = height * 0.22\n              const leftLabelWidth = width * 0.075\n              const rightInfoWidth = width * 0.18\n              const xStart = leftLabelWidth + rMax\n              const xEnd = width - rMax - rightInfoWidth\n              const lableY = rLabelHeight + rMax * 2 + em * 3.5\n              const rateY = lableY + em * 3\n              const dollarRateY = rateY + em * 2.5\n\n              const xScale = scaleLinear({\n                domain: [0, data.length - 1],\n                range: [xStart, xEnd]\n              })\n\n              const rScale = scalePower({\n                domain: [0, max(data, d => d.issued)],\n                range: [0, rMax],\n                exponent: 0.5,\n              });\n\n              return (\n                <Fragment>\n                  <LinearGradient from={theme.colors.darkBlue} to={theme.colors.darkerBlue} vertical={false} id=\"dark\" />\n                  <LinearGradient from={theme.colors.orange6} to={theme.colors.orange3} vertical={false} id=\"rate\" />\n                  <RadialGradient from={theme.colors.orange3} to={theme.colors.orange4} fromOffset=\"30%\" id=\"radial-fill\" />\n                  <RadialGradient from={theme.colors.orange5} to={theme.colors.orange5} toOpacity={0} id=\"radial-trans\" />\n                  <g>\n                    <rect\n                      width={leftLabelWidth}\n                      height={height - rLabelHeight / 2}\n                      x={0}\n                      y={rLabelHeight / 2}\n                      opacity={0.15}\n                      fill=\"url('#dark')\"\n                      rx={em}\n                    />\n                    {[lableY, rateY - 2 * em / 3, dollarRateY - 2 * em / 3].map((y, i) => (\n                      <line\n                        key={i}\n                        x1={em}\n                        x2={leftLabelWidth - em}\n                        y1={y - em * 2 / 3}\n                        y2={y - em * 2 / 3}\n                        stroke={theme.colors.text}\n                        strokeWidth=\"1\"\n                        strokeLinecap=\"round\"\n                      />\n                    ))}\n                    {[\n                      { label: '已開案件量', y: rLabelHeight + rMax - em / 2 },\n                      { label: '局處', y: lableY + em },\n                      { label: '收繳率', y: rateY + em / 3 },\n                      { label: '執行率', y: dollarRateY + em / 3 },\n                    ].map(({ label, y }, i) => (\n                      <LineBreakText\n                        key={i}\n                        x={leftLabelWidth / 2}\n                        y={y}\n                        textAnchor=\"middle\"\n                        fontSize={1.25 * em}\n                        fontWeight=\"bold\"\n                        maxLength={3}\n                        letterSpacing=\"2\"\n                      >\n                        {label}\n                      </LineBreakText>\n                    ))}\n                  </g>\n                  <Animate\n                    start={{\n                      opacity: 1,\n                    }}\n                    update={{\n                      opacity: [(activeId || lockId) ? 0.1 : 1],\n                      timing: { duration: 250 }\n                    }}\n                  >\n                    {state => (\n                      <line\n                        x1={xStart}\n                        y1={rLabelHeight + rMax}\n                        x2={width}\n                        y2={rLabelHeight + rMax}\n                        stroke={theme.colors.lightGray}\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        {...state}\n                      />\n                    )}\n                  </Animate>\n                  <rect\n                    width={xEnd - xStart + rMax}\n                    height={2 * em}\n                    fill=\"url('#rate')\"\n                    x={xStart - rMax / 2}\n                    y={rateY - em}\n                    rx={em}\n                  />\n                  {/* <rect\n                  width={xEnd - xStart + rMax}\n                  height={2 * em}\n                  fill=\"url('#rate')\"\n                  x={xStart - rMax / 2}\n                  y={dollarRateY - em}\n                  rx={em}\n                /> */}\n                  <Bar\n                    x={0}\n                    y={0}\n                    width={width}\n                    height={height}\n                    fill=\"transparent\"\n                    data={data}\n                    onTouchStart={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onTouchMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseLeave={() => this.setState({ activeId: null })}\n                    onClick={this.handleClick}\n                  />\n                  <g ref={this.wrapper}>\n                    <NodeGroup\n                      // must make react-move think data had been updated, so we inject width and height here\n                      data={sortedData.map(d => ({ ...d, width, height }))}\n                      keyAccessor={d => d.label}\n                      start={(d, i) => ({\n                        cx: xScale(i),\n                        r: 0,\n                        opacity: 0.5,\n                        otherOpacity: 1,\n                        centerR: 0,\n                      })}\n                      enter={d => ({\n                        r: [rScale(d.issued)],\n                        timing: { duration: 500 },\n                      })}\n                      update={(d, i) => {\n                        let active = true\n                        let centerActive\n                        if (lockId) {\n                          active = lockId === d.id\n                          centerActive = lockId === d.id\n                        } else if (activeId) {\n                          active = activeId === d.id\n                        }\n                        return [\n                          {\n                            cx: [xScale(i)],\n                            r: [rScale(d.issued)],\n                            timing: { duration: 500 },\n                          },\n                          {\n                            opacity: [active ? 0.5 : 0.1],\n                            otherOpacity: [active ? 1 : 0.1],\n                            centerR: [centerActive ? em : 0],\n                            timing: { duration: 250 },\n                          },\n                        ]\n                      }}\n                      leave={() => ({\n                        opacity: [0],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <g>\n                          {nodes.map(({ key, data: d, state: { cx, r, opacity, otherOpacity } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rLabelHeight + rMax}\n                                  r={r}\n                                  fill=\"url('#radial-fill')\"\n                                  opacity={opacity}\n                                  style={{\n                                    pointerEvents: 'none',\n                                    mixBlendMode: 'multiply',\n                                  }}\n                                />\n                                <text\n                                  fill={theme.colors.darkGray}\n                                  x={cx}\n                                  y={rLabelHeight + rMax - r - 0.5 * em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {d.issued}\n                                </text>\n                                <line\n                                  x1={cx}\n                                  x2={cx}\n                                  y1={rLabelHeight + rMax}\n                                  y2={lableY + em}\n                                  stroke={theme.colors.lightGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <LineBreakText\n                                  x={cx}\n                                  y={lableY + em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  maxLength={3}\n                                  lineBefore\n                                  em={em}\n                                  bg=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                  verticalCenter={false}\n                                >\n                                  {d.label}\n                                </LineBreakText>\n                                <text\n                                  x={cx}\n                                  y={rateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  fill=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveRate)}\n                                </text>\n                                <text\n                                  x={cx}\n                                  y={dollarRateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveDollarRate)}\n                                </text>\n                              </g>\n                            );\n                          })}\n                          {nodes.map(({ key, data: d, state: { cx, otherOpacity, centerR } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rMax + rLabelHeight}\n                                  r={rMax / 25}\n                                  fill={theme.colors.darkGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <HoverSensor>\n                                  {({ isHover }) => {\n                                    const cy = rLabelHeight + rMax\n                                    const boxHeight = 2.5 * em\n                                    const boxWidth = 5 * em\n                                    return (\n                                      <g>\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR * 0.6}\n                                          fill={theme.colors.orange5}\n                                        />\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR}\n                                          fill=\"transparent\"\n                                          strokeWidth=\"2\"\n                                          stroke={theme.colors.orange5}\n                                          style={canGoDown ? { cursor: 'pointer' } : {}}\n                                          onClick={() => {\n                                            if (canGoDown) {\n                                              window.open(`?bureauId=${d.id}`)\n                                            }\n                                          }}\n                                        />\n                                        {canGoDown && isHover && createPortal((\n                                          <Group top={rLabelHeight + rMax} left={cx + 2 * em}>\n                                            <polygon\n                                              points={[\n                                                [-0.75 * em, 0],\n                                                [0.1 * em, -0.5 * em],\n                                                [0.1 * em, 0.5 * em]\n                                              ].map(p => p.join()).join(' ')}\n                                              fill={theme.colors.orange5}\n                                            />\n                                            <rect\n                                              x={0}\n                                              y={-boxHeight / 2}\n                                              width={boxWidth}\n                                              height={boxHeight}\n                                              fill={theme.colors.orange5}\n                                              rx={0.5 * em}\n                                            />\n                                            <text\n                                              fontSize={em}\n                                              fill=\"white\"\n                                              x={boxWidth / 2}\n                                              y={0.3*em}\n                                              textAnchor=\"middle\"\n                                            >前往局處</text>\n                                          </Group>\n                                        ), this.wrapper.current)}\n                                      </g>\n                                    )\n                                  }}\n                                </HoverSensor>\n                              </g>\n                            );\n                          })}\n                        </g>\n                      )}\n                    </NodeGroup>\n                  </g>\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 2 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].issued : data.reduce((sum, d) => sum + d.issued, 0),\n                      label: '已開案量',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].issuedDollar : data.reduce((sum, d) => sum + d.issuedDollar, 0),\n                      label: '案件金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 9.5 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].received : data.reduce((sum, d) => sum + d.received, 0),\n                      label: '收繳案件',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].receivedDollar : data.reduce((sum, d) => sum + d.receivedDollar, 0),\n                      label: '收繳金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 18 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].canceled : data.reduce((sum, d) => sum + d.canceled, 0),\n                      label: '撤銷案件',\n                      unit: '件',\n                    }}\n                  />\n                </Fragment>\n              );\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    )\n  }\n}\n\nexport default BubbleLine;\n","import React, { PureComponent, createRef } from 'react';\nimport TWEEN from '@tweenjs/tween.js';\nimport { SVGPathData, encodeSVGPath } from 'svg-pathdata';\nimport pickBy from 'lodash/pickBy';\nimport isNumber from 'lodash/isNumber';\nimport merge from 'lodash/merge';\nimport mapValues from 'lodash/mapValues';\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\tTWEEN.update();\n}\n\nclass TweenShape extends PureComponent {\n  static defaultProps = {\n    duration: 500,\n  }\n\n  constructor(props) {\n    super(props);\n    const { d } = props;\n    this.prevParsed = new SVGPathData(d).toAbs().commands;\n    this.tick = [];\n    animate();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { d } = this.props;\n    if (d !== prevProps.d) this.updatePath(d);\n  }\n\n  componentWillUnmount() {\n    if (this.tweens) {\n      this.tweens.forEach((tween) => tween.stop());\n    }\n  }\n\n  pathRef = createRef()\n\n  updatePath = (d) => {\n    this.parsed = new SVGPathData(d).toAbs().commands;\n    this.tweens = this.parsed.map((to, index) => {\n      const from = this.prevParsed[index];\n      const toValues = pickBy(to, isNumber);\n      const tween = new TWEEN.Tween(from || mapValues(toValues, (v, k) => k === 'type' ? v : 0))\n        .to(toValues, this.props.duration)\n        .easing(TWEEN.Easing.Quadratic.InOut)\n        .onUpdate(this.handleUpdate(index))\n      tween.start();\n      return tween;\n    });\n  }\n\n  handleUpdate = (index) => (value) => {\n    this.prevParsed[index] = merge(this.prevParsed[index] || {}, value);\n    this.tick[index] = true;\n    if (this.tick.length === this.parsed.length && this.tick.every(Boolean)) {\n      this.doUpdatePath();\n    }\n  }\n\n  doUpdatePath = () => {\n    if (this.pathRef.current) {\n      this.pathRef.current.setAttribute('d', encodeSVGPath(this.prevParsed));\n    }\n    this.tick.fill(null);\n  }\n\n  render() {\n    const { duration, ...props } = this.props\n    return (\n      <path ref={this.pathRef} {...props} />\n    );\n  }\n}\n\nexport default TweenShape;\n\n","import React, { Fragment, PureComponent } from 'react';\nimport { Group } from '@vx/group';\nimport { Pie } from '@vx/shape';\nimport { scaleBand } from '@vx/scale';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\nimport { format } from 'd3-format'\nimport groupBy from 'lodash/groupBy'\nimport reduce from 'lodash/reduce'\nimport range from 'lodash/range'\nimport mapValues from 'lodash/mapValues'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/TweenShape'\n\nconst p = format('.0%')\n\nconst calcSide = (centroid, index) => {\n  return {\n    side: Math.sign(centroid[0]),\n    distanceX: Math.abs(centroid[0]),\n    distanceY: centroid[1],\n    index,\n  }\n}\n\nclass TypeDonut extends PureComponent {\n  static contextType = FontSizeContext\n\n  static defaultProps = {\n    onLegendClick: () => {}\n  }\n\n  static getDerivedStateFromProps({ data, legends, valueGetter }) {\n    return {\n      totalVaue: data.reduce((sum, d) => sum + valueGetter(d), 0),\n      dataLength: data.length,\n      labelLength: Math.floor(data.length / 2) + 1,\n      getColorByName: legends.reduce((cn, l) => {\n        cn[l.label] = l.color\n        return cn\n      }, {}),\n      getIndexByName: legends.reduce((cn, l, i) => {\n        cn[l.label] = i\n        return cn\n      }, {}),\n    }\n  }\n\n  state = {}\n\n  outerShapes = []\n\n  handleOuterShape = (i, shape) => {\n    this.outerShapes[i] = shape\n  }\n\n  render() {\n    const {\n      data,\n      legends,\n      onLegendClick,\n      activeLegend,\n      valueGetter,\n      outerCircle,\n      showLegend,\n      showLabel,\n      showPercentage,\n      ...props\n    } = this.props;\n    const {\n      totalVaue,\n      dataLength,\n      labelLength,\n      getColorByName,\n      getIndexByName,\n    } = this.state;\n    const { em } = this.context\n    return (\n      <ChartBase {...props}>\n        {({ width, height }) => {\n          const donutR = height * 0.45 - (showLabel ? 8 * em : 2 * em);\n          const legendBottom = height - 4 * em\n          return (\n            <Fragment>\n              {showLegend && (\n                <g>\n                  {legends.map((legend, i) => (\n                    <Group\n                      key={i}\n                      left={em}\n                      top={legendBottom - (dataLength - 1 - i) * em * 1.75}\n                      onClick={() => onLegendClick(legend.label === activeLegend ? null : legend.label)}\n                      opacity={!activeLegend || legend.label === activeLegend ? 1 : 0.3}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <circle cx={em / 2} cy={-em * 0.3} r={em / 2} fill={legend.color} />\n                      <text x={1.75 * em} fill=\"white\" fontSize={em}>{legend.label}</text>\n                    </Group>\n                  ))}\n                </g>\n              )}\n              <Group top={height / 2} left={width / 2 + (showLegend ? 5 * em : 0)}>\n                {outerCircle && (\n                  <Fragment>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.05}\n                      innerRadius={donutR * 0.4}\n                      padAngle={0}\n                      pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                    >\n                      {pie => pie.arcs.map((arc, i) => {\n                        const d = pie.path(arc)\n                        return (\n                          <g key={`outer-${arc.data.name}-${i}`}>\n                            <path d={d} fill=\"transparent\" ref={() => this.handleOuterShape(i, d)} />\n                          </g>\n                        )\n                      })}\n                    </Pie>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.1}\n                      innerRadius={donutR * 0.3}\n                      padAngle={0}\n                    >\n                      {pie => pie.arcs.map((arc, i) => (\n                        <g key={`bg-${arc.data.name}-${i}`}>\n                          <path d={pie.path(arc)} fill=\"white\" opacity=\"0.2\" />\n                        </g>\n                      ))}\n                    </Pie>\n                  </Fragment>\n                )}\n                <Pie\n                  data={data}\n                  pieValue={valueGetter}\n                  outerRadius={donutR}\n                  innerRadius={donutR * 0.4}\n                  padAngle={0}\n                  pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                >\n                  {pie => {\n                    let sideOrders\n                    let scaleLabelY\n                    if (showLabel) {\n                      const sides = groupBy(pie.arcs.map((arc, i) => calcSide(pie.path.centroid(arc), i)), 'side')\n                      const sideGroups = reduce(sides, (so, s, i) => {\n                        let ss = so[i] ? s.concat(so[i]) : s\n                        if (s.length > labelLength) {\n                          const sorted = s.sort((a, b) => b.distanceX - a.distanceX)\n                          ss = sorted.slice(0, labelLength)\n                          const otherI = i * -1\n                          so[otherI] = (so[otherI] || []).concat(sorted.slice(labelLength))\n                        }\n                        so[i] = ss\n                        return so\n                      }, {})\n                      scaleLabelY = mapValues(sideGroups, s => scaleBand({\n                        range: [-donutR, donutR],\n                        domain: range(0, s.length),\n                      }))\n                      sideOrders = reduce(sideGroups, (so, s) => {\n                        const sorted = s.sort((a, b) => a.distanceY - b.distanceY)\n                        sorted.forEach((d, index) => {\n                          so[d.index] = { side: d.side, index }\n                        })\n                        return so\n                      }, [])\n                    }\n                    return pie.arcs.map((arc, i) => {\n                      const [centroidX, centroidY] = pie.path.centroid(arc);\n                      const { startAngle, endAngle } = arc;\n                      const hasSpaceForLabel = endAngle - startAngle >= 0.1;\n                      const value = valueGetter(arc.data)\n                      return (\n                        <Fragment key={`inner-${arc.data.name}-${i}`}>\n                          <HoverSensor>\n                            {({ isHover }) => (\n                              <g>\n                                <TweenShape\n                                  d={((!activeLegend && isHover) || activeLegend === arc.data.name) && this.outerShapes[i] ? this.outerShapes[i] : pie.path(arc)}\n                                  fill={getColorByName[arc.data.name]}\n                                  opacity={(!activeLegend || arc.data.name === activeLegend) ? 1 : 0.3}\n                                  onClick={() => onLegendClick(arc.data.name === activeLegend ? null : arc.data.name)}\n                                  duration={200}\n                                />\n                                {hasSpaceForLabel && (\n                                  <text\n                                    fill=\"white\"\n                                    x={centroidX}\n                                    y={centroidY}\n                                    dy=\".33em\"\n                                    fontSize={em}\n                                    fontWeight=\"bold\"\n                                    textAnchor=\"middle\"\n                                  >\n                                    {showPercentage ? p(value / totalVaue) : value}\n                                  </text>\n                                )}\n\n                              </g>\n                            )}\n                          </HoverSensor>\n                          {showLabel && (() => {\n                            const side = sideOrders[i]\n                            const scale = scaleLabelY[side.side]\n                            const sign = side.side\n                            const left = (donutR + 8 * em)* sign\n                            const top = scale(side.index) + scale.bandwidth() / 2 - em / 2\n                            const centX = centroidX - left + 2 * em * sign\n                            const centY = centroidY - top\n                            const breakX = centX + Math.abs(centY) * sign\n                            return (\n                              <Fragment>\n                                <Group\n                                  left={left}\n                                  top={top}\n                                >\n                                  <line\n                                    x1={0}\n                                    x2={breakX}\n                                    y1={0}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <line\n                                    x1={centX}\n                                    y1={centY}\n                                    x2={breakX}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <text\n                                    y={1.5 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={em}\n                                    fontWeight=\"bold\"\n                                  >{arc.data.name}</text>\n                                  <text\n                                    y={-0.75 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={1.5 * em}\n                                    fill={theme.colors.primary}\n                                    fontWeight=\"bold\"\n                                  >{valueGetter(arc.data)}</text>\n                                </Group>\n                              </Fragment>\n                            )\n                          })()}\n                        </Fragment>\n                      );\n                    });\n                  }}\n                </Pie>\n              </Group>\n            </Fragment>\n          )\n        }}\n      </ChartBase>\n    );\n  }\n}\n\nexport default TypeDonut;\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleLinear } from '@vx/scale';\nimport { Animate } from 'react-move'\nimport { format } from 'd3-format'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n\nimport ChartBase from '../../components/Charts/ChartBase'\n\nconst pd = format('.0%')\n\nconst PercentBars = ({\n  data,\n  legends,\n  onLegendClick,\n  activeLegend,\n  ...props\n}) => {\n  const dataByKey = data.reduce((dk, d) => {\n    dk[d.name] = d.received / d.issued;\n    return dk\n  }, {})\n  const legendsLength = Math.max(...legends.map(l => l.label.length))\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width }) => {\n            const yStart = 6 * em\n            const xScale = scaleLinear({\n              range: [0, width - 3 * em - legendsLength * em * 1.25],\n              domain: [0, 1],\n            });\n            return (\n              <Group top={yStart}>\n                {legends.map(({ label, color }, i) => {\n                  const handleClick = () => onLegendClick(label === activeLegend ? null : label)\n                  return (\n                    <Group\n                      top={i * em * 2.5}\n                      opacity={!activeLegend || activeLegend === label ? 1 : 0.3}\n                      key={label + i}\n                    >\n                      <text\n                        fill=\"white\"\n                        fontSize={em}\n                        onClick={handleClick}\n                        style={{ cursor: 'pointer' }}\n                      >\n                        {label}\n                      </text>\n                      <rect\n                        x={legendsLength * em * 1.25}\n                        y={-1.25 * em}\n                        width={xScale(1)}\n                        height={1.5 * em}\n                        fill=\"white\"\n                        opacity=\"0.15\"\n                      />\n                      <Animate\n                        start={{ width: 0 }}\n                        enter={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                        update={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                      >\n                        {(state) => (\n                          <Fragment>\n                            <rect\n                              x={legendsLength * em * 1.25}\n                              y={-1.25 * em}\n                              height={1.5 * em}\n                              {...state}\n                              fill={color}\n                              onClick={handleClick}\n                            />\n                            <text\n                              x={legendsLength * em * 1.25 + state.width + 0.5 * em}\n                              y=\"-.3em\"\n                              fill=\"white\"\n                              fontSize={em * 0.8}\n                            >\n                              {pd(dataByKey[label])}\n                            </text>\n                          </Fragment>\n                        )}\n                      </Animate>\n                    </Group>\n                  )\n                })}\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default PercentBars;\n","import { createElement } from 'react'\nimport withData from './withData';\n\nexport default (params, lockId) => (SubComp) => {\n  let key = 'data/bureaus'\n  if (typeof window !== 'undefined' && window.__ID !== '00000000') {\n    key = `${key}/${window.__ID}`\n  }\n  if (lockId) {\n    key = `${key}/${lockId}`\n  }\n  key = `${key}/laws`\n  return withData(key, params)(props => createElement(SubComp, { ...props, data: props[key] }))\n}\n","import React, { Fragment, PureComponent, createElement } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleLinear } from '@vx/scale';\nimport { LinearGradient } from '@vx/gradient';\nimport { RectClipPath } from '@vx/clip-path'\nimport { Animate } from 'react-move'\nimport sortBy from 'lodash/sortBy'\nimport shortid from 'shortid';\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n// import theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport LineBreakText from '../../components/Charts/LineBreakText'\nimport withLawData from '../../services/api/withLawData'\n\nconst labelLength = 15\n\nclass LawTops extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.SIG = shortid.generate()\n  }\n\n  componentDidUpdate(prevProps) {\n    const { year, updateParams, top } = this.props\n    if (prevProps.year !== year) {\n      updateParams({ year, top })\n    }\n  }\n\n  render() {\n    const { hasLine, color, ratio, top, data } = this.props;\n    const sorted = sortBy(data, 'count').slice(0, top)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase ratio={ratio}>\n            {({ width }) => {\n              const yStart = em * 2.5\n              const xStart = labelLength * em * 1.1;\n              const xEnd = width - 3 * em - xStart\n              const xScale = scaleLinear({\n                range: [0, xEnd],\n                domain: [0, Math.max(...sorted.map(d => d.count))],\n              });\n              return (\n                <Fragment>\n                  <LinearGradient from=\"#ffab2a\" to=\"#ff712a\" vertical={false} id={`bar-ramp-${this.SIG}`} />\n                  <Group top={yStart}>\n                    {Array.from(sorted).reverse().map((law, i) => {\n                      return (\n                        <Animate\n                          start={{ width: 0 }}\n                          enter={{\n                            width: [xScale(law.count)],\n                            timing: { duration: 200 },\n                          }}\n                          update={{\n                            width: [xScale(law.count)],\n                            timing: { duration: 200 },\n                          }}\n                          key={law.id}\n                        >\n                          {(state) => (\n                            <Group top={i * em * 2.75}>\n                              <LineBreakText\n                                fill={color}\n                                fontSize={em}\n                                maxLength={labelLength}\n                                fillFront\n                                textAnchor=\"end\"\n                                x={xStart - em}\n                                y={0.5 * em}\n                              >\n                                {law.name}\n                              </LineBreakText>\n                              <RectClipPath\n                                id={`bar-${this.SIG}-${i}`}\n                                x={xStart}\n                                y=\"-0.5em\"\n                                width={state.width}\n                                height={1.25 * em}\n                              />\n                              <rect\n                                fill={`url(#bar-ramp-${this.SIG})`}\n                                clip-path={`url(#bar-${this.SIG}-${i})`}\n                                x={xStart}\n                                y=\"-0.5em\"\n                                width={xEnd}\n                                height={1.25 * em}\n                              />\n                              <text\n                                fill={color}\n                                x={xStart + state.width + em * 0.5}\n                                y=\"0.5em\"\n                              >{law.count}</text>\n                            </Group>\n                          )}\n                        </Animate>\n                      )\n                    })}\n                  </Group>\n                  {hasLine && (\n                    <line\n                      x1={xStart}\n                      x2={xStart}\n                      y1={yStart / 2}\n                      y2={yStart / 2 + sorted.length * em * 2.75}\n                      stroke={color}\n                      strokeWidth=\"1.5\"\n                    />\n                  )}\n                </Fragment>\n              )\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    );\n  }\n}\n\nexport default props => createElement(withLawData({ top: props.top, year: props.year }, props.lockId)(LawTops), props);\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { LinePath, Bar } from '@vx/shape';\nimport range from 'lodash/range'\nimport map from 'lodash/map'\nimport { NodeGroup } from 'react-move'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/TweenShape'\n\nconst xValue = d => d.month\nconst yValue = d => d.issued\n\nconst YearChart = ({\n  data,\n  ...props\n}) => {\n  const formattedData = map(data, (d, month) => ({\n    month,\n    ...d,\n    receivedRate: d.received / d.issued,\n  }))\n\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n            const yStart = 2 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em * 13\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(1, 13),\n              paddingInner: 0.3,\n              paddingOuter: 0.3,\n            })\n            const percentYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, 1.3],\n            });\n            const valueYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, Math.ceil(Math.max(...formattedData.map(yValue)) / 100) * 100],\n            });\n            const barWidth = xScale.bandwidth()\n            return (\n              <Group top={yStart}>\n                <Group left={xStart}>\n                  <Grid\n                    top={0}\n                    left={0}\n                    xScale={xScale}\n                    yScale={percentYScale}\n                    stroke=\"white\"\n                    width={xEnd - xStart}\n                    height={yHeight}\n                    numTicksRows={3}\n                    numTicksColumns={0}\n                    columnLineStyle={{\n                      strokeWidth: 0,\n                    }}\n                  />\n                  <AxisLeft\n                    top={0}\n                    left={0}\n                    scale={percentYScale}\n                    numTicks={3}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      textAnchor: 'end',\n                      fontSize: em * 0.8,\n                      dx: '-0.25em',\n                      dy: '0.25em'\n                    })}\n                    tickFormat={d => Math.round(d * 100)}\n                  />\n                  <AxisBottom\n                    top={yHeight}\n                    left={0}\n                    scale={xScale}\n                    numTicks={12}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickFormat={d => `${d}月`}\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      fontSize: em * 0.8,\n                      textAnchor: 'middle',\n                    })}\n                  />\n                  <Group left={xStart}>\n                    <LinePath\n                      x={dd => xScale(xValue(dd)) - barWidth / 2}\n                      y={dd => valueYScale(yValue(dd))}\n                    >\n                      {({ path }) => (\n                        <TweenShape\n                          d={path(formattedData)}\n                          stroke={theme.colors.lightOrange}\n                          strokeWidth=\"1.5\"\n                          fill=\"transparent\"\n                          duration={500}\n                        />\n                      )}\n                    </LinePath>\n                    <NodeGroup\n                      data={formattedData}\n                      keyAccessor={xValue}\n                      start={d => ({\n                        xPos: xScale(xValue(d)),\n                        barHeight: 0,\n                        dotY: yHeight,\n                      })}\n                      enter={d => ({\n                        barHeight: [yHeight - percentYScale(d.receivedRate)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                      update={d => ({\n                        xPos: [xScale(xValue(d))],\n                        barHeight: [yHeight - percentYScale(d.receivedRate)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <Fragment>\n                          {nodes.map(({ key, data: d, state: { xPos, barHeight, dotY } }) => {\n                            const barY = yHeight - barHeight;\n                            const dotX = xPos - barWidth / 2\n                            return (\n                              <Fragment key={key}>\n                                <Bar\n                                  x={xPos - barWidth}\n                                  y={barY}\n                                  width={barWidth}\n                                  height={barHeight}\n                                  fill={theme.colors.orange}\n                                  opacity={0.5}\n                                />\n                                <circle\n                                  cx={dotX}\n                                  cy={dotY}\n                                  r={em / 3}\n                                  fill={theme.colors.orange5}\n                                />\n                                <text\n                                  x={dotX}\n                                  y={dotY - em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  fill={theme.colors.orange}\n                                >\n                                  {yValue(d)}\n                                </text>\n                              </Fragment>\n                            )\n                          })}\n                        </Fragment>\n                      )}\n                    </NodeGroup>\n                  </Group>\n                </Group>\n                <Group top={yHeight / 2 - em} left={xEnd + 5 * em}>\n                  <Group>\n                    <text>案件量</text>\n                    <line\n                      x1={4 * em}\n                      y1={-0.5 * em}\n                      x2={7 * em}\n                      y2={-0.5 * em}\n                      stroke={theme.colors.lightOrange}\n                      strokeWidth=\"1.5\"\n                    />\n                  </Group>\n                  <Group top={2.5 * em}>\n                    <text>收繳率</text>\n                    <rect\n                      x={4 * em}\n                      y={-1 * em}\n                      width={3 * em}\n                      height={em}\n                      fill={theme.colors.orange}\n                      opacity={0.5}\n                    />\n                  </Group>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default YearChart;\n","import React, { Fragment, PureComponent, createRef } from 'react';\nimport { createPortal } from 'react-dom'\nimport { Group } from '@vx/group';\nimport { scalePoint, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { AreaClosed, Bar, Line } from '@vx/shape';\nimport { withTooltip } from '@vx/tooltip';\nimport { localPoint } from '@vx/event';\nimport range from 'lodash/range'\nimport { NodeGroup } from 'react-move'\nimport styled from 'styled-components';\n\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../../components/ThemeProvider/theme'\n\nimport Text from '../../../components/Text'\nimport Box from '../../../components/Box'\n\nimport ChartBase from '../../../components/Charts/ChartBase'\nimport TweenShape from '../../../components/Charts/TweenShape'\n\nconst TooltipBox = styled(Box)`\n  &::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 50%;\n    top: 100%;\n    transform: translateX(-50%);\n    width: 0;\n    height: 0;\n    border-left: 0.5em solid transparent;\n    border-right: 0.5em solid transparent;\n\n    border-top: 0.5em solid ${theme.colors.darkerBlue};\n  }\n`\n\nconst xValue = d => d.index\nconst yValue = d => d.issued\nconst yCancealedValue = d => d.canceled\n\nconst getZeros = n => {\n  if (n < 10) return 0\n  let i = 0\n  while (n / (10 ** i) > 10) {\n    i += 1\n  }\n  return i\n}\n\nclass IssuedChart extends PureComponent {\n  wrapper = createRef()\n\n  handleTooltip = ({ event, data, xScale, yScale, xStart }) => {\n    const { showTooltip } = this.props;\n    const { x } = localPoint(event);\n    const index = Math.round((x - xStart) / xScale.step());\n    const d = data[index];\n    showTooltip({\n      tooltipData: Object.assign({ canceledTop: yScale(yCancealedValue(d)) }, d),\n      tooltipLeft: xScale(xValue(d)) + xStart,\n      tooltipTop: yScale(yValue(d)),\n    });\n  }\n\n  render() {\n    const {\n      data,\n      xTickFormat,\n      showTooltop,\n      hideTooltip,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      events,\n      ...props\n    } = this.props\n    return (\n      <div ref={this.wrapper}>\n        <FontSizeContext.Consumer>\n          {({ em }) => (\n            <Fragment>\n              <ChartBase {...props}>\n                {({ width, height }) => {\n                  const yStart = 6 * em\n                  const yEnd = height - 2 * em\n                  const yHeight = yEnd - yStart\n                  const xStart = em * 3\n                  const xEnd = width - 2 * em\n                  const xScale = scalePoint({\n                    range: [0, xEnd - xStart],\n                    domain: range(0, data.length),\n                    // padding: 0.2,\n                  })\n                  const yMax = Math.max(...data.map(yValue))\n                  const z = getZeros(yMax)\n                  const yScale = scaleLinear({\n                    range: [yHeight, 0],\n                    domain: [0, Math.ceil(yMax / (10 ** z)) * (10 ** z)],\n                  });\n                  return (\n                    <Group>\n                      <Group top={yStart} left={xStart}>\n                        <AreaClosed\n                          x={dd => xScale(xValue(dd))}\n                          y={dd => yScale(yValue(dd))}\n                          yScale={yScale}\n                        >\n                          {({ path }) => (\n                            <TweenShape\n                              d={path(data)}\n                              stroke={theme.colors.lightOrange}\n                              fill={theme.colors.lightOrange}\n                              opacity={0.7}\n                              duration={500}\n                            />\n                          )}\n                        </AreaClosed>\n                        <AreaClosed\n                          x={dd => xScale(xValue(dd))}\n                          y={dd => yScale(yCancealedValue(dd))}\n                          yScale={yScale}\n                        >\n                          {({ path }) => (\n                            <TweenShape\n                              d={path(data)}\n                              stroke={theme.colors.orange}\n                              fill={theme.colors.orange}\n                              duration={500}\n                            />\n                          )}\n                        </AreaClosed>\n                        <Grid\n                          top={0}\n                          left={0}\n                          xScale={xScale}\n                          yScale={yScale}\n                          stroke={theme.colors.gray}\n                          width={xEnd - xStart}\n                          height={yHeight}\n                          numTicksRows={3}\n                          numTicksColumns={0}\n                          columnLineStyle={{\n                            strokeWidth: 0,\n                          }}\n                        />\n                        <AxisLeft\n                          top={0}\n                          left={0}\n                          scale={yScale}\n                          numTicks={3}\n                          stroke=\"black\"\n                          strokeWidth={1.5}\n                          tickStroke=\"none\"\n                          tickLabelProps={() => ({\n                            fill: 'black',\n                            textAnchor: 'end',\n                            fontSize: em * 0.8,\n                            dx: '-0.25em',\n                            dy: '0.25em'\n                          })}\n                        />\n                        <AxisBottom\n                          top={yHeight}\n                          left={0}\n                          scale={xScale}\n                          numTicks={12}\n                          stroke=\"black\"\n                          strokeWidth={1.5}\n                          tickStroke=\"none\"\n                          tickFormat={xTickFormat}\n                          tickLabelProps={() => ({\n                            fill: 'black',\n                            fontSize: em * 0.8,\n                            textAnchor: 'middle',\n                          })}\n                        />\n                        {tooltipData && (\n                          <Line\n                            from={{ x: tooltipLeft - xStart, y: tooltipTop }}\n                            to={{ x: tooltipLeft - xStart, y: yHeight }}\n                            stroke=\"white\"\n                            strokeWidth={2}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                        )}\n                        <NodeGroup\n                          data={data}\n                          keyAccessor={xValue}\n                          start={d => ({\n                            xPos: xScale(xValue(d)),\n                            dotY: yScale(yValue(d)),\n                            dotCanceledY: yScale(yCancealedValue(d)),\n                          })}\n                          enter={d => ({\n                            dotY: [yScale(yValue(d))],\n                            timing: { duration: 500 },\n                          })}\n                          update={d => ({\n                            xPos: [xScale(xValue(d))],\n                            dotY: [yScale(yValue(d))],\n                            dotCanceledY: [yScale(yCancealedValue(d))],\n                            timing: { duration: 500 },\n                          })}\n                        >\n                          {nodes => (\n                            <Fragment>\n                              {nodes.map(({ key, data: d, state: { xPos, dotY, dotCanceledY } }) => {\n                                return (\n                                  <Fragment key={key}>\n                                    <circle\n                                      cx={xPos}\n                                      cy={dotY}\n                                      r={em / 4}\n                                      fill={theme.colors.orange5}\n                                    />\n                                    <circle\n                                      cx={xPos}\n                                      cy={dotCanceledY}\n                                      r={em / 4}\n                                      fill={theme.colors.orange5}\n                                    />\n                                  </Fragment>\n                                )\n                              })}\n                            </Fragment>\n                          )}\n                        </NodeGroup>\n                      </Group>\n                      <Group top={1.75 * em} left={xEnd - 16 * em}>\n                        <Group>\n                          <text>案件量</text>\n                          <rect\n                            x={4 * em}\n                            y={-1 * em}\n                            width={3 * em}\n                            height={em}\n                            fill={theme.colors.lightOrange}\n                            opacity={0.7}\n                          />\n                        </Group>\n                        <Group left={8 * em}>\n                          <text>撤銷件數</text>\n                          <rect\n                            x={5.5 * em}\n                            y={-1 * em}\n                            width={3 * em}\n                            height={em}\n                            fill={theme.colors.orange}\n                          />\n                        </Group>\n                      </Group>\n                      <Bar\n                        x={0}\n                        y={0}\n                        width={width}\n                        height={height}\n                        fill=\"transparent\"\n                        data={data}\n                        onTouchStart={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onTouchMove={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onMouseMove={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onMouseLeave={() => hideTooltip()}\n                      />\n                      {tooltipData && (\n                        <g>\n                          <circle\n                            cx={tooltipLeft}\n                            cy={tooltipTop + yStart}\n                            r={em / 2}\n                            fill={theme.colors.darkBlue}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                          <circle\n                            cx={tooltipLeft}\n                            cy={tooltipData.canceledTop + yStart}\n                            r={em / 2}\n                            fill={theme.colors.darkBlue}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                        </g>\n                      )}\n                      {tooltipData && createPortal((\n                        <TooltipBox\n                          position=\"absolute\"\n                          top={tooltipTop - 0.5 * em}\n                          left={tooltipLeft}\n                          transform=\"translateX(-50%)\"\n                          p=\"1em\"\n                          bg=\"black\"\n                          color=\"white\"\n                          whiteSpace=\"nowrap\"\n                          gradient=\"darkBlue\"\n                          borderRadius=\"0.5em\"\n                          zIndex={10}\n                          fontSize=\"0.8em\"\n                        >\n                          <Text mb=\"0.25em\">案件量 {yValue(tooltipData)}</Text>\n                          <Text>撤銷數 {yCancealedValue(tooltipData)}</Text>\n                        </TooltipBox>\n                      ), this.wrapper.current)}\n                    </Group>\n                  )\n                }}\n              </ChartBase>\n            </Fragment>\n          )}\n        </FontSizeContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport default withTooltip(IssuedChart);\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport range from 'lodash/range'\nimport { NodeGroup } from 'react-move'\nimport { format } from 'd3-format'\n\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\n\nimport ChartBase from '../../../components/Charts/ChartBase'\n\nconst xValue = d => d.index\nconst yValue = d => d.receivedRate\nconst pd = format('.0%')\n\nconst ReceivedChart = ({\n  data,\n  getFill,\n  xTickFormat,\n  ...props\n}) => {\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n            const yStart = 6 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(0, data.length),\n              paddingInner: 0.2,\n            })\n            const yScale = scaleLinear({\n              range: [0, yHeight],\n              domain: [0, 1],\n            });\n            return (\n              <Group>\n                <Group top={yStart} left={xStart}>\n                  <NodeGroup\n                    data={data}\n                    keyAccessor={xValue}\n                    start={d => ({\n                      xPos: xScale(xValue(d)),\n                      y: 0,\n                    })}\n                    enter={d => ({\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                    update={d => ({\n                      xPos: [xScale(xValue(d))],\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                  >\n                    {nodes => (\n                      <Fragment>\n                        {nodes.map(({ key, data: d, state: { xPos, y } }) => {\n                          const barWidth = xScale.bandwidth()\n                          return (\n                            <g key={key}>\n                              <rect\n                                fill=\"#e2e2e3\"\n                                x={xPos}\n                                y={0}\n                                width={barWidth}\n                                height={yHeight}\n                              />\n                              <rect\n                                fill={getFill(d.index)}\n                                x={xPos}\n                                y={yHeight - y}\n                                width={barWidth}\n                                height={y}\n                              />\n                              <text\n                                fontSize={em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight - y - em}\n                                textAnchor=\"middle\"\n                              >\n                                {pd(yValue(d))}\n                              </text>\n                              <text\n                                fontSize={0.8 * em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight + 1.5 * em}\n                                textAnchor=\"middle\"\n                              >\n                                {xTickFormat(xValue(d))}\n                              </text>\n                            </g>\n                          )\n                        })}\n                      </Fragment>\n                    )}\n                  </NodeGroup>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default ReceivedChart;\n","import reduce from 'lodash/reduce'\n\nconst keys = [\n  'canceled',\n  'canceledDollar',\n  'issued',\n  'issuedDollar',\n  'received',\n  'receivedDollar',\n]\n\nexport const getBureauTotal = (data, activeType) => data.map(({ label, id, monthData }) => ({\n  label,\n  id,\n  ...keys.reduce((allData, key) => {\n    allData[key] = monthData.reduce((all, d) => all + (activeType ? d.types[activeType].data[key] : d.data[key]), 0)\n    return allData\n  }, {})\n})).map((d) => ({\n  ...d,\n  receiveRate: d.received / d.issued,\n  receiveDollarRate: d.receivedDollar / d.issuedDollar,\n}))\n\nexport const getTypes = (data, lockId) => Object.values(reduce(data, (allTypes, { monthData, id }) => {\n  if (!lockId || lockId === id) {\n    monthData.forEach(m => {\n      m.types.forEach((type) => {\n        allTypes[type.id] = allTypes[type.id] || { id: type.id, name: type.name, issued: 0, received: 0 }\n        allTypes[type.id].issued += type.data.issued\n        allTypes[type.id].received += type.data.received\n      })\n    })\n  }\n  return allTypes\n}, {}))\n\nexport const getMonthData = (data, activeType, lockId) => data.reduce((md, d) => {\n  if (!lockId || lockId === d.id) {\n    d.monthData.forEach((m) => {\n      md[m.month] = md[m.month] || { month: m.month }\n      keys.forEach((key) => {\n        md[m.month][key] = md[m.month][key] || 0\n        md[m.month][key] += (activeType ? m.types[activeType].data[key] : m.data[key])\n      }, {})\n    })\n  }\n  return md\n}, {})\n","import React, { PureComponent, createElement } from 'react';\nimport { compose } from 'redux'\nimport reduce from 'lodash/reduce'\nimport forEach from 'lodash/forEach'\nimport groupBy from 'lodash/groupBy'\n\nimport Box from '../../../components/Box'\nimport Flex from '../../../components/Flex'\nimport Toggler from '../../../components/Toggler'\n\nimport withDataState from '../../../services/api/withDataState'\n\nimport IssuedChart from './IssuedChart'\nimport ReceivedChart from './ReceivedChart'\n\nimport { getMonthData } from '../dataHandler'\nimport theme from '../../../components/ThemeProvider/theme';\n\nconst parseData = (d, initial) => {\n  const parsed = reduce(d, (va, { month, ...vv }) => {\n    Object.keys(vv).forEach(k => {\n      va[k] = va[k] || 0\n      va[k] += vv[k]\n    })\n    return va\n  }, initial)\n  parsed.receivedRate = parsed.received / parsed.issued\n  return parsed\n}\n\nconst colors = [\n  theme.colors.orange3,\n  theme.colors.orange5,\n  theme.colors.orange4,\n];\n\nclass YearByYear extends PureComponent {\n  static getDerivedStateFromProps(nextProps) {\n    const { year } = nextProps\n    return {\n      data: {\n        [year]: nextProps[`data/bureaus?year=${year}`],\n        [year - 1]: nextProps[`data/bureaus?year=${year - 1}`],\n        [year - 2]: nextProps[`data/bureaus?year=${year - 2}`],\n      }\n    }\n  }\n\n  state = {\n    chartType: 0,\n    timeType: 0,\n  }\n\n  handleToggle = key => value => this.setState({ [key]: value })\n\n  render() {\n    const { data, chartType, timeType } = this.state\n    const { year } = this.props\n    const formattedData = reduce(data, (fd, d, year) => {\n      let md = getMonthData(d.data)\n      if (timeType) {\n        md = groupBy(md, (dd) => Math.floor((dd.month - 1) / 3))\n        forEach(md, (v, i) => {\n          fd.push(parseData(v, {\n            year,\n            quarter: +i + 1,\n            index: (year - this.props.year + 2) * 4 + i * 1,\n          }))\n        })\n      } else {\n        fd.push(parseData(md, {\n          year,\n          index: year - this.props.year + 2,\n        }))\n      }\n      return fd\n    }, [])\n    const dataLength = formattedData.length\n    return (\n      <Box position=\"relative\" mx=\"4em\">\n        {createElement(chartType ? ReceivedChart : IssuedChart, {\n          key: `t-${timeType}`,\n          data: formattedData,\n          ratio: 0.66,\n          getFill: i => {\n            let c = i\n            if (timeType) {\n              c = Math.floor(i / 4)\n            }\n            return colors[c]\n          },\n          xTickFormat: d => {\n            if (timeType) {\n              const y = Math.floor(d / 4)\n              return year - (dataLength / 4 - y) + 1 + '第' + (d % 4 + 1) + '季'\n            }\n            return year - (dataLength - d) + 1\n          },\n        })}\n        <Flex position=\"absolute\" width={1} top=\"0\">\n          <Box>\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['案件數', '收繳率']}\n              activeIndex={chartType}\n              onToggle={this.handleToggle('chartType')}\n            />\n          </Box>\n          <Box ml=\"1em\">\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['年', '季']}\n              activeIndex={timeType}\n              onToggle={this.handleToggle('timeType')}\n            />\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default (props) => createElement(compose(\n  withDataState(`data/bureaus?year=${props.year}`),\n  withDataState(`data/bureaus?year=${props.year - 1}`),\n  withDataState(`data/bureaus?year=${props.year - 2}`),\n)(YearByYear), props);\n","import React, { createElement } from 'react';\nimport get from 'lodash/get'\n// import format from 'date-fns/format'\n\nimport Text from '../../components/Text'\nimport withDataState from '../../services/api/withDataState'\n\nconst LastUpdated = ({ lastUpdated }) => {\n  return (\n    <Text>資料更新日期：{get(lastUpdated, 'date')}</Text>\n  );\n}\n\nexport default props => createElement(withDataState('lastUpdated')(LastUpdated), props);\n","import React, { PureComponent, createElement } from 'react'\nimport { compose } from 'redux'\nimport map from 'lodash/map'\nimport last from 'lodash/last'\n\nimport Container from '../../components/Container'\nimport Box from '../../components/Box'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport YearButton from '../../components/YearButton'\nimport Toggler from '../../components/Toggler'\nimport Dropdown from '../../components/Dropdown';\nimport ModalButton from '../../components/ModalButton';\nimport PatternBg from '../../components/PatternBg';\n\nimport theme, { mobileOrDesktop } from '../../components/ThemeProvider/theme';\n\nimport withBureauData from '../../services/api/withBureauData'\nimport withDataState from '../../services/api/withDataState'\n\nimport Layout from '../Layout';\nimport BubbleLine from './BubbleLine'\nimport TypeDonut from './TypeDonut'\nimport PercentBars from './PercentBars'\nimport LawTops from './LawTops'\nimport YearChart from './YearChart'\n// import AvgDays from './AvgDays'\nimport YearByYear from './YearByYear'\nimport LastUpdated from './LastUpdated'\n\nimport {\n  getBureauTotal,\n  getMonthData,\n  getTypes,\n} from './dataHandler'\n\nclass IndexPage extends PureComponent {\n  static getDerivedStateFromProps(nexProps) {\n    const { typeList, data } = nexProps\n    const mappedData = map(data, ({ id, name, monthData }) => ({\n      label: name,\n      id,\n      monthData: monthData.map(m => ({\n        ...m,\n        types: m.types.reduce((t, td) => {\n          t[td.name] = td\n          return t\n        },{})\n      }))\n    }))\n    const typeLegends = typeList.map(({ name }, i) => ({\n      label: name,\n      color: theme.colors.spectrum[theme.colors.spectrum.length - 1 - i],\n    }))\n    return { mappedData, typeLegends }\n  }\n\n  state = {\n    sortBy: 'receiveRate',\n    sortOrder: 'asc',\n    chartIndex: 0,\n    lawType: 0,\n    typeLegends: [],\n    year: last(this.props.yearsList),\n  }\n\n  handleTypeFilter = activeType => this.setState({ activeType })\n\n  handleChartToggle = chartIndex => this.setState({ chartIndex })\n\n  handleYearChange = year => {\n    const { updateParams } = this.props\n    updateParams({ year })\n    this.setState({ year })\n  }\n\n  setLawType = lawType => this.setState({ lawType })\n\n  setLock = lockId => this.setState({ lockId })\n\n  handleReset = () => this.setState({\n    lockId: null,\n    chartIndex: 0,\n    lawType: 0,\n    activeType: null,\n  })\n\n  render() {\n    const { data, typeList, yearsList: years } = this.props\n    const {\n      sortBy,\n      sortOrder,\n      chartIndex,\n      activeType,\n      mappedData,\n      year,\n      lawType,\n      typeLegends,\n      lockId,\n    } = this.state\n\n    const bureauTotal = getBureauTotal(mappedData, activeType)\n    const monthData = getMonthData(mappedData, activeType, lockId)\n    const types = getTypes(data, lockId)\n    return (\n      <Layout>\n        <Box backgroundImage=\"linear-gradient(#fff 80%, #e0e0e4 100%)\">\n          <PatternBg pt=\"2em\" pb=\"3em\">\n            <Container>\n              <Flex alignItems=\"center\">\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">案件類別</Text>\n                <Box width=\"12em\" py=\"1em\">\n                  <Dropdown\n                    placeholder=\"全部\"\n                    value={activeType}\n                    options={typeList.map(({ name }) => name)}\n                    onChange={({ value }) => this.handleTypeFilter(value)}\n                  />\n                </Box>\n                <Box flex=\"1\" />\n                <LastUpdated />\n              </Flex>\n              <Flex alignItems=\"center\">\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">各局處案件量分析</Text>\n                <YearButton\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n              </Flex>\n              <Box textAlign=\"right\" my=\"1em\">\n                <Button onClick={this.handleReset}>切回預設</Button>\n              </Box>\n              <BubbleLine\n                ratio={1 / 4}\n                data={bureauTotal}\n                sortBy={sortBy}\n                sortOrder={sortOrder}\n                lockId={lockId}\n                onLock={this.setLock}\n              />\n            </Container>\n          </PatternBg>\n        </Box>\n        <Box\n          py={mobileOrDesktop(0, '2em')}\n          gradient=\"darkBlue\"\n        >\n          <Container>\n            <Flex borderBottom=\"1px solid\">\n              <Box pl=\"1em\" pr=\"2em\" width={2 / 5} borderRight=\"1px solid\">\n                <Box position=\"relative\">\n                  {createElement(chartIndex ? PercentBars : TypeDonut , Object.assign({\n                    ratio: 0.6,\n                    data: types,\n                    legends: typeLegends,\n                    onLegendClick: this.handleTypeFilter,\n                    activeLegend: activeType,\n                  }, chartIndex ? {} : {\n                    valueGetter: d => d.issued,\n                    outerCircle: true,\n                    showLegend: true,\n                  }))}\n                  <Box position=\"absolute\" top=\"0\" left=\"0\">\n                    <Toggler activeIndex={chartIndex} onToggle={this.handleChartToggle} options={['案件數', '收繳率']} />\n                  </Box>\n                  <Box position=\"absolute\" right=\"0\" bottom=\"0\">\n                    {!chartIndex && (\n                      <ModalButton\n                        is={Button.lightBg}\n                        label=\"查看更多\"\n                        title=\"案件分類分析\"\n                      >\n                        <Box px=\"10%\">\n                          <TypeDonut\n                            ratio={0.7}\n                            valueGetter={d => d.issued}\n                            data={types}\n                            showPercentage\n                            legends={typeLegends}\n                            showLabel\n                          />\n                        </Box>\n                      </ModalButton>\n                    )}\n                  </Box>\n                </Box>\n              </Box>\n              <Box pl=\"2em\" pr=\"1em\" width={3 / 5}>\n                <Flex pt=\"0.5em\" pb=\"1.25em\" alignItems=\"center\" borderBottom=\"1px solid\">\n                  <Text fontSize=\"1.5em\"><Text.inline letterSpacing=\"0.15em\">違反法條</Text.inline> TOP 5</Text>\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"查看更多\"\n                    title=\"違反法條TOP10\"\n                    mx=\"2em\"\n                  >\n                    <Flex alignItems=\"center\">\n                      <Box mx=\"2em\">\n                        <Box my=\"1em\">\n                          <Button active={lawType === 0} onClick={() => this.setLawType(0)}>所有法條分析</Button>\n                        </Box>\n                        <Box my=\"1em\">\n                          <Button active={lawType === 1} onClick={() => this.setLawType(1)}>公安法條分析</Button>\n                        </Box>\n                      </Box>\n                      <Box flex=\"1\" px=\"2em\">\n                        <LawTops key={10} top={10} year={year} color=\"text\" ratio={0.7} lockId={lockId} />\n                      </Box>\n                    </Flex>\n                  </ModalButton>\n                  {/* <Box flex=\"1\" /> */}\n                  {/* <AvgDays year={year} /> */}\n                </Flex>\n                <LawTops key={5} year={year} top={5} hasLine color=\"white\" ratio={0.35} lockId={lockId} />\n              </Box>\n            </Flex>\n            <Flex px=\"5%\" py=\"2em\" alignItems=\"center\">\n              <Box px=\"2em\">\n                <YearButton\n                  justifyContent=\"center\"\n                  darkBg\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n                <Box fontSize=\"1.5em\" letterSpacing=\"0.15em\" my=\"1em\" borderBottom=\"1px solid\" pb=\"0.5rem\">月案件量分析</Box>\n                <Box textAlign=\"center\">\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"看歷年分析\"\n                    title={`${year - 2}-${year}案件量分析`}\n                  >\n                    <YearByYear year={year} />\n                  </ModalButton>\n                </Box>\n              </Box>\n              <Box flex=\"1\">\n                <YearChart ratio={1 / 5} data={monthData} />\n              </Box>\n            </Flex>\n          </Container>\n        </Box>\n      </Layout>\n    )\n  }\n}\n\n\nexport default compose(\n  withDataState('yearsList'),\n  withDataState('typeList'),\n  withBureauData,\n)(IndexPage)\n","import React from 'react';\n\nimport HomePage from './containers/HomePage'\n\nfunction App() {\n  return <HomePage />\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport { fontSize } from 'styled-system'\n\nimport theme from './theme';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Comfortaa:400,700&display=swap');\n  body {\n    font-family: ${theme.font};\n    ${fontSize};\n    min-width: 100%;\n    min-height: 100%;\n    color: ${theme.colors.text};\n  }\n`;\n","import React, { Fragment } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport 'sanitize.css';\nimport { SizeMe } from 'react-sizeme'\n\nimport FontSizeContext from './FontSizeContext'\nimport GlobalStyles from './global-styles';\n\nimport theme from './theme';\n\nexport default ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <SizeMe>\n      {({ size: { width } }) => {\n        const fontSize = Math.round(Math.max(width, 800) / 94)\n        return (\n          <div>\n            <FontSizeContext.Provider value={{ em: fontSize }}>\n              <Fragment>\n                <GlobalStyles fontSize={fontSize} />\n                {children}\n              </Fragment>\n            </FontSizeContext.Provider>\n          </div>\n        )\n      }}\n    </SizeMe>\n  </ThemeProvider>\n);\n","/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}\n","const BASE_URI = 'https://relab.cc/law-api-test/v2';\n\n// const BASE = process.env.NODE_ENV === 'production' ? BASE_URI : BASE_URI_LOCAL;\n\nexport const API_BASE = BASE_URI;\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { actionTypes } from 'redux-resource';\nimport reduce from 'lodash/reduce'\nimport isObject from 'lodash/isObject'\n\nimport sendRequest from '../../utils/request';\n\nimport { API_BASE } from './config';\nimport { GET_DATA, receivedDataSuccess, receivedDataError } from './reducer';\n\nconst processData = data => data\n\nfunction* handleRequest(target, onSuccess, onError) {\n  try {\n    const res = yield call(sendRequest, target);\n    yield put(onSuccess(res));\n  } catch (error) {\n    console.error(error)\n    yield put(onError(error));\n  }\n}\n\nfunction* handleManualRead({ payload: { key, params } }) {\n  const qs = isObject(params) ? reduce(params, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\n  const resourceBase = `${API_BASE}/${key}${qs}`;\n  yield call(\n    handleRequest,\n    resourceBase,\n    (data) => receivedDataSuccess({\n      key,\n      data,\n    }),\n    // onError\n    () => receivedDataError({ key }),\n  );\n}\n\nfunction* handleRead({ resourceType, resources, requestKey, requestParams }) {\n  const qs = isObject(requestParams) ? reduce(requestParams, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\n  const resourceBase = `${API_BASE}/${resourceType}${qs}`;\n  if (resources) {\n    yield all(\n      resources.map(id =>\n        call(\n          handleRequest,\n          // target\n          `${resourceBase}/${id}`,\n          // onSuccess\n          data => ({\n            type: actionTypes.READ_RESOURCES_SUCCEEDED,\n            resourceType,\n            resources: [processData(data)],\n          }),\n          // onError\n          () => ({\n            type: actionTypes.READ_RESOURCES_FAILED,\n            resourceType,\n            resources: [id],\n          }),\n        ),\n      ),\n    );\n  } else {\n    yield call(\n      handleRequest,\n      resourceBase,\n      ({ data }) => ({\n        type: actionTypes.READ_RESOURCES_SUCCEEDED,\n        resourceType,\n        resources: data.map(processData),\n        requestKey,\n      }),\n      // onError\n      () => ({\n        type: actionTypes.READ_RESOURCES_FAILED,\n        resourceType,\n        requestKey,\n      }),\n    );\n  }\n}\n\nexport default function* apiSagas() {\n  yield all([\n    takeEvery(actionTypes.READ_RESOURCES_PENDING, handleRead),\n    takeEvery(GET_DATA, handleManualRead),\n  ]);\n}\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux';\nimport { calculateResponsiveState } from 'redux-responsive'\n\nimport ThemeProvider from './components/ThemeProvider';\nimport creatStore from './stores/createStore';\n\nconst store = creatStore();\n\nwindow.__ID = '00000000'\nif (window.location.search) {\n  const res = /bureauId=([^&]+)/g.exec(window.location.search)\n  if (res && res[1]) {\n    window.__ID = decodeURIComponent(res[1])\n  }\n}\n\nclass InitialDispatch extends Component {\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      store.dispatch(calculateResponsiveState(window))\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default ({ children }) => (\n  <Provider store={store}>\n    <InitialDispatch>\n      <ThemeProvider>{children}</ThemeProvider>\n    </InitialDispatch>\n  </Provider>\n)\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport { createResponsiveStoreEnhancer } from 'redux-responsive';\nimport createSagaMiddleware from 'redux-saga';\n\nimport apiSagas from '../services/api/sagas';\nimport createReducer from './reducers';\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    createResponsiveStoreEnhancer({ calculateInitialState: false }),\n  ];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers =\n    (process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n  /* eslint-enable */\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n\n  store.runSaga = sagaMiddleware.run;\n  sagaMiddleware.run(apiSagas);\n  store.injectedReducers = {}; // Reducer registry\n\n  return store;\n}\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WithProvider from './with-provider'\n\nif (document.getElementById('root')) {\n  const App = require('./App').default;\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('root'));\n}\n\nif (document.getElementById('summary')) {\n  const App = require('./Summary').default;\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('summary'));\n}\n","import React from 'react';\r\n\r\nimport Box from '../Box'\r\nimport line from './line.svg'\r\n\r\nconst PatternBg = ({ children, ...props }) => (\r\n  <Box\r\n    {...props}\r\n    backgroundImage={`url('${line}')`}\r\n  >\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nPatternBg.defaultProps = {\r\n  backgroundSize: '20px',\r\n  backgroundRepeat: 'repeat no-repeat',\r\n  backgroundPosition: 'center',\r\n}\r\n\r\nexport default PatternBg;\r\n","import React, { PureComponent } from 'react'\n\nimport Container from '../../components/Container'\nimport Box from '../../components/Box'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport PatternBg from '../../components/PatternBg';\nimport LineBg from '../../components/LineBg';\n\nimport withDataState from '../../services/api/withDataState'\n\nimport Layout from '../Layout';\n\nclass SummaryPage extends PureComponent {\n  state = {}\n\n  render() {\n    const { summary } = this.props\n    console.log(summary)\n    const primarys = summary.primary;\n    const secondarys = summary.secondary\n    const Module = ({ color, value, label, unit, datas, ...props}) => (\n      <Flex flexWrap=\"wrap\" px=\"5em\" {...props}>\n        {datas.map(({value, label, unit}, index) => (\n          <Box px=\"2em\" width={1/3} key={index}>\n            <Box bg=\"lightGray\" my=\"2em\" borderRadius=\"5em\" py=\"1.5em\">\n              <Flex alignItems=\"center\">\n                <Box width={3/10} textAlign=\"right\" borderRight=\"2px solid\" pr=\"1em\" py=\"0.5em\">\n                  <Text.inline fontSize=\"2em\" color={color}>{value}</Text.inline>\n                  <Text.inline pl=\"0.25em\">{unit}</Text.inline>\n                </Box>\n                <Box width={7/10} whiteSpace=\"pre\" pl=\"1em\" py=\"0.5em\">\n                  {label.replace(String.fromCharCode(92).concat('n'), '\\n')}\n                </Box>\n              </Flex>\n            </Box>\n          </Box>\n        ))}\n      </Flex>\n    )\n    return (\n      <Layout>\n        <PatternBg py=\"2em\">\n          <Container>\n            <Box fontSize=\"1.5em\" borderBottom=\"1px solid\" py=\"0.75em\">\n              <Text letterSpacing={2} fontWeight=\"bold\" color=\"textBlue\">案件情況</Text>\n            </Box>\n            <Module datas={primarys} color=\"textYellow\" my=\"2em\" />\n            <LineBg>\n              <Box height=\"2em\" />\n            </LineBg>\n            <Module datas={secondarys} color=\"textBlue\" />\n          </Container>\n        </PatternBg>\n      </Layout>\n    )\n  }\n}\n\n\nexport default withDataState('summary')(SummaryPage)\n","import React from 'react';\n\nimport SummaryPage from './containers/SummaryPage'\n\nfunction App() {\n  return <SummaryPage />\n}\n\nexport default App;\n","const allProps = [\n  'margin',\n  'm',\n  'marginTop',\n  'mt',\n  'marginBottom',\n  'mb',\n  'marginLeft',\n  'ml',\n  'marginRight',\n  'mr',\n  'mx',\n  'my',\n  'padding',\n  'p',\n  'paddingTop',\n  'pt',\n  'paddingBottom',\n  'pb',\n  'paddingLeft',\n  'pl',\n  'paddingRight',\n  'pr',\n  'px',\n  'py',\n  'width',\n  'fontSize',\n  'fontFamily',\n  'fontWeight',\n  'lineHeight',\n  'textAlign',\n  'fontStyle',\n  'letterSpacing',\n  'display',\n  'maxWidth',\n  'minWidth',\n  'height',\n  'maxHeight',\n  'minHeight',\n  'color',\n  'backgroundColor',\n  'bg',\n  'verticalAlign',\n  'alignItems',\n  'alignContent',\n  'justifyItems',\n  'justifyContent',\n  'flexWrap',\n  'flexBasis',\n  'flexDirection',\n  'flex',\n  'justifySelf',\n  'alignSelf',\n  'order',\n  'gridGap',\n  'gridColumnGap',\n  'gridRowGap',\n  'gridColumn',\n  'gridRow',\n  'gridAutoFlow',\n  'gridAutoColumns',\n  'gridAutoRows',\n  'gridTemplateColumns',\n  'gridTemplateRows',\n  'gridTemplateAreas',\n  'gridArea',\n  'border',\n  'borderWidth',\n  'borderStyle',\n  'borderColor',\n  'borderTop',\n  'borderRight',\n  'borderBottom',\n  'borderLeft',\n  'borderRadius',\n  'boxShadow',\n  'opacity',\n  'overflow',\n  'background',\n  'backgroundImage',\n  'backgroundSize',\n  'backgroundPosition',\n  'backgroundRepeat',\n  'position',\n  'zIndex',\n  'top',\n  'right',\n  'bottom',\n  'left',\n];\n\nexport default [\n  ...allProps,\n  'transform',\n  'transition',\n  'overflow',\n  'opacity',\n  'alpha',\n  'hoverColor',\n  'hoverBg',\n  'hoverBorder',\n  'hoverBgImg',\n  'zOrder',\n  'verticalAlign',\n  'whiteSpace',\n  'dispatch',\n  'isMobile',\n  'browser',\n  'gradient',\n];\n","import { fromJS } from 'immutable';\nimport { createAction, handleActions } from 'redux-actions'\n\nimport {\n  STATUS_ERROR,\n  STATUS_LOADED,\n  STATUS_LOADING,\n} from './constants'\n\nexport const GET_DATA = 'API/GET_DATA'\n\nexport const getData = createAction(GET_DATA)\nexport const receivedDataSuccess = createAction('API/RECEIVED_DATA_SUCCESS')\nexport const receivedDataError = createAction('API/RECEIVED_DATA_ERROR')\n\nconst initialState = fromJS({})\n\nconst reducer = handleActions({\n  [getData]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_LOADING),\n  [receivedDataSuccess]: (state, { payload: { key, data } }) => state\n    .setIn([key, 'status'], STATUS_LOADED)\n    .setIn([key, 'data'], data),\n  [receivedDataError]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_ERROR),\n}, initialState)\n\nexport default reducer\n","export const STATUS_LOADING = 'STATUS_LOADING';\nexport const STATUS_LOADED = 'STATUS_LOADED';\nexport const STATUS_ERROR = 'STATUS_ERROR';\n","import merge from 'lodash/merge';\r\nimport { style } from 'styled-system';\r\n\r\nconst getConfig = (key, options) => merge({\r\n  prop: key,\r\n  cssProperty: key,\r\n}, options);\r\n\r\nconst injectProps = (key, options) => style(getConfig(key, options));\r\n\r\nexport default injectProps;\r\n"],"sourceRoot":""}