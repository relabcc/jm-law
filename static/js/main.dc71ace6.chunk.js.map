{"version":3,"sources":["components/utils/getColor.js","components/Container.js","stores/reducers.js","components/PatternBg/index.js","containers/Layout/index.js","components/Dropdown.js","hoc/withResponsive.js","components/PatternBg/dot.svg","components/LineBg/line.svg","components/Text.js","components/ThemeProvider/FontSizeContext.js","components/Flex.js","components/Box.js","components/ThemeProvider/theme.js","components/utils/blacklist.js","components/Button.js","components/YearButton.js","components/Toggler.js","components/Circle.js","components/Modal.js","components/ModalButton.js","utils/checkStore.js","utils/reducerInjectors.js","utils/injectReducer.js","services/api/withData.js","services/api/withBureauData.js","components/Charts/ChartBase.js","components/Charts/LineBreakText.js","containers/HomePage/InfoSection.js","containers/HomePage/BubbleLine.js","components/Charts/PathInterpolation.js","containers/HomePage/TypeDonut.js","containers/HomePage/PercentBars.js","services/api/withLawData.js","containers/HomePage/LawTops.js","components/Charts/TweenShape.js","containers/HomePage/YearChart.js","containers/HomePage/YearByYear/IssuedChart.js","containers/HomePage/YearByYear/ReceivedChart.js","containers/HomePage/dataHandler.js","containers/HomePage/YearByYear/index.js","containers/HomePage/LastUpdated.js","containers/HomePage/index.js","App.js","components/ThemeProvider/global-styles.js","components/ThemeProvider/index.js","utils/request.js","services/api/config.js","services/api/sagas.js","with-provider.js","stores/createStore.js","index.js","components/Link.js","components/LineBg/index.js","containers/SummaryPage/index.js","Summary.js","services/api/withDataState.js","services/api/reducer.js","services/api/constants.js","components/utils/injectProps.js"],"names":["customColor","prop","cssProperty","style","key","Container","props","defaultProps","mx","px","width","displayName","names","createReducer","injectedReducers","combineReducers","browser","createResponsiveStateReducer","fromPairs","zip","breakpoints","map","bp","parseInt","api","PatternBg","children","backgroundImage","dot","backgroundSize","backgroundRepeat","backgroundPosition","Layout","height","minWidth","StyledDropdown","styled","Dropdown","themeGet","CustomDropdown","isMobile","options","onChange","value","onBlur","placeholder","name","disabled","defaultValue","activeTypeOption","find","opt","Box","concat","label","withResponsive","WrappedComp","connect","state","get","lessThan","md","module","exports","Text","tag","typography","display","space","color","position","injectProps","is","fontSize","blacklist","inline","bold","fontWeight","thin","range","forEach","h","createContext","Flex","flexbox","layout","zIndex","border","flex","borderRadius","opacity","variant","scale","onClick","forwardRef","ref","verticalAlign","emToPx","em","containerWidth","mobileOrDesktop","mobile","desktop","generateFade","r","g","b","reduce","fade","merge","join","spectrum","orange","darkOrange","lightOrange","darkRed","oranges","o","c","i","primary","colors","white","black","gray","dropdownBg","textYellow","lightGray","darkGray","textBlue","darkBlue","darkerBlue","text","primaryHover","font","headerHeight","zOrder","gradients","none","active","css","buttonStyle","borderColor","ButtonBase","InButtonSpan","Button","leftIcon","rightIcon","iconSpacing","mr","ml","bg","gradient","hoverColor","hoverBg","hoverBgImg","hoverBorder","py","lightBg","theme","outline","transparent","YearButton","handleNextYear","newYear","activeYear","setState","years","handleLastYear","this","currentYear","darkBg","alignItems","createElement","size","length","prevState","findIndex","y","PureComponent","Toggler","poses","handleBound","bounds","every","Boolean","activeIndex","onToggle","FontSizeContext","Consumer","left","top","bottom","transition","transform","onResize","measureRef","Circle","pt","right","lineHeight","defaultStyles","overlay","backgroundColor","content","marginRight","padding","overflow","Modal","setAppElement","customStyles","title","justifyContent","pb","borderBottom","letterSpacing","p","onRequestClose","m","ModalButton","openModal","open","closeModal","isOpen","checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","isObject","invariant","conformsTo","injectReducerFactory","isValid","reducer","isString","isEmpty","Reflect","has","WrappedComponent","ReducerInjector","injectors","context","injectReducer","React","Component","contextType","ReactReduxContext","hoistNonReactStatics","params","transformer","ids","isArray","isNumber","listMode","resources","SIG","md5","JSON","stringify","SubComp","window","WithData","request","skip","requestParams","checkIsPending","checkIsDone","type","actionTypes","READ_RESOURCES_PENDING","resourceType","undefined","requestKey","setTimeout","resync","updateParams","checkStatus","status","requestStatuses","PENDING","SUCCEEDED","FAILED","data","textAlign","my","withReducer","resourceReducer","comp","compose","keys","ChartBase","dimensions","handleResize","debounce","ratio","backwardAutoLineBreak","str","maxLength","fillFront","strArr","Array","from","reverse","lines","st","substr","LineBreakText","x","lineBefore","verticalCenter","maxLines","perLine","lineCount","yPos","texts","w","yStart","Math","min","yEnd","max","fill","num","format","InfoSection","labelStart","onWidthChange","prevProps","main","sub","xEnd","mainValueStart","subValueStart","mainYStart","subYStart","x1","x2","y1","y2","stroke","strokeWidth","unit","textAnchor","mainLabelStart","toString","subLabelStart","newLabelStart","f","emPercent","n","isNaN","Infinity","isTopBureau","__SHOW_BUREAU_ID","singleBureau","__BUREAU_ID","BubbleLine","activeId","wrapper","createRef","handleTooltip","event","xScale","localPoint","d","round","invert","id","handleClick","lockId","onLock","handleInfoWidthChange","newStart","sortBy","sortOrder","namedData","sortedData","loSortBy","rLabelHeight","rMax","leftLabelWidth","xStart","lableY","rateY","executedRateY","scaleLinear","domain","valueMax","issued","rScale","scalePower","exponent","to","vertical","orange6","orange3","orange4","fromOffset","orange5","toOpacity","rx","strokeLinecap","start","update","timing","duration","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","keyAccessor","cx","otherOpacity","centerR","enter","centerActive","leave","nodes","cy","pointerEvents","mixBlendMode","receiveRate","executedRate","HoverSensor","isHover","boxHeight","boxWidth","cursor","location","search","encodeURIComponent","createPortal","points","current","sum","issuedDollar","received","receivedDollar","canceled","nd","PathInterpolation","prevD","thisD","interpolator","interpolate","TypeDonut","outerShapes","handleOuterShape","legends","onLegendClick","activeLegend","valueGetter","outerCircle","showLegend","showLabel","showPercentage","totalVaue","dataLength","labelLength","getColorByName","getIndexByName","spaceForLabels","notEnoughSpace","donutR","legendBottom","legend","pieValue","outerRadius","innerRadius","padAngle","pieSort","a","pie","arcs","arc","path","sideOrders","scaleLabelY","sides","groupBy","centroid","index","side","sign","distanceX","abs","distanceY","sideGroups","so","s","filteredS","filter","sd","ss","sorted","sort","slice","otherI","mapValues","scaleBand","centroidX","centroidY","dy","bandwidth","centX","centY","breakX","startAngle","endAngle","floor","cn","l","pd","PercentBars","dataByKey","dk","legendsLength","maxRate","ceil","LawTops","shortid","generate","year","hasLine","publicOnly","isPublic","count","law","substring","clipPath","withData","Object","assign","withLawData","animate","requestAnimationFrame","TWEEN","relative","lArcFlag","sweepFlag","TweenShape","pathRef","updatePath","parsed","SVGPathData","toAbs","commands","tweens","prevParsed","fromValues","pickBy","v","k","toValues","tickShape","tween","Tween","easing","Easing","Quadratic","InOut","onUpdate","handleUpdate","tick","stop","doUpdatePath","encoded","encodeSVGPath","setAttribute","xValue","month","yValue","YearChart","formattedData","receivedRate","yHeight","paddingInner","paddingOuter","percentYScale","valueYMax","valueYScale","barWidth","yScale","numTicksRows","numTicksColumns","columnLineStyle","numTicks","tickStroke","tickLabelProps","dx","tickFormat","dd","xPos","barHeight","dotY","barY","dotX","TooltipBox","yCancealedValue","IssuedChart","showTooltip","step","tooltipData","canceledTop","tooltipLeft","tooltipTop","xTickFormat","hideTooltip","tooltipOpen","updateTooltip","events","getFill","scalePoint","yMax","z","getZeros","dotCanceledY","whiteSpace","mb","withTooltip","ReceivedChart","getMonthData","activeType","monthData","types","mapData","t","td","parseData","initial","va","vv","YearByYear","chartType","timeType","handleToggle","fd","push","quarter","nextProps","withDataState","LastUpdated","lastUpdated","IndexPage","chartIndex","typeLegends","last","yearsList","typeOptions","handleTypeFilter","handleChartToggle","handleYearChange","setPublicOnly","setLock","handleReset","mappedData","bureauTotal","allData","all","executed","getBureauTotal","values","allTypes","df","getTypes","history","back","pl","pr","borderRight","nexProps","typeList","Date","getFullYear","App","HomePage","createGlobalStyle","Provider","parseJSON","response","json","error","Error","statusText","url","fetch","then","API_BASE","handleRequest","handleManualRead","handleRead","apiSagas","target","onSuccess","onError","call","sendRequest","res","put","console","payload","qs","q","resourceBase","receivedDataSuccess","receivedDataError","READ_RESOURCES_SUCCEEDED","READ_RESOURCES_FAILED","takeEvery","GET_DATA","initialState","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","createResponsiveStoreEnhancer","calculateInitialState","composeEnhancers","createStore","fromJS","runSaga","run","creatStore","exec","decodeURIComponent","InitialDispatch","calculateResponsiveState","ThemeProvider","document","getElementById","require","default","ReactDOM","render","linkStyle","NomalLink","Link","line","Module","datas","flexWrap","href","SummaryPage","summary","primarys","secondarys","secondary","LineBg","TypeSummary","__DEPARTMENT_ID","departmentId","useState","newParams","getData","STATUS_LOADING","STATUS_LOADED","STATUS_ERROR","getIn","bindActionCreators","createAction","handleActions","setIn","getConfig"],"mappings":"4GAAA,6CAEaA,EAAc,SAACC,GAAD,IAAOC,EAAP,uDAAqB,QAArB,OAAiCC,YAAO,CACjEF,OACAC,cACAE,IAAK,a,iCCLP,2BAIMC,EAAY,SAACC,GAAD,OAAW,kBAAC,IAAQA,IAEtCD,EAAUE,aAAe,CACvBC,GAAI,OACJC,GAAI,CAAC,MAAO,KAAM,OAClBC,MAAO,GAGTL,EAAUM,YAAc,YAETN,O,kXCFf,IAAMO,EAAQ,CACZ,MACA,KACA,KACA,KACA,KACA,MAMa,SAASC,EAAcC,GACpC,OAAOC,0B,yWAAgB,CAAD,CACpBC,QAASC,uCAA6BC,IAAUC,IAAIP,EAAOQ,IAAYC,KAAI,SAACC,GAAD,OAAQC,SAASD,EAAI,IAAM,QACtGE,SACGV,M,sFCvBDW,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAapB,EAAhB,mCAChB,kBAAC,IAAD,iBACMA,EADN,CAEEqB,gBAAe,eAAUC,IAAV,QAEdF,IAILD,EAAUlB,aAAe,CACvBsB,eAAgB,OAChBC,iBAAkB,gBAClBC,mBAAoB,UAGPN,O,iCCpBf,2BAeeO,IAVA,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAH,OACb,kBAAC,IAAD,CAAKO,OAAO,QAAQC,SAAS,SAC1BR,K,6gCCGL,IAAMS,EAAiBC,YAAOC,IAAPD,CAAH,IA6BME,YAAS,qBAGTA,YAAS,sBAU7BC,EAAiB,SAAC,GAWlB,EAVJC,SAUK,IATLC,EASI,EATJA,QACAC,EAQI,EARJA,SAEAC,GAMI,EAPJC,OAOI,EANJD,OAEAE,GAII,EALJC,KAKI,EAJJD,aACAE,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACG1C,EACC,iHACE2C,EAAmBR,EAAQS,MAAK,SAACC,GAAD,OAASA,EAAIR,QAAUA,KAC7D,OACE,kBAACS,EAAA,EAAQ9C,EACP,kBAAC6B,EAAD,CACEO,SAAUA,EACVD,QAAS,CAACO,GAAcK,OAAOZ,GAC/BE,MAAOM,GAAoBD,EAC3BH,YAAaA,EACbE,SAAUA,MAMlBR,EAAehC,aAAe,CAC5BsC,YAAa,qBACbG,aAAc,CAAEM,MAAO,eAAMX,MAAO,IACpCD,SAAU,cAGGa,IClFCC,EDkFDD,KClFCC,EDkFcjB,EClFEkB,aAAQ,SAACC,GACvC,IAAM1C,EAAU0C,EAAMC,IAAI,WAC1B,MAAO,CACL3C,UACAwB,SAAUxB,EAAQ4C,SAASC,MAJCJ,CAM7BD,K,oBCRHM,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,kUCe3C,IAAMC,EAAO5B,YAAO6B,IAAP7B,CAAH,IAGN8B,IACAC,IACAC,IACAC,IACAC,IACAC,YAAY,iBACZA,YAAY,eAGhBP,EAAKzD,aAAe,CAClBiE,GAAI,IACJC,SAAU,MAEVC,eAGFV,EAAKW,OAAS,SAACrE,GAAD,OAAW,kBAAC0D,EAAD,eAAMQ,GAAG,QAAWlE,KAC7C0D,EAAKY,KAAO,SAACtE,GAAD,OAAW,kBAAC0D,EAAD,eAAMa,WAAW,QAAWvE,KACnD0D,EAAKc,KAAO,SAACxE,GAAD,OAAW,kBAAC0D,EAAD,eAAMa,WAAW,OAAUvE,KAElDyE,IAAM,EAAG,GAAGC,SAAQ,SAAC5E,GACnB,IAAM6E,EAAC,WAAO7E,GACd4D,EAAKiB,GAAK,SAAC3E,GAAD,OACR,kBAAC0D,EAAD,eACEQ,GAAIS,EACJR,SAAQ,UAAK,EAAiB,MAAX,EAAIrE,GAAf,OACJE,QAKV0D,EAAKrD,YAAc,OAEJqD,O,gCCnDf,WAEekB,4BAAc,K,wJCI7B,IAAMC,EAAO/C,YAAOgB,IAAPhB,CAAH,IACNgD,KAGJD,EAAK5E,aAAe,CAClB4D,QAAS,OACTO,eAGFS,EAAKxE,YAAc,OAEJwE,O,4UCQf,IAAM/B,EAAMhB,YAAO6B,IAAP7B,CAAH,IACLgC,IACAiB,IACAf,IACAJ,IACAG,IACAC,IACAgB,IACAC,IACAC,IACAC,IACAC,IACA/D,IACAE,IACAC,IACAC,IACA4D,YAAQ,CAAEC,MAAO,YAAa3F,KAAM,aACpCsE,YAAY,cACZA,YAAY,YACZA,YAAY,aACZA,YAAY,cACZpE,YAAM,CACNF,KAAM,SACNC,YAAa,SACbE,IAAK,YAEL,qBAAGyF,SAAyB,sBAGhCzC,EAAI7C,aAAe,CACjBmE,eAGFtB,EAAIzC,YAAc,MAElByC,EAAIuB,OAASmB,sBAAW,SAACxF,EAAOyF,GAAR,OAAgB,kBAAC3C,EAAD,eAAKoB,GAAG,OAAOuB,IAAKA,EAAK5B,QAAQ,eAAe6B,cAAc,UAAa1F,OAEpG8C,O,+WC3Df,IAAM6C,EAAS,SAACC,GAAD,gBAAgB,GAALA,EAAX,OAEF9E,EAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAKC,IAAI4E,GAC5CE,EAAiB,CAAC,GAAI,GAAI,GAAI,IAAI9E,IAAI4E,GACtCG,EAAkB,SAACC,EAAQC,GAAT,MAAqB,CAACD,EAAQ,KAAM,KAAMC,IAEnEC,EAAe,SAACC,EAAGC,EAAGC,GAAP,OAAa3B,IAAM,GAAI,IAAK,IAC9C4B,QAAO,SAACC,EAAMlB,GAAP,OAAmBmB,IAAMD,EAAD,eAAUlB,EAAV,eAA4B,CAACc,EAAGC,EAAGC,EAAGhB,EAAU,KAAKoB,OAArD,SAAmE,KAK/FC,EAAW,CACf,UACA,UACA,UACA,UACA,UACA,WAeIC,EAASD,EAAS,GAClBE,EAAaF,EAAS,GACtBG,EAAcH,EAAS,GACvBI,EAAUJ,EAAS,GACnBK,EAAUL,EAASJ,QAAO,SAACU,EAAGC,EAAGC,GAErC,OADAF,EAAE,SAAD,OAAUE,EAAI,IAAOD,EACfD,IACN,IACGG,EAAUP,EAED,KACbQ,O,yWAAO,CAAD,CACJC,MAlBU,OAmBVC,MAlBU,OAmBVC,KAjBS,UAkBTC,WAvBe,UAwBfC,WAzBe,UA0BfC,UAnBc,UAoBdC,SAnBa,UAoBbC,SA7Ba,UA8BbC,SAhCa,UAiCbC,WAhCe,UAiCfnB,SACAC,aACAC,cACAC,UACAiB,KA9BS,UA+BTZ,UACAa,aAAcpB,EACdF,YACGK,EAnBC,CAoBJR,KAAM,CACJc,MAAOnB,EAAa,IAAK,IAAK,KAC9BoB,MAAOpB,EAAa,EAAG,EAAG,MAG9BnF,cACA+E,iBACAmC,KA7DW,gFA8DXC,aAAc,MACdnC,kBACAoC,OAAQzD,IAAM,GAAG1D,KAAI,SAACkG,GAAD,gBAAO,GAAMA,MAClCkB,UAAW,CACTC,KAAM,GACNR,SAAU,CACRvG,gBAAgB,6BAAD,OAzDJ,UAyDI,aAxDF,UAwDE,KACf0C,MApDQ,W,gCC6DA,cA3FG,CACf,SACA,IACA,YACA,KACA,eACA,KACA,aACA,KACA,cACA,KACA,KACA,KACA,UACA,IACA,aACA,KACA,gBACA,KACA,cACA,KACA,eACA,KACA,KACA,KACA,QACA,WACA,aACA,aACA,aACA,YACA,YACA,gBACA,UACA,WACA,WACA,SACA,YACA,YACA,QACA,kBACA,KACA,gBACA,aACA,eACA,eACA,iBACA,WACA,YACA,gBACA,OACA,cACA,YACA,QACA,UACA,gBACA,aACA,aACA,UACA,eACA,kBACA,eACA,sBACA,mBACA,oBACA,WACA,SACA,cACA,cACA,cACA,YACA,cACA,eACA,aACA,eACA,YACA,UACA,WACA,aACA,kBACA,iBACA,qBACA,mBACA,WACA,SACA,MACA,QACA,SACA,QAGF,CAEE,YACA,aACA,WACA,UACA,QACA,aACA,UACA,cACA,aACA,SACA,gBACA,aACA,WACA,WACA,UACA,c,wxBCrFF,IAAMsE,EAASC,YAAH,IACR5I,YAAY,cACZA,YAAY,UAAW,mBACvBA,YAAY,aAAc,mBAC1BA,YAAY,cAAe,gBAGlB6I,EAAcD,YAAH,IAMpB1E,IACAmB,IACAf,IACA3C,IACAgE,YAAQ,CAAEC,MAAO,YAAa3F,KAAM,aACpCmE,IACAC,IACAkB,IACAuD,IACArD,IAEgBnD,YAAS,WAAY,MAGnC,SAAAhC,GAAK,OAAKA,EAAMyC,UAAY4F,KAG9B,SAAArI,GAAK,OAAIA,EAAMqI,SAAWrI,EAAMyC,UAAY4F,KAC5C,SAAArI,GAAK,OACLA,EAAMyC,UAAN,uDAOEgG,EAAa3G,YAAO6B,IAAP7B,CAAH,IACZyG,GAGEG,EAAe,SAAA1I,GAAK,OAAI,kBAAC8C,EAAA,EAAD,eAAKoB,GAAG,QAAWlE,KAE3C2I,EAAS,SAAC,GAAD,IACbC,EADa,EACbA,SACAC,EAFa,EAEbA,UACAC,EAHa,EAGbA,YACA1H,EAJa,EAIbA,SACAsE,EALa,EAKbA,cACG1F,EANU,wFAQb,kBAACyI,EAAezI,EACb4I,EACC,kBAAC9F,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","file":"static/js/main.dc71ace6.chunk.js","sourcesContent":["import { style } from 'styled-system';\r\n\r\nexport const customColor = (prop, cssProperty = 'color') => style ({\r\n  prop,\r\n  cssProperty,\r\n  key: 'colors',\r\n});\r\n","import React from 'react';\r\n\r\nimport Box from './Box';\r\n\r\nconst Container = (props) => <Box {...props} />;\r\n\r\nContainer.defaultProps = {\r\n  mx: 'auto',\r\n  px: ['1em', null, '2em'],\r\n  width: 1,\r\n};\r\n\r\nContainer.displayName = 'Container';\r\n\r\nexport default Container;\r\n","/**\r\n * Combine all reducers in this file and export the combined reducers.\r\n */\r\n\r\nimport { combineReducers } from 'redux-immutable';\r\nimport fromPairs from 'lodash/fromPairs';\r\nimport zip from 'lodash/zip';\r\nimport { createResponsiveStateReducer } from 'redux-responsive';\r\n\r\nimport { breakpoints } from '../components/ThemeProvider/theme';\r\nimport api from '../services/api/reducer'\r\n\r\nconst names = [\r\n  'xxs',\r\n  'xs',\r\n  'sm',\r\n  'md',\r\n  'lg',\r\n  'xl',\r\n];\r\n\r\n/**\r\n * Creates the main reducer with the dynamically injected ones\r\n */\r\nexport default function createReducer(injectedReducers) {\r\n  return combineReducers({\r\n    browser: createResponsiveStateReducer(fromPairs(zip(names, breakpoints.map((bp) => parseInt(bp, 10) - 1)))),\r\n    api,\r\n    ...injectedReducers,\r\n  });\r\n}\r\n","import React from 'react';\r\n\r\nimport Box from '../Box'\r\nimport dot from './dot.svg'\r\n\r\nconst PatternBg = ({ children, ...props }) => (\r\n  <Box\r\n    {...props}\r\n    backgroundImage={`url('${dot}')`}\r\n  >\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nPatternBg.defaultProps = {\r\n  backgroundSize: '10px',\r\n  backgroundRepeat: 'repeat repeat',\r\n  backgroundPosition: 'center',\r\n}\r\n\r\nexport default PatternBg;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Box from '../../components/Box';\r\n\r\nconst Layout = ({ children }) => (\r\n  <Box height=\"100vh\" minWidth=\"800px\">\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport styled from 'styled-components';\r\n\r\nimport themeGet from '@styled-system/theme-get';\r\nimport Box from './Box'\r\n\r\nimport withResponsive from '../hoc/withResponsive'\r\n\r\nconst StyledDropdown = styled(Dropdown)`\r\n  .Dropdown-control {\r\n    border: 1px solid;\r\n    border-radius: 0.5em;\r\n    text-align: center;\r\n    background-color: white;\r\n    color: black;\r\n    font-family: inherit;\r\n    padding: 0.25em;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    transition: none;\r\n  }\r\n  &.is-open {\r\n    .Dropdown-control {\r\n      border-radius: 0.5em 0.5em 0em 0em;\r\n    }\r\n  }\r\n  .Dropdown-menu {\r\n    border: 1px solid;\r\n    transform: translateY(1px);\r\n    border-radius: 0 0 0.5em 0.5em;\r\n  }\r\n  .Dropdown-option {\r\n    color: inherit;\r\n    text-align: center;\r\n    padding: 0.5em 1em;\r\n    border-bottom: 1px solid gray;\r\n    &.is-selected {\r\n      background-color: ${themeGet('colors.dropdownBg')};\r\n    }\r\n    &:hover {\r\n      background-color: ${themeGet('colors.dropdownBg')};\r\n    }\r\n  }\r\n  .Dropdown-arrow {\r\n    border-color: black transparent transparent;\r\n    top: 0.8em;\r\n    right: 0.5em;\r\n  }\r\n`\r\n\r\nconst CustomDropdown = ({\r\n  isMobile,\r\n  options,\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  placeholder,\r\n  disabled,\r\n  defaultValue,\r\n  ...props\r\n}) => {\r\n  const activeTypeOption = options.find((opt) => opt.value === value)\r\n  return (\r\n    <Box {...props}>\r\n      <StyledDropdown\r\n        onChange={onChange}\r\n        options={[defaultValue].concat(options)}\r\n        value={activeTypeOption || defaultValue}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nCustomDropdown.defaultProps = {\r\n  placeholder: '請選擇',\r\n  defaultValue: { label: '全部', value: '' },\r\n  onChange: () => {}\r\n}\r\n\r\nexport default withResponsive(CustomDropdown);\r\n","import { connect } from 'react-redux';\r\n\r\nexport default (WrappedComp) => connect((state) => {\r\n  const browser = state.get('browser');\r\n  return {\r\n    browser,\r\n    isMobile: browser.lessThan.md,\r\n  };\r\n})(WrappedComp);\r\n","module.exports = __webpack_public_path__ + \"static/media/dot.0ece5a3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/line.280d3107.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport range from 'lodash/range';\r\nimport {\r\n  typography,\r\n  space,\r\n  color,\r\n  display,\r\n  position,\r\n} from 'styled-system';\r\nimport tag from 'clean-tag';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport injectProps from './utils/injectProps';\r\n\r\nconst Text = styled(tag)`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  ${typography}\r\n  ${display}\r\n  ${space}\r\n  ${color}\r\n  ${position}\r\n  ${injectProps('textTransform')}\r\n  ${injectProps('whiteSpace')}\r\n`;\r\n\r\nText.defaultProps = {\r\n  is: 'p',\r\n  fontSize: '1em',\r\n  // lineHeight: 1.5,\r\n  blacklist,\r\n};\r\n\r\nText.inline = (props) => <Text is=\"span\" {...props} />;\r\nText.bold = (props) => <Text fontWeight=\"bold\" {...props} />;\r\nText.thin = (props) => <Text fontWeight=\"200\" {...props} />;\r\n\r\nrange(1, 7).forEach((key) => {\r\n  const h = `h${key}`;\r\n  Text[h] = (props) => (\r\n    <Text\r\n      is={h}\r\n      fontSize={`${1 + ((6 - key) * 0.125)}em`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nText.displayName = 'Text';\r\n\r\nexport default Text;\r\n","import { createContext } from 'react'\r\n\r\nexport default createContext({})\r\n","import { flexbox } from 'styled-system';\r\nimport styled from 'styled-components';\r\n\r\nimport Box from './Box';\r\nimport blacklist from './utils/blacklist'\r\n\r\nconst Flex = styled(Box)`\r\n  ${flexbox}\r\n`;\r\n\r\nFlex.defaultProps = {\r\n  display: 'flex',\r\n  blacklist,\r\n};\r\n\r\nFlex.displayName = 'Flex';\r\n\r\nexport default Flex;\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport tag from 'clean-tag';\r\nimport {\r\n  space,\r\n  layout,\r\n  typography,\r\n  position,\r\n  color,\r\n  borderRadius,\r\n  zIndex,\r\n  border,\r\n  flex,\r\n  opacity,\r\n  style,\r\n  backgroundImage,\r\n  backgroundSize,\r\n  backgroundPosition,\r\n  backgroundRepeat,\r\n  variant,\r\n} from 'styled-system';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport injectProps from './utils/injectProps';\r\n\r\nconst Box = styled(tag)`\r\n  ${space}\r\n  ${layout}\r\n  ${position}\r\n  ${typography}\r\n  ${color}\r\n  ${position}\r\n  ${zIndex}\r\n  ${border}\r\n  ${flex}\r\n  ${borderRadius}\r\n  ${opacity}\r\n  ${backgroundImage}\r\n  ${backgroundSize}\r\n  ${backgroundRepeat}\r\n  ${backgroundPosition}\r\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\r\n  ${injectProps('whiteSpace')}\r\n  ${injectProps('overflow')}\r\n  ${injectProps('transform')}\r\n  ${injectProps('transition')}\r\n  ${style({\r\n    prop: 'zOrder',\r\n    cssProperty: 'zIndex',\r\n    key: 'zOrder',\r\n  })}\r\n  ${({ onClick }) => onClick && 'cursor: pointer;'}\r\n`;\r\n\r\nBox.defaultProps = {\r\n  blacklist,\r\n};\r\n\r\nBox.displayName = 'Box';\r\n\r\nBox.inline = forwardRef((props, ref) => <Box is=\"span\" ref={ref} display=\"inline-block\" verticalAlign=\"middle\" {...props} />);\r\n\r\nexport default Box;\r\n","import merge from 'lodash/merge';\r\nimport range from 'lodash/range';\r\n\r\nconst emToPx = (em) => `${em * 16}px`;\r\n\r\nexport const breakpoints = [22, 36, 48, 62, 90, 120].map(emToPx);\r\nexport const containerWidth = [22, 36, 46, 58].map(emToPx);\r\nexport const mobileOrDesktop = (mobile, desktop) => [mobile, null, null, desktop];\r\n\r\nconst generateFade = (r, g, b) => range(10, 100, 10)\r\n  .reduce((fade, opacity) => merge(fade, { [opacity]: `rgba(${[r, g, b, opacity / 100].join()})` }), {});\r\n\r\n\r\nconst font = 'Comfortaa, Arial, \"PingFang TC\", \"HeiTi TC\", \"Microsoft JhengHei\", sans-serif';\r\n\r\nconst spectrum = [\r\n  '#d3b998',\r\n  '#a57c56',\r\n  '#e8c52e',\r\n  '#ffa329',\r\n  '#f2690c',\r\n  '#d32e02',\r\n]\r\n\r\nconst darkBlue = '#2d3555'\r\nconst darkerBlue = '#171835'\r\nconst textBlue = '#1E213E'\r\nconst textYellow = '#F2B817'\r\nconst dropdownBg = '#E7EAF6'\r\n\r\nconst white = '#fff';\r\nconst black = '#000';\r\nconst text = '#040000';\r\nconst gray = '#7d7e80'\r\nconst lightGray = '#c9caca'\r\nconst darkGray = '#4c4948'\r\nconst orange = spectrum[3]\r\nconst darkOrange = spectrum[4]\r\nconst lightOrange = spectrum[2]\r\nconst darkRed = spectrum[5]\r\nconst oranges = spectrum.reduce((o, c, i) => {\r\n  o[`orange${i + 1}`] = c;\r\n  return o\r\n}, {});\r\nconst primary = darkOrange;\r\n\r\nexport default {\r\n  colors: {\r\n    white,\r\n    black,\r\n    gray,\r\n    dropdownBg,\r\n    textYellow,\r\n    lightGray,\r\n    darkGray,\r\n    textBlue,\r\n    darkBlue,\r\n    darkerBlue,\r\n    orange,\r\n    darkOrange,\r\n    lightOrange,\r\n    darkRed,\r\n    text,\r\n    primary,\r\n    primaryHover: darkOrange,\r\n    spectrum,\r\n    ...oranges,\r\n    fade: {\r\n      white: generateFade(255, 255, 255),\r\n      black: generateFade(0, 0, 0),\r\n    },\r\n  },\r\n  breakpoints,\r\n  containerWidth,\r\n  font,\r\n  headerHeight: '5em',\r\n  mobileOrDesktop,\r\n  zOrder: range(4).map((i) => 10 ** i),\r\n  gradients: {\r\n    none: {},\r\n    darkBlue: {\r\n      backgroundImage: `linear-gradient(to right, ${darkBlue}, ${darkerBlue})`,\r\n      color: white,\r\n    },\r\n  }\r\n};\r\n","const allProps = [\r\n  'margin',\r\n  'm',\r\n  'marginTop',\r\n  'mt',\r\n  'marginBottom',\r\n  'mb',\r\n  'marginLeft',\r\n  'ml',\r\n  'marginRight',\r\n  'mr',\r\n  'mx',\r\n  'my',\r\n  'padding',\r\n  'p',\r\n  'paddingTop',\r\n  'pt',\r\n  'paddingBottom',\r\n  'pb',\r\n  'paddingLeft',\r\n  'pl',\r\n  'paddingRight',\r\n  'pr',\r\n  'px',\r\n  'py',\r\n  'width',\r\n  'fontSize',\r\n  'fontFamily',\r\n  'fontWeight',\r\n  'lineHeight',\r\n  'textAlign',\r\n  'fontStyle',\r\n  'letterSpacing',\r\n  'display',\r\n  'maxWidth',\r\n  'minWidth',\r\n  'height',\r\n  'maxHeight',\r\n  'minHeight',\r\n  'color',\r\n  'backgroundColor',\r\n  'bg',\r\n  'verticalAlign',\r\n  'alignItems',\r\n  'alignContent',\r\n  'justifyItems',\r\n  'justifyContent',\r\n  'flexWrap',\r\n  'flexBasis',\r\n  'flexDirection',\r\n  'flex',\r\n  'justifySelf',\r\n  'alignSelf',\r\n  'order',\r\n  'gridGap',\r\n  'gridColumnGap',\r\n  'gridRowGap',\r\n  'gridColumn',\r\n  'gridRow',\r\n  'gridAutoFlow',\r\n  'gridAutoColumns',\r\n  'gridAutoRows',\r\n  'gridTemplateColumns',\r\n  'gridTemplateRows',\r\n  'gridTemplateAreas',\r\n  'gridArea',\r\n  'border',\r\n  'borderWidth',\r\n  'borderStyle',\r\n  'borderColor',\r\n  'borderTop',\r\n  'borderRight',\r\n  'borderBottom',\r\n  'borderLeft',\r\n  'borderRadius',\r\n  'boxShadow',\r\n  'opacity',\r\n  'overflow',\r\n  'background',\r\n  'backgroundImage',\r\n  'backgroundSize',\r\n  'backgroundPosition',\r\n  'backgroundRepeat',\r\n  'position',\r\n  'zIndex',\r\n  'top',\r\n  'right',\r\n  'bottom',\r\n  'left',\r\n];\r\n\r\nexport default [\r\n  ...allProps,\r\n  'transform',\r\n  'transition',\r\n  'overflow',\r\n  'opacity',\r\n  'alpha',\r\n  'hoverColor',\r\n  'hoverBg',\r\n  'hoverBorder',\r\n  'hoverBgImg',\r\n  'zOrder',\r\n  'verticalAlign',\r\n  'whiteSpace',\r\n  'dispatch',\r\n  'isMobile',\r\n  'browser',\r\n  'gradient',\r\n];\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport {\r\n  typography,\r\n  space,\r\n  color,\r\n  layout,\r\n  border,\r\n  borderRadius,\r\n  backgroundImage,\r\n  position,\r\n  borderColor,\r\n  variant,\r\n} from 'styled-system';\r\nimport themeGet from '@styled-system/theme-get';\r\nimport tag from 'clean-tag';\r\n\r\nimport Box from './Box';\r\nimport theme from './ThemeProvider/theme';\r\n\r\nimport { customColor } from './utils/getColor';\r\nimport blacklist from './utils/blacklist';\r\n\r\nconst active = css`\r\n  ${customColor('hoverColor')};\r\n  ${customColor('hoverBg', 'backgroundColor')};\r\n  ${customColor('hoverBgImg', 'backgroundImage')};\r\n  ${customColor('hoverBorder', 'borderColor')};\r\n`;\r\n\r\nexport const buttonStyle = css`\r\n  padding: 0;\r\n  border: none;\r\n  font-family: inherit;\r\n  line-height: 1;\r\n  text-decoration: none;\r\n  ${typography}\r\n  ${layout}\r\n  ${position}\r\n  ${backgroundImage}\r\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\r\n  ${space}\r\n  ${color}\r\n  ${border}\r\n  ${borderColor}\r\n  ${borderRadius}\r\n  appearance: none;\r\n  transition: all ${themeGet('duration', 250)}ms;\r\n  cursor: pointer;\r\n  &:hover {\r\n    ${props => !props.disabled && active}\r\n    outline: none;\r\n  }\r\n  ${props => props.active && !props.disabled && active}\r\n  ${props =>\r\n    props.disabled &&\r\n    `\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  `}\r\n`;\r\n\r\nconst ButtonBase = styled(tag)`\r\n  ${buttonStyle};\r\n`;\r\n\r\nconst InButtonSpan = props => <Box is=\"span\" {...props} />;\r\n\r\nconst Button = ({\r\n  leftIcon,\r\n  rightIcon,\r\n  iconSpacing,\r\n  children,\r\n  verticalAlign,\r\n  ...props\r\n}) => (\r\n  <ButtonBase {...props}>\r\n    {leftIcon ? (\r\n      <Box is={leftIcon} mr={iconSpacing} verticalAlign={verticalAlign} />\r\n    ) : null}\r\n    <InButtonSpan verticalAlign={verticalAlign}>{children}</InButtonSpan>\r\n    {rightIcon ? (\r\n      <Box is={rightIcon} ml={iconSpacing} verticalAlign={verticalAlign} />\r\n    ) : null}\r\n  </ButtonBase>\r\n);\r\n\r\nButton.defaultProps = {\r\n  blacklist,\r\n  is: 'button',\r\n  border: '1px solid',\r\n  borderColor: 'darkBlue',\r\n  bg: 'darkBlue',\r\n  gradient: 'darkBlue',\r\n  color: 'white',\r\n  hoverColor: 'darkBlue',\r\n  hoverBg: 'white',\r\n  hoverBgImg: 'none',\r\n  hoverBorder: 'darkBlue',\r\n  px: '1.25em',\r\n  py: '0.5em',\r\n  fontWeight: 'bold',\r\n  iconSpacing: '0.25em',\r\n  borderRadius: '1.25em',\r\n  display: 'inline-block',\r\n  verticalAlign: 'middle',\r\n};\r\n\r\nButton.displayName = 'Button';\r\n\r\nButton.lightBg = props => (\r\n  <Button\r\n    bg=\"white\"\r\n    color=\"darkBlue\"\r\n    gradient=\"none\"\r\n    border=\"1px solid\"\r\n    borderColor=\"white\"\r\n    hoverColor=\"white\"\r\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\r\n    hoverBorder=\"white\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nButton.border = props => (\r\n  <Button\r\n    bg=\"white\"\r\n    color=\"darkBlue\"\r\n    gradient=\"none\"\r\n    borderColor=\"darkBlue\"\r\n    hoverColor=\"white\"\r\n    hoverBg=\"none\"\r\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\r\n    {...props}\r\n  />\r\n);\r\n\r\nButton.outline = props => (\r\n  <Button\r\n    gradient=\"none\"\r\n    border=\"1px solid\"\r\n    borderColor=\"primary\"\r\n    bg=\"transparent\"\r\n    color=\"primary\"\r\n    hoverColor=\"white\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nButton.transparent = props => (\r\n  <Button\r\n    gradient=\"none\"\r\n    border=\"1px solid transparent\"\r\n    bg=\"transparent\"\r\n    color=\"text\"\r\n    hoverBorder=\"primary\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Button;\r\n","import React, { createElement, PureComponent } from 'react';\r\nimport { IoMdArrowDropleft,  IoMdArrowDropright} from 'react-icons/io';\r\n\r\nimport Box from './Box'\r\nimport Flex from './Flex'\r\nimport Button from './Button'\r\n\r\nclass YearButton extends PureComponent {\r\n  static defaultProps = {\r\n    onChange: () => {},\r\n  }\r\n\r\n  static getDerivedStateFromProps({ currentYear, years }, prevState) {\r\n    return {\r\n      activeYear: typeof currentYear === 'undefined' ? years.length - 1 : years.findIndex(y => y === currentYear),\r\n    }\r\n  }\r\n\r\n  state = {}\r\n\r\n  handleNextYear = () => {\r\n    const { activeYear } = this.state\r\n    const newYear = activeYear + 1\r\n    this.setState({ activeYear: newYear }, () => {\r\n      this.props.onChange(this.props.years[newYear])\r\n    })\r\n  }\r\n\r\n  handleLastYear = () => {\r\n    const { activeYear } = this.state\r\n    const newYear = activeYear - 1\r\n    this.setState({ activeYear: newYear }, () => {\r\n      this.props.onChange(this.props.years[newYear])\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { currentYear, years, darkBg, onChange, ...props} = this.props\r\n    const { activeYear } = this.state\r\n    return (\r\n      <Flex alignItems=\"center\" {...props}>\r\n        {createElement(darkBg ? Button.lightBg : Button, {\r\n          px: '0.125em',\r\n          py: '0.125em',\r\n          borderRadius: '0.25em',\r\n          disabled: !activeYear,\r\n          onClick: this.handleLastYear,\r\n        }, <IoMdArrowDropleft size=\"1.5em\" />)}\r\n        <Box px=\"1.5em\" py=\"0.375em\" border=\"1px solid\" mx=\"0.5em\" borderRadius=\"0.5em\">\r\n          {years[activeYear]}\r\n        </Box>\r\n        {createElement(darkBg ? Button.lightBg : Button, {\r\n          px: '0.125em',\r\n          py: '0.125em',\r\n          borderRadius: '0.25em',\r\n          disabled: activeYear === years.length - 1,\r\n          onClick: this.handleNextYear,\r\n        }, <IoMdArrowDropright size=\"1.5em\" />)}\r\n      </Flex>\r\n    );\r\n  }\r\n}\r\n\r\nexport default YearButton;\r\n","import React, { PureComponent } from 'react';\r\nimport Measure from 'react-measure'\r\n\r\nimport FontSizeContext from './ThemeProvider/FontSizeContext'\r\nimport Box from './Box'\r\n\r\nclass Toggler extends PureComponent {\r\n  state = {\r\n    poses: this.props.options.map(() => ({}))\r\n  }\r\n\r\n  poses = []\r\n\r\n  handleBound = (i, bounds) => {\r\n    this.poses[i] = bounds\r\n    if (this.poses.every(Boolean) && this.poses.length === this.props.options.length) {\r\n      this.setState({ poses: this.poses })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { options, activeIndex, onToggle, color, bg } = this.props\r\n    const { poses } = this.state;\r\n    return (\r\n      <FontSizeContext.Consumer>\r\n      {({ em }) => (\r\n        <Box borderRadius=\"1.5em\" bg={bg} px=\"0.5em\">\r\n          <Box position=\"relative\">\r\n            <Box\r\n              position=\"absolute\"\r\n              left={poses[activeIndex].left - poses[0].left - em * 0.65}\r\n              top=\"50%\"\r\n              bottom=\"0\"\r\n              width={poses[activeIndex].width + 1.3 * em}\r\n              transition=\"all 0.25s\"\r\n            >\r\n              <Box py=\"1.25em\" bg={color} transform=\"translateY(-50%)\" borderRadius=\"1.25em\" />\r\n            </Box>\r\n            <Box position=\"relative\">\r\n              {options.map((label, i) => (\r\n                <Measure bounds onResize={({ bounds }) => this.handleBound(i, bounds)} key={i}>\r\n                  {({ measureRef }) => (\r\n                    <Box.inline ref={measureRef} px=\"1.25em\" py=\"0.5em\" color=\"white\" onClick={() => onToggle(i)}>\r\n                      {label}\r\n                    </Box.inline>\r\n                  )}\r\n                </Measure>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </FontSizeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nToggler.defaultProps = {\r\n  color: 'primary',\r\n  bg: 'rgba(255,255,255,0.2)',\r\n  onToggle: () => {},\r\n}\r\n\r\nexport default Toggler;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from './Box';\r\n\r\nconst Circle = ({ children, border, borderColor, bg, is, ...props }) => (\r\n  <Box {...props}>\r\n    <Box position=\"relative\" pt=\"100%\">\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"0\"\r\n        left=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        width={1}\r\n        borderRadius=\"50%\"\r\n        border={border}\r\n        borderColor={borderColor}\r\n        bg={bg}\r\n        is={is}\r\n      >\r\n        <Box\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          transform=\"translate(-50%, -50%)\"\r\n          position=\"absolute\"\r\n          lineHeight=\"0\"\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCircle.propTypes = {\r\n  children: PropTypes.node,\r\n  border: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bg: PropTypes.string,\r\n  is: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n  ]),\r\n};\r\n\r\nCircle.displayName = 'Circle';\r\n\r\nexport default Circle;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport merge from 'lodash/merge'\r\nimport { IoIosClose } from \"react-icons/io\";\r\n\r\nimport Box from './Box'\r\nimport Flex from './Flex'\r\nimport Text from './Text'\r\nimport Button from './Button'\r\nimport Circle from './Circle'\r\nimport theme from './ThemeProvider/theme'\r\n\r\nconst defaultStyles = {\r\n  overlay: {\r\n    zIndex: theme.zOrder[3],\r\n    backgroundColor: 'rgba(0,0,0,0.7)'\r\n  },\r\n  content: {\r\n    width: '66%',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: '1em',\r\n    border: 'none',\r\n    padding: '0',\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    overflow: 'unset',\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default ({ children, border, borderRadius, customStyles, title, ...props }) => (\r\n  <Modal\r\n    style={merge({}, defaultStyles, { content: customStyles})}\r\n    {...props}\r\n  >\r\n    <Box py=\"1.5em\">\r\n      <Flex justifyContent=\"space-between\" mx=\"2em\" pb=\"1em\" borderBottom=\"1px solid\" borderColor=\"darkBlue\" alignItems=\"center\">\r\n        <Text fontWeight=\"bold\" letterSpacing=\"0.25em\" fontSize=\"1.25em\">{title}</Text>\r\n        <Circle width=\"2em\" is={(p) => <Button borderRadius=\"50%\" px=\"0\" py=\"0\" {...p} />} onClick={props.onRequestClose}>\r\n          <IoIosClose size=\"2em\" />\r\n        </Circle>\r\n      </Flex>\r\n      <Box m=\"1.5em\" position=\"relative\">\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </Modal>\r\n)\r\n","import React, { PureComponent, Fragment, createElement } from 'react';\r\n\r\nimport Button from './Button'\r\nimport Modal from './Modal'\r\n\r\nclass ModalButton extends PureComponent {\r\n  static defaultProps = {\r\n    is: Button,\r\n  }\r\n\r\n  state = {}\r\n\r\n  openModal = () => this.setState({ open: true })\r\n  closeModal = () => this.setState({ open: false })\r\n\r\n  render() {\r\n    const { is, label, title, children, ...props } = this.props\r\n    const { open } = this.state\r\n    return (\r\n      <Fragment>\r\n        {createElement(is, {\r\n          onClick: this.openModal,\r\n          ...props\r\n        }, label)}\r\n        <Modal isOpen={open} onRequestClose={this.closeModal} title={title}>\r\n          {children}\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalButton;\r\n","import conformsTo from 'lodash/conformsTo';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isObject from 'lodash/isObject';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    injectedReducers: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(src/utils...) injectors: Expected a valid redux store'\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../stores/reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function'\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => (WrappedComponent) => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n    static contextType = ReactReduxContext;\r\n    static displayName = `withReducer(${(WrappedComponent.displayName || WrappedComponent.name || 'Component')})`;\r\n\r\n    componentWillMount() {\r\n      const { injectReducer } = this.injectors;\r\n\r\n      injectReducer(key, reducer);\r\n    }\r\n\r\n    injectors = getInjectors(this.context.store)\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n","import React, { PureComponent, createElement } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { actionTypes, requestStatuses, resourceReducer } from 'redux-resource';\r\nimport get from 'lodash/get';\r\nimport isArray from 'lodash/isArray';\r\nimport isNumber from 'lodash/isNumber';\r\nimport size from 'lodash/size';\r\nimport md5 from 'blueimp-md5'\r\n\r\nimport Text from '../../components/Text';\r\nimport injectReducer from '../../utils/injectReducer';\r\n\r\nexport default (key, params, transformer) => {\r\n  const ids = (isArray(params) || isNumber(params)) ? params : '';\r\n  const listMode = !ids;\r\n  const resources = isArray(ids) ? ids : [ids];\r\n  const SIG = `_LAW.${md5(`${key}${ids}${params ? JSON.stringify(params) : ''}`)}`\r\n\r\n  return SubComp => {\r\n    if (!key) return () => null;\r\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\r\n\r\n    class WithData extends PureComponent {\r\n      componentDidMount() {\r\n        setTimeout(this.request);\r\n      }\r\n\r\n      // shouldComponentUpdate(nextProps) {\r\n      //   return get(this.props, [key, 'resources']) !== get(nextProps, [key, 'resources'])\r\n      // }\r\n\r\n      request = (skip, requestParams = params) => {\r\n        if (this.props[key]) {\r\n          if (!this.checkIsPending()) {\r\n            if (skip || !this.checkIsDone()) {\r\n              this.props.dispatch({\r\n                type: actionTypes.READ_RESOURCES_PENDING,\r\n                resourceType: key,\r\n                resources: listMode ? undefined : resources,\r\n                requestKey: listMode && `list${JSON.stringify(params)}`,\r\n                requestParams,\r\n                transformer,\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          setTimeout(this.request, 100)\r\n        }\r\n      };\r\n\r\n      resync = () => this.request(true);\r\n\r\n      updateParams = (params) => this.request(true, params);\r\n\r\n      checkStatus = status => {\r\n        if (listMode) {\r\n          return (\r\n            get(this.props, [\r\n              key,\r\n              'requests',\r\n              'list',\r\n              'status',\r\n            ]) === status\r\n          );\r\n        }\r\n        return (\r\n          get(this.props, [\r\n            key,\r\n            'meta',\r\n            resources,\r\n            'readStatus'\r\n          ]) === status\r\n        );\r\n      };\r\n\r\n      checkIsPending = () => this.checkStatus(requestStatuses.PENDING);\r\n\r\n      checkIsDone = () => this.checkStatus(requestStatuses.SUCCEEDED) || this.checkStatus(requestStatuses.FAILED);\r\n\r\n      render() {\r\n        const data = get(this.props, [key, 'resources']);\r\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\r\n        if (size(data)) {\r\n          content = createElement(SubComp, {\r\n            ...this.props,\r\n            [key]: data,\r\n            updateParams: this.updateParams,\r\n            // resync: this.resync,\r\n            // isLoading: this.checkIsPending(),\r\n          });\r\n        }\r\n        return content\r\n      }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n      [key]: state.get(key),\r\n    });\r\n\r\n    const withReducer = injectReducer({\r\n      key: key,\r\n      reducer: resourceReducer(key),\r\n    });\r\n\r\n    const comp = compose(\r\n      withReducer,\r\n      connect(mapStateToProps),\r\n    )(WithData)\r\n    if (typeof window !== 'undefined') window[SIG] = comp\r\n\r\n    return comp\r\n  };\r\n}\r\n","import { createElement } from 'react'\r\nimport mapValues from 'lodash/mapValues'\r\n\r\nimport withData from './withData';\r\n\r\nconst keys = [\r\n  'canceled',\r\n  'canceledDollar',\r\n  'issued',\r\n  'issuedDollar',\r\n  'received',\r\n  'receivedDollar',\r\n  'executed',\r\n]\r\n\r\nconst transformData = data => mapValues(data, d => ({\r\n  ...d,\r\n  monthData: d.monthData.map(m => ({\r\n    ...m,\r\n    data: m.types.reduce((sum, t) => {\r\n      keys.forEach((key) => {\r\n        sum[key] = sum[key] || 0\r\n        sum[key] += t.data[key]\r\n      }, {})\r\n      return sum\r\n    }, {})\r\n  })),\r\n}))\r\n\r\nexport default (SubComp) => {\r\n  let key = 'data/bureaus'\r\n\r\n  if (typeof window !== 'undefined' && window.__SHOW_BUREAU_ID !== '00000000') {\r\n    key = `${key}/${window.__SHOW_BUREAU_ID}`\r\n  }\r\n  return withData(key, { year: new Date().getFullYear() - 1911 })(props => createElement(SubComp, { ...props, data: transformData(props[key]) }))\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport Measure from 'react-measure'\r\nimport debounce from 'lodash/debounce'\r\n\r\nimport Box from '../Box'\r\n\r\nclass ChartBase extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleResize = debounce(this.handleResize, 200)\r\n  }\r\n\r\n  state = {\r\n    dimensions: {},\r\n  }\r\n\r\n  handleResize = ({ bounds }) => this.setState({ dimensions: bounds })\r\n\r\n  render() {\r\n    const { children, ratio, ...props } = this.props;\r\n    const { width, height } = this.state.dimensions;\r\n    return (\r\n      <Measure onResize={this.handleResize} bounds>\r\n        {({ measureRef }) => (\r\n          <Box position=\"relative\" pt={`${ratio * 100}%`} {...props} ref={measureRef}>\r\n            {width && height && (\r\n              <Box\r\n                is=\"svg\"\r\n                position=\"absolute\"\r\n                top=\"0\"\r\n                left=\"0\"\r\n                width={width}\r\n                height={height}\r\n              >\r\n                {children({ width, height })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </Measure>\r\n    );\r\n  }\r\n}\r\n\r\nChartBase.defaultProps = {\r\n  ratio: 1 / 3,\r\n}\r\n\r\nexport default ChartBase;\r\n","import React from 'react';\r\n\r\nfunction backwardAutoLineBreak(str, maxLength, fillFront) {\r\n  if (!maxLength) return [str]\r\n  const strArr = Array.from(str)\r\n  if (!fillFront) strArr.reverse()\r\n  let i = 0\r\n  const lines = strArr.reduce((lines, st) => {\r\n    lines[i] = lines[i] || ''\r\n    if (lines[i].length == maxLength) {\r\n      i += 1\r\n      lines[i] = ''\r\n    }\r\n    if (fillFront) {\r\n      lines[i] += st\r\n    } else {\r\n      lines[i] = st + lines[i]\r\n    }\r\n    return lines\r\n  }, [])\r\n  if (!fillFront) {\r\n    lines.reverse()\r\n  }\r\n  if (fillFront) {\r\n    const { length } = lines\r\n    if (lines[length - 1].length === 1) {\r\n      lines[length - 1] = lines[length - 2].substr(lines[length - 2].length - 1) + lines[length - 1]\r\n      lines[length - 2] = lines[length - 2].substr(0, lines[length - 2].length - 1)\r\n    }\r\n  } else {\r\n    if (lines[0].length === 1) {\r\n      lines[0] += lines[1][0]\r\n      lines[1] = lines[1].substr(1)\r\n    }\r\n  }\r\n  return lines\r\n}\r\n\r\nconst LineBreakText = ({\r\n  x,\r\n  y,\r\n  children,\r\n  fontSize,\r\n  maxLength,\r\n  lineHeight,\r\n  lineBefore,\r\n  fillFront,\r\n  bg,\r\n  style,\r\n  verticalCenter,\r\n  title,\r\n  maxLines,\r\n  ...props\r\n}) => {\r\n  if (typeof children !== 'string') {\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        fontSize={fontSize}\r\n        style={style}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </text>\r\n    );\r\n  }\r\n  let perLine = maxLength\r\n  let lines = backwardAutoLineBreak(children, perLine, fillFront)\r\n  let lineCount = lines.length\r\n  while (lineCount > maxLines) {\r\n    perLine += 1\r\n    lines = backwardAutoLineBreak(children, perLine, fillFront)\r\n    lineCount = lines.length\r\n  }\r\n  const yPos = lines.map((c, i) => y + (verticalCenter && lineCount > 1 ? (0.5 * fontSize * (lineBefore ? 1 : -1)) : 0) + lineHeight * fontSize * (lineBefore ? i - lineCount + 1 : i));\r\n  const texts = lines.map((c, i) => (\r\n    <text\r\n      key={i}\r\n      x={x}\r\n      y={yPos[i]}\r\n      fontSize={fontSize}\r\n      style={style}\r\n      {...props}\r\n    >\r\n      {c}\r\n    </text>\r\n  )).concat(title && <title key=\"title\">{title}</title>)\r\n  return bg ? (() => {\r\n    const w = maxLength * fontSize\r\n    const yStart = Math.min(...yPos)\r\n    const yEnd = Math.max(...yPos)\r\n    return (\r\n      <g>\r\n        <rect\r\n          width={w}\r\n          height={yEnd - yStart + 1.75 * fontSize}\r\n          x={x - w / 2}\r\n          y={yStart - 1.25 * fontSize}\r\n          fill={bg}\r\n          style={style}\r\n        />\r\n        {texts}\r\n      </g>\r\n    )\r\n  })() : <g>{texts}</g>;\r\n};\r\n\r\nLineBreakText.defaultProps = {\r\n  lineHeight: 1.3,\r\n  y: 0,\r\n  verticalCenter: true,\r\n  maxLines: 3,\r\n}\r\n\r\nexport default LineBreakText;\r\n","import React, { Component } from 'react';\r\nimport { format } from 'd3-format'\r\nimport get from 'lodash/get'\r\n\r\nimport theme from '../../components/ThemeProvider/theme'\r\n\r\nconst num = format(',')\r\n\r\nclass InfoSection extends Component {\r\n  static getDerivedStateFromProps({\r\n    sub,\r\n    main,\r\n    em,\r\n    xEnd,\r\n    labelStart,\r\n  }) {\r\n    const mainValueStart = xEnd - (get(main.unit, 'length', -0.25) + 0.25) * em\r\n    const mainValueWidth = main.value.toString().length * 1.5 * em\r\n    const mainLabelStart = mainValueStart - mainValueWidth\r\n    const subValueStart = xEnd - (get(sub, ['unit', 'length'], -0.25) + 0.25) * em\r\n    const subValueWidth = get(sub, 'value', '').toString().length * 0.75 * em\r\n    const subLabelStart = subValueStart - subValueWidth\r\n    const newLabelStart = Math.min(mainLabelStart, subLabelStart)\r\n    return {\r\n      mainValueStart,\r\n      mainLabelStart,\r\n      subValueStart,\r\n      labelStart: newLabelStart !== labelStart ? newLabelStart : labelStart,\r\n    }\r\n  }\r\n\r\n  state = {}\r\n\r\n  componentDidMount() {\r\n    const { labelStart } = this.state\r\n    const { onWidthChange } = this.props\r\n    if (onWidthChange) {\r\n      onWidthChange(labelStart)\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { labelStart } = this.state\r\n    const { onWidthChange } = this.props\r\n    if (labelStart !== prevState.labelStart && onWidthChange) {\r\n      onWidthChange(labelStart)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      y,\r\n      em,\r\n      main,\r\n      sub,\r\n      xEnd,\r\n    } = this.props\r\n    const {\r\n      mainValueStart,\r\n      subValueStart,\r\n      labelStart,\r\n    } = this.state;\r\n    const mainYStart = y - 0.8 * em\r\n    const subYStart = y + 1.5 * em\r\n    return (\r\n      <g>\r\n        <line\r\n          x1={labelStart - get(main.label, 'length') * em}\r\n          x2={xEnd}\r\n          y1={y}\r\n          y2={y}\r\n          stroke=\"black\"\r\n          strokeWidth=\"2\"\r\n        />\r\n        <g>\r\n          {main.unit && (\r\n            <text\r\n              x={xEnd}\r\n              y={mainYStart}\r\n              textAnchor=\"end\"\r\n              fontSize={em}\r\n            >\r\n              {main.unit}\r\n            </text>\r\n          )}\r\n          <text\r\n            fill={theme.colors.primary}\r\n            x={mainValueStart}\r\n            y={mainYStart}\r\n            textAnchor=\"end\"\r\n            fontSize={2 * em}\r\n          >\r\n            {num(main.value)}\r\n          </text>\r\n          <text\r\n            x={labelStart}\r\n            y={mainYStart}\r\n            textAnchor=\"end\"\r\n            fontSize={em}\r\n          >\r\n            {main.label}\r\n          </text>\r\n        </g>\r\n        {sub && (\r\n          <g>\r\n            <text\r\n              x={xEnd}\r\n              y={subYStart}\r\n              textAnchor=\"end\"\r\n              fontSize={em}\r\n            >\r\n              {sub.unit}\r\n            </text>\r\n            <text\r\n              x={subValueStart - 0.25 * em}\r\n              y={subYStart}\r\n              textAnchor=\"end\"\r\n              fontSize={em}\r\n              color={theme.colors.gray}\r\n            >\r\n              {num(sub.value)}\r\n            </text>\r\n            <text\r\n              x={labelStart}\r\n              y={subYStart}\r\n              textAnchor=\"end\"\r\n              fontSize={em}\r\n            >\r\n              {sub.label}\r\n            </text>\r\n          </g>\r\n        )}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default InfoSection;\r\n","import React, { Fragment, PureComponent, createRef } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport { Animate, NodeGroup } from 'react-move'\r\nimport loSortBy from 'lodash/sortBy'\r\nimport { max } from 'd3-array'\r\nimport { format } from 'd3-format'\r\nimport { Bar, Circle } from '@vx/shape';\r\nimport { scaleLinear, scalePower } from '@vx/scale';\r\nimport { LinearGradient, RadialGradient } from '@vx/gradient';\r\nimport { localPoint } from '@vx/event';\r\nimport { Group } from '@vx/group';\r\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\nimport LineBreakText from '../../components/Charts/LineBreakText'\r\nimport theme from '../../components/ThemeProvider/theme'\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\n\r\nimport InfoSection from './InfoSection'\r\n\r\nconst f = format('.2f')\r\nconst fade = 0.15\r\n\r\nconst emPercent = n => (\r\n  <Fragment>\r\n    {isNaN(n) || n === Infinity ? '-' : f(n * 100)}\r\n    <tspan fontSize=\"0.6em\">%</tspan>\r\n  </Fragment>\r\n)\r\n\r\nconst isTopBureau = window.__SHOW_BUREAU_ID === '00000000'\r\nconst singleBureau = isTopBureau && window.__BUREAU_ID !== '00000000'\r\n\r\nclass BubbleLine extends PureComponent {\r\n  static getDerivedStateFromProps({ data }) {\r\n    return {\r\n      namedData: data.reduce((nd, d) => {\r\n        nd[d.id] = d\r\n        return nd\r\n      }, {})\r\n    }\r\n  }\r\n\r\n  state = {\r\n    labelStart: 0,\r\n    activeId: singleBureau ? window.__BUREAU_ID : null,\r\n  }\r\n\r\n  wrapper = createRef()\r\n\r\n  handleTooltip = ({ event, xScale, data }) => {\r\n    if (singleBureau) return\r\n    const { x } = localPoint(event);\r\n    const index = Math.round(xScale.invert(x))\r\n    const d = data[index]\r\n    if (d) {\r\n      this.setState({ activeId: d.id })\r\n    } else {\r\n      this.setState({ activeId: null })\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (singleBureau) return\r\n    const { activeId } = this.state\r\n    const { lockId, onLock } = this.props\r\n    if (lockId) {\r\n      onLock(null)\r\n      // this.setState({ activeId: null }, () => onLock(null))\r\n    } else {\r\n      onLock(activeId)\r\n    }\r\n  }\r\n\r\n  handleInfoWidthChange = (newStart) => {\r\n    this.setState(({ labelStart }) => ({ labelStart: labelStart > 0 ? Math.min(labelStart, newStart) : newStart }))\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      sortBy,\r\n      sortOrder,\r\n      onLock,\r\n      lockId,\r\n      ...props\r\n    } = this.props\r\n    const { activeId, namedData, labelStart } = this.state;\r\n    if (!data || !data.length) return null\r\n    const sortedData = loSortBy(data, sortBy)\r\n    return (\r\n      <FontSizeContext.Consumer>\r\n        {({ em }) => (\r\n          <ChartBase {...props}>\r\n            {({ width, height }) => {\r\n              const rLabelHeight = 2 * em\r\n              const rMax = height * 0.2\r\n              const leftLabelWidth = width * 0.075\r\n              const rightInfoWidth = width * 0.15\r\n              const xStart = leftLabelWidth + rMax\r\n              const xEnd = width - rMax - rightInfoWidth\r\n              const lableY = rLabelHeight + rMax * 2 + em * 3.5\r\n              const rateY = lableY + em * 3\r\n              const executedRateY = rateY + em * 2.5\r\n\r\n              const xScale = scaleLinear({\r\n                domain: [0, data.length - 1],\r\n                range: [xStart, xEnd]\r\n              })\r\n              const valueMax = max(data, d => d.issued)\r\n              const rScale = valueMax ? scalePower({\r\n                domain: [0, valueMax],\r\n                range: [0, rMax],\r\n                exponent: 0.5,\r\n              }) : () => 0;\r\n\r\n              return (\r\n                <Fragment>\r\n                  <LinearGradient from={theme.colors.darkBlue} to={theme.colors.darkerBlue} vertical={false} id=\"dark\" />\r\n                  <LinearGradient from={theme.colors.orange6} to={theme.colors.orange3} vertical={false} id=\"rate\" />\r\n                  <RadialGradient from={theme.colors.orange3} to={theme.colors.orange4} fromOffset=\"30%\" id=\"radial-fill\" />\r\n                  <RadialGradient from={theme.colors.orange5} to={theme.colors.orange5} toOpacity={0} id=\"radial-trans\" />\r\n                  <g>\r\n                    <rect\r\n                      width={leftLabelWidth}\r\n                      height={height - rLabelHeight / 2}\r\n                      x={0}\r\n                      y={rLabelHeight / 2}\r\n                      opacity={0.15}\r\n                      fill=\"url('#dark')\"\r\n                      rx={em}\r\n                    />\r\n                    {[lableY, rateY - 2 * em / 3, executedRateY - 2 * em / 3].map((y, i) => (\r\n                      <line\r\n                        key={i}\r\n                        x1={em}\r\n                        x2={leftLabelWidth - em}\r\n                        y1={y - em * 2 / 3}\r\n                        y2={y - em * 2 / 3}\r\n                        stroke={theme.colors.text}\r\n                        strokeWidth=\"1\"\r\n                        strokeLinecap=\"round\"\r\n                      />\r\n                    ))}\r\n                    {[\r\n                      { label: '已開案件量', y: rLabelHeight + rMax - em / 2 },\r\n                      { label: isTopBureau ? '局處' : '科室', y: lableY + em },\r\n                      { label: '收繳率', y: rateY + em / 3 },\r\n                      { label: '執行率', y: executedRateY + em / 3 },\r\n                    ].map(({ label, y }, i) => (\r\n                      <LineBreakText\r\n                        key={i}\r\n                        x={leftLabelWidth / 2}\r\n                        y={y}\r\n                        textAnchor=\"middle\"\r\n                        fontSize={1.25 * em}\r\n                        fontWeight=\"bold\"\r\n                        maxLength={3}\r\n                        letterSpacing=\"2\"\r\n                      >\r\n                        {label}\r\n                      </LineBreakText>\r\n                    ))}\r\n                  </g>\r\n                  <Animate\r\n                    start={{\r\n                      opacity: 1,\r\n                    }}\r\n                    update={{\r\n                      opacity: [(activeId || lockId) ? fade : 1],\r\n                      timing: { duration: 250 }\r\n                    }}\r\n                  >\r\n                    {state => (\r\n                      <line\r\n                        x1={xStart}\r\n                        y1={rLabelHeight + rMax}\r\n                        x2={width}\r\n                        y2={rLabelHeight + rMax}\r\n                        stroke={theme.colors.lightGray}\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        {...state}\r\n                      />\r\n                    )}\r\n                  </Animate>\r\n                  <rect\r\n                    width={xEnd - xStart + rMax + em / 2}\r\n                    height={2 * em}\r\n                    fill=\"url('#rate')\"\r\n                    x={xStart - rMax / 2 - em / 2}\r\n                    y={rateY - em}\r\n                    rx={em}\r\n                  />\r\n                  {/* <rect\r\n                  width={xEnd - xStart + rMax}\r\n                  height={2 * em}\r\n                  fill=\"url('#rate')\"\r\n                  x={xStart - rMax / 2}\r\n                  y={executedRateY - em}\r\n                  rx={em}\r\n                /> */}\r\n                  <Bar\r\n                    x={0}\r\n                    y={0}\r\n                    width={width}\r\n                    height={height}\r\n                    fill=\"transparent\"\r\n                    data={data}\r\n                    onTouchStart={event =>\r\n                      this.handleTooltip({\r\n                        event,\r\n                        xScale,\r\n                        data: sortedData,\r\n                      })\r\n                    }\r\n                    onTouchMove={event =>\r\n                      this.handleTooltip({\r\n                        event,\r\n                        xScale,\r\n                        data: sortedData,\r\n                      })\r\n                    }\r\n                    onMouseMove={event =>\r\n                      this.handleTooltip({\r\n                        event,\r\n                        xScale,\r\n                        data: sortedData,\r\n                      })\r\n                    }\r\n                    onMouseLeave={() => !singleBureau && this.setState({ activeId: null })}\r\n                    onClick={this.handleClick}\r\n                  />\r\n                  <g ref={this.wrapper}>\r\n                    <NodeGroup\r\n                      // must make react-move think data had been updated, so we inject width and height here\r\n                      data={sortedData.map(d => ({ ...d, width, height }))}\r\n                      keyAccessor={d => d.label}\r\n                      start={(d, i) => ({\r\n                        cx: xScale(i),\r\n                        r: 0,\r\n                        opacity: 0.5,\r\n                        otherOpacity: 1,\r\n                        centerR: 0,\r\n                      })}\r\n                      enter={d => ({\r\n                        r: [rScale(d.issued)],\r\n                        timing: { duration: 500 },\r\n                      })}\r\n                      update={(d, i) => {\r\n                        let active = true\r\n                        let centerActive\r\n                        if (lockId) {\r\n                          active = lockId === d.id\r\n                          centerActive = lockId === d.id\r\n                        } else if (activeId) {\r\n                          active = activeId === d.id\r\n                        }\r\n                        return [\r\n                          {\r\n                            cx: [xScale(i)],\r\n                            r: [rScale(d.issued)],\r\n                            timing: { duration: 500 },\r\n                          },\r\n                          {\r\n                            opacity: [active ? 0.5 : fade],\r\n                            otherOpacity: [active ? 1 : fade],\r\n                            centerR: [centerActive ? em : 0],\r\n                            timing: { duration: 250 },\r\n                          },\r\n                        ]\r\n                      }}\r\n                      leave={() => ({\r\n                        opacity: [0],\r\n                        timing: { duration: 500 },\r\n                      })}\r\n                    >\r\n                      {nodes => (\r\n                        <g>\r\n                          {nodes.map(({ key, data: d, state: { cx, r, opacity, otherOpacity } }) => {\r\n                            return (\r\n                              <g key={key}>\r\n                                <Circle\r\n                                  cx={cx}\r\n                                  cy={rLabelHeight + rMax}\r\n                                  r={r}\r\n                                  fill=\"url('#radial-fill')\"\r\n                                  opacity={opacity}\r\n                                  style={{\r\n                                    pointerEvents: 'none',\r\n                                    mixBlendMode: 'multiply',\r\n                                  }}\r\n                                />\r\n                                <text\r\n                                  fill={theme.colors.darkGray}\r\n                                  x={cx}\r\n                                  y={rLabelHeight + rMax - Math.max(r, 0.15 * rMax) - 0.5 * em}\r\n                                  textAnchor=\"middle\"\r\n                                  fontSize={em}\r\n                                  opacity={otherOpacity}\r\n                                  style={{ pointerEvents: 'none' }}\r\n                                >\r\n                                  {d.issued}\r\n                                </text>\r\n                                <line\r\n                                  x1={cx}\r\n                                  x2={cx}\r\n                                  y1={rLabelHeight + rMax}\r\n                                  y2={lableY + em}\r\n                                  stroke={theme.colors.lightGray}\r\n                                  opacity={otherOpacity}\r\n                                  style={{ pointerEvents: 'none' }}\r\n                                />\r\n                                <LineBreakText\r\n                                  x={cx}\r\n                                  y={lableY + em}\r\n                                  textAnchor=\"middle\"\r\n                                  fontSize={em}\r\n                                  maxLength={3}\r\n                                  lineBefore\r\n                                  em={em}\r\n                                  bg=\"white\"\r\n                                  opacity={otherOpacity}\r\n                                  style={{ pointerEvents: 'none' }}\r\n                                  verticalCenter={false}\r\n                                >\r\n                                  {d.label}\r\n                                </LineBreakText>\r\n                                <text\r\n                                  x={cx}\r\n                                  y={rateY + em / 3}\r\n                                  textAnchor=\"middle\"\r\n                                  fontWeight=\"bold\"\r\n                                  fontSize={0.9 * em}\r\n                                  fill=\"white\"\r\n                                  opacity={otherOpacity}\r\n                                  style={{ pointerEvents: 'none' }}\r\n                                >\r\n                                  {emPercent(d.receiveRate)}\r\n                                </text>\r\n                                <text\r\n                                  x={cx}\r\n                                  y={executedRateY + em / 3}\r\n                                  textAnchor=\"middle\"\r\n                                  fontWeight=\"bold\"\r\n                                  fontSize={0.9 * em}\r\n                                  opacity={otherOpacity}\r\n                                  style={{ pointerEvents: 'none' }}\r\n                                >\r\n                                  {emPercent(d.executedRate)}\r\n                                </text>\r\n                              </g>\r\n                            );\r\n                          })}\r\n                          {nodes.map(({ key, data: d, state: { cx, otherOpacity, centerR } }) => {\r\n                            return (\r\n                              <g key={key}>\r\n                                <Circle\r\n                                  cx={cx}\r\n                                  cy={rMax + rLabelHeight}\r\n                                  r={rMax / 25}\r\n                                  fill={theme.colors.darkGray}\r\n                                  opacity={otherOpacity}\r\n                                  style={{ pointerEvents: 'none' }}\r\n                                />\r\n                                <HoverSensor>\r\n                                  {({ isHover }) => {\r\n                                    const cy = rLabelHeight + rMax\r\n                                    const boxHeight = 2.5 * em\r\n                                    const boxWidth = 5 * em\r\n                                    return (\r\n                                      <g>\r\n                                        <Circle\r\n                                          cx={cx}\r\n                                          cy={cy}\r\n                                          r={centerR * 0.6}\r\n                                          fill={theme.colors.orange5}\r\n                                        />\r\n                                        <Circle\r\n                                          cx={cx}\r\n                                          cy={cy}\r\n                                          r={centerR}\r\n                                          fill=\"transparent\"\r\n                                          strokeWidth=\"2\"\r\n                                          stroke={theme.colors.orange5}\r\n                                          style={isTopBureau ? { cursor: 'pointer' } : {}}\r\n                                          onClick={() => {\r\n                                            if (isTopBureau) {\r\n                                              window.location.search = `?showBureau=${encodeURIComponent(d.id)}`\r\n                                            }\r\n                                          }}\r\n                                        />\r\n                                        {isTopBureau && isHover && createPortal((\r\n                                          <Group top={rLabelHeight + rMax} left={cx + 2 * em}>\r\n                                            <polygon\r\n                                              points={[\r\n                                                [-0.75 * em, 0],\r\n                                                [0.1 * em, -0.5 * em],\r\n                                                [0.1 * em, 0.5 * em]\r\n                                              ].map(p => p.join()).join(' ')}\r\n                                              fill={theme.colors.orange5}\r\n                                            />\r\n                                            <rect\r\n                                              x={0}\r\n                                              y={-boxHeight / 2}\r\n                                              width={boxWidth}\r\n                                              height={boxHeight}\r\n                                              fill={theme.colors.orange5}\r\n                                              rx={0.5 * em}\r\n                                            />\r\n                                            <text\r\n                                              fontSize={em}\r\n                                              fill=\"white\"\r\n                                              x={boxWidth / 2}\r\n                                              y={0.3*em}\r\n                                              textAnchor=\"middle\"\r\n                                            >前往局處</text>\r\n                                          </Group>\r\n                                        ), this.wrapper.current)}\r\n                                      </g>\r\n                                    )\r\n                                  }}\r\n                                </HoverSensor>\r\n                              </g>\r\n                            );\r\n                          })}\r\n                        </g>\r\n                      )}\r\n                    </NodeGroup>\r\n                  </g>\r\n                  <InfoSection\r\n                    labelStart={labelStart}\r\n                    onWidthChange={this.handleInfoWidthChange}\r\n                    xEnd={width}\r\n                    y={rLabelHeight + 2 * em}\r\n                    em={em}\r\n                    main={{\r\n                      value: lockId ? namedData[lockId].issued : data.reduce((sum, d) => sum + d.issued, 0),\r\n                      label: '已開案量',\r\n                      unit: '件',\r\n                    }}\r\n                    sub={{\r\n                      value: lockId ? namedData[lockId].issuedDollar : data.reduce((sum, d) => sum + d.issuedDollar, 0),\r\n                      label: '案件金額',\r\n                      unit: '元',\r\n                    }}\r\n                  />\r\n                  <InfoSection\r\n                    labelStart={labelStart}\r\n                    onWidthChange={this.handleInfoWidthChange}\r\n                    xEnd={width}\r\n                    y={rLabelHeight + 9.5 * em}\r\n                    em={em}\r\n                    main={{\r\n                      value: lockId ? namedData[lockId].received : data.reduce((sum, d) => sum + d.received, 0),\r\n                      label: '收繳案件',\r\n                      unit: '件',\r\n                    }}\r\n                    sub={{\r\n                      value: lockId ? namedData[lockId].receivedDollar : data.reduce((sum, d) => sum + d.receivedDollar, 0),\r\n                      label: '收繳金額',\r\n                      unit: '元',\r\n                    }}\r\n                  />\r\n                  <InfoSection\r\n                    labelStart={labelStart}\r\n                    onWidthChange={this.handleInfoWidthChange}\r\n                    xEnd={width}\r\n                    y={rLabelHeight + 18 * em}\r\n                    em={em}\r\n                    main={{\r\n                      value: lockId ? namedData[lockId].canceled : data.reduce((sum, d) => sum + d.canceled, 0),\r\n                      label: '撤銷案件',\r\n                      unit: '件',\r\n                    }}\r\n                  />\r\n                </Fragment>\r\n              );\r\n            }}\r\n          </ChartBase>\r\n        )}\r\n      </FontSizeContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BubbleLine;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Animate } from 'react-move'\r\nimport { interpolate } from 'flubber'\r\n\r\nclass PathInterpolation extends Component {\r\n  static getDerivedStateFromProps({ d }, { thisD }) {\r\n    return {\r\n      thisD: d,\r\n      prevD: thisD,\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    duration: 200,\r\n  }\r\n\r\n  state = {\r\n    prevD: this.props.d,\r\n    thisD: this.props.d,\r\n  }\r\n\r\n  render() {\r\n    const { d, duration, ...props } = this.props\r\n    const { prevD, thisD } = this.state\r\n\r\n    if (!prevD) {\r\n      return (\r\n        <path\r\n          d={d}\r\n          {...props}\r\n        />\r\n      )\r\n    }\r\n\r\n    const interpolator = interpolate(prevD, thisD)\r\n    return (\r\n      <Animate\r\n        start={{\r\n          d: interpolator(1),\r\n        }}\r\n        enter={[\r\n          {\r\n            timing: { duration },\r\n          },\r\n        ]}\r\n        update={{\r\n          d: interpolator,\r\n          timing: { duration },\r\n        }}\r\n      >\r\n        {(state) => (\r\n          <path\r\n            {...state}\r\n            {...props}\r\n          />\r\n        )}\r\n      </Animate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PathInterpolation\r\n","import React, { Fragment, PureComponent } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { Pie } from '@vx/shape';\r\nimport { scaleBand } from '@vx/scale';\r\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\r\nimport { format } from 'd3-format'\r\nimport { pie } from 'd3-shape'\r\nimport groupBy from 'lodash/groupBy'\r\nimport reduce from 'lodash/reduce'\r\nimport range from 'lodash/range'\r\nimport mapValues from 'lodash/mapValues'\r\n\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\nimport theme from '../../components/ThemeProvider/theme'\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\nimport TweenShape from '../../components/Charts/PathInterpolation'\r\n\r\nconst p = format('.0%')\r\n\r\nconst calcSide = (centroid, index) => {\r\n  return {\r\n    side: Math.sign(centroid[0]),\r\n    distanceX: Math.abs(centroid[0]),\r\n    distanceY: centroid[1],\r\n    index,\r\n  }\r\n}\r\n\r\nclass TypeDonut extends PureComponent {\r\n  static contextType = FontSizeContext\r\n\r\n  static defaultProps = {\r\n    onLegendClick: () => {}\r\n  }\r\n\r\n  static getDerivedStateFromProps({ data, legends, valueGetter }) {\r\n    const spaceForLabels = pie().value(valueGetter)(data).map(({ startAngle, endAngle }) => endAngle - startAngle >= 0.1)\r\n    return {\r\n      totalVaue: data.reduce((sum, d) => sum + valueGetter(d), 0),\r\n      dataLength: data.length,\r\n      labelLength: Math.floor(data.length / 2) + 1,\r\n      getColorByName: legends.reduce((cn, l) => {\r\n        cn[l.id] = l.color\r\n        return cn\r\n      }, {}),\r\n      getIndexByName: legends.reduce((cn, l, i) => {\r\n        cn[l.id] = i\r\n        return cn\r\n      }, {}),\r\n      spaceForLabels,\r\n      notEnoughSpace: !spaceForLabels.every(Boolean),\r\n    }\r\n  }\r\n\r\n  state = {}\r\n\r\n  outerShapes = []\r\n\r\n  handleOuterShape = (i, shape) => {\r\n    this.outerShapes[i] = shape\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      legends,\r\n      onLegendClick,\r\n      activeLegend,\r\n      valueGetter,\r\n      outerCircle,\r\n      showLegend,\r\n      showLabel,\r\n      showPercentage,\r\n      ...props\r\n    } = this.props;\r\n    const {\r\n      totalVaue,\r\n      dataLength,\r\n      labelLength,\r\n      getColorByName,\r\n      getIndexByName,\r\n      spaceForLabels,\r\n      notEnoughSpace,\r\n    } = this.state;\r\n    const { em } = this.context\r\n    const stroke = showLabel ? 'black' : 'white'\r\n    return (\r\n      <ChartBase {...props}>\r\n        {({ width, height }) => {\r\n          const donutR = height * 0.45 - (showLabel ? 8 * em : (notEnoughSpace ? 4 * em : 2 * em));\r\n          const legendBottom = height - 4 * em\r\n          return (\r\n            <Fragment>\r\n              {showLegend && (\r\n                <g>\r\n                  {legends.map((legend, i) => (\r\n                    <Group\r\n                      key={i}\r\n                      left={notEnoughSpace ? 0 : em}\r\n                      top={legendBottom - (dataLength - 1 - i) * em * 1.75}\r\n                      onClick={() => onLegendClick(legend.id === activeLegend ? null : legend.id)}\r\n                      opacity={!activeLegend || legend.id === activeLegend ? 1 : 0.3}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      <circle cx={em / 2} cy={-em * 0.3} r={em / 2} fill={legend.color} />\r\n                      <text x={(notEnoughSpace ? 1.5 : 1.75) * em} fill=\"white\" fontSize={em}>{legend.label}</text>\r\n                    </Group>\r\n                  ))}\r\n                </g>\r\n              )}\r\n              <Group top={height / 2} left={width / 2 + (showLegend ? 5 * em : 0)}>\r\n                {outerCircle && (\r\n                  <Fragment>\r\n                    <Pie\r\n                      data={data}\r\n                      pieValue={valueGetter}\r\n                      outerRadius={donutR * 1.05}\r\n                      innerRadius={donutR * 0.4}\r\n                      padAngle={0}\r\n                      pieSort={(a, b) => getIndexByName[a.id] - getIndexByName[b.id]}\r\n                    >\r\n                      {pie => pie.arcs.map((arc, i) => {\r\n                        const d = pie.path(arc)\r\n                        return (\r\n                          <g key={`outer-${arc.data.id}-${i}`}>\r\n                            <path d={d} fill=\"transparent\" ref={() => this.handleOuterShape(i, d)} />\r\n                          </g>\r\n                        )\r\n                      })}\r\n                    </Pie>\r\n                    <Pie\r\n                      data={data}\r\n                      pieValue={valueGetter}\r\n                      outerRadius={donutR * 1.1}\r\n                      innerRadius={donutR * 0.3}\r\n                      padAngle={0}\r\n                    >\r\n                      {pie => pie.arcs.map((arc, i) => (\r\n                        <g key={`bg-${arc.data.id}-${i}`}>\r\n                          <path d={pie.path(arc)} fill=\"white\" opacity=\"0.2\" />\r\n                        </g>\r\n                      ))}\r\n                    </Pie>\r\n                  </Fragment>\r\n                )}\r\n                <Pie\r\n                  data={data}\r\n                  pieValue={valueGetter}\r\n                  outerRadius={donutR}\r\n                  innerRadius={donutR * 0.4}\r\n                  padAngle={0}\r\n                  pieSort={(a, b) => getIndexByName[a.id] - getIndexByName[b.id]}\r\n                >\r\n                  {pie => {\r\n                    let sideOrders\r\n                    let scaleLabelY\r\n                    if (showLabel || notEnoughSpace) {\r\n                      const sides = groupBy(pie.arcs.map((arc, i) => calcSide(pie.path.centroid(arc), i)), 'side')\r\n                      const sideGroups = reduce(sides, (so, s, i) => {\r\n                        const filteredS = s.filter(sd => pie.arcs[sd.index].value)\r\n                        let ss = so[i] ? filteredS.concat(so[i]) : filteredS\r\n                        if (filteredS.length > labelLength) {\r\n                          const sorted = filteredS.sort((a, b) => b.distanceX - a.distanceX)\r\n                          ss = sorted.slice(0, labelLength)\r\n                          const otherI = i * -1\r\n                          so[otherI] = (so[otherI] || []).concat(sorted.slice(labelLength))\r\n                        }\r\n                        so[i] = ss\r\n                        return so\r\n                      }, {})\r\n                      scaleLabelY = mapValues(sideGroups, s => scaleBand({\r\n                        range: [-donutR, donutR],\r\n                        domain: range(0, s.length),\r\n                      }))\r\n                      sideOrders = reduce(sideGroups, (so, s) => {\r\n                        const sorted = s.sort((a, b) => a.distanceY - b.distanceY)\r\n                        sorted.forEach((d, index) => {\r\n                          so[d.index] = { side: d.side, index }\r\n                        })\r\n                        return so\r\n                      }, [])\r\n                    }\r\n                    return pie.arcs.map((arc, i) => {\r\n                      const [centroidX, centroidY] = pie.path.centroid(arc);\r\n                      const value = valueGetter(arc.data)\r\n                      const opacity = (!activeLegend || arc.data.id === activeLegend) ? 1 : 0.3\r\n                      return (\r\n                        <Fragment key={`inner-${arc.data.id}-${i}`}>\r\n                          <HoverSensor>\r\n                            {({ isHover }) => (\r\n                              <g>\r\n                                <TweenShape\r\n                                  d={((!activeLegend && isHover) || activeLegend === arc.data.id) && this.outerShapes[i] ? this.outerShapes[i] : pie.path(arc)}\r\n                                  fill={getColorByName[arc.data.id]}\r\n                                  opacity={opacity}\r\n                                  onClick={() => onLegendClick(arc.data.id === activeLegend ? null : arc.data.id)}\r\n                                  duration={150}\r\n                                />\r\n                                {arc.value && spaceForLabels[i] && (\r\n                                  <text\r\n                                    fill=\"white\"\r\n                                    x={centroidX}\r\n                                    y={centroidY}\r\n                                    dy=\".33em\"\r\n                                    fontSize={em}\r\n                                    fontWeight=\"bold\"\r\n                                    textAnchor=\"middle\"\r\n                                    opacity={opacity}\r\n                                    style={{ pointerEvents: 'none' }}\r\n                                  >\r\n                                    {showPercentage ? p(value / totalVaue) : value}\r\n                                  </text>\r\n                                )}\r\n                              </g>\r\n                            )}\r\n                          </HoverSensor>\r\n\r\n                          {(showLabel || !spaceForLabels[i]) && (() => {\r\n                            const side = sideOrders[i]\r\n                            if (!side) return null\r\n                            const scale = scaleLabelY[side.side]\r\n                            const sign = side.side\r\n                            const left = (donutR + (showLabel ? 8 * em : 4.5 * em)) * sign\r\n                            const top = scale(side.index) + scale.bandwidth() / 2 - em / 2\r\n                            const centX = centroidX - left + (spaceForLabels[i] ? 2 * em * sign : 0)\r\n                            const centY = centroidY - top\r\n                            const breakX = centX + Math.abs(centY) * sign\r\n                            return (\r\n                              <Fragment>\r\n                                <Group\r\n                                  left={left}\r\n                                  top={top}\r\n                                  opacity={opacity}\r\n                                >\r\n                                  <line\r\n                                    x1={0}\r\n                                    x2={breakX}\r\n                                    y1={0}\r\n                                    y2={0}\r\n                                    stroke={stroke}\r\n                                  />\r\n                                  <line\r\n                                    x1={centX}\r\n                                    y1={centY}\r\n                                    x2={breakX}\r\n                                    y2={0}\r\n                                    stroke={stroke}\r\n                                  />\r\n                                  <text\r\n                                    y={1.5 * em}\r\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\r\n                                    fontSize={(showLabel ? 1 : 0.9) * em}\r\n                                    fontWeight=\"bold\"\r\n                                  >{arc.data.name}</text>\r\n                                  <text\r\n                                    y={-0.75 * em}\r\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\r\n                                    fontSize={(showLabel ? 1.5 : 1) * em}\r\n                                    fill={showLabel ? theme.colors.primary : getColorByName[arc.data.id]}\r\n                                    fontWeight=\"bold\"\r\n                                  >{valueGetter(arc.data)}</text>\r\n                                </Group>\r\n                              </Fragment>\r\n                            )\r\n                          })()}\r\n                        </Fragment>\r\n                      );\r\n                    });\r\n                  }}\r\n                </Pie>\r\n              </Group>\r\n            </Fragment>\r\n          )\r\n        }}\r\n      </ChartBase>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TypeDonut;\r\n","import React, { Fragment } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleLinear } from '@vx/scale';\r\nimport { Animate } from 'react-move'\r\nimport { format } from 'd3-format'\r\nimport { max } from 'd3-array'\r\n\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\n\r\nconst pd = format('.0%')\r\n\r\nconst PercentBars = ({\r\n  data,\r\n  legends,\r\n  onLegendClick,\r\n  activeLegend,\r\n  ...props\r\n}) => {\r\n  const dataByKey = data.reduce((dk, d) => {\r\n    dk[d.id] = d.issuedDollar ? d.receivedDollar / d.issuedDollar : 0;\r\n    return dk\r\n  }, {})\r\n\r\n  const legendsLength = Math.max(...legends.map(l => l.label.length))\r\n  const maxRate = Math.ceil(max(legends, ({ id }) => dataByKey[id]))\r\n  return (\r\n    <FontSizeContext.Consumer>\r\n      {({ em }) => (\r\n        <ChartBase {...props}>\r\n          {({ width }) => {\r\n            const yStart = 6 * em\r\n            const xScale = scaleLinear({\r\n              range: [0, width - 3 * em - legendsLength * em * 1.25],\r\n              domain: [0, maxRate],\r\n            });\r\n            return (\r\n              <Group top={yStart}>\r\n                {legends.map(({ label, color, id }, i) => {\r\n                  const handleClick = () => onLegendClick(id === activeLegend ? null : id)\r\n                  return (\r\n                    <Group\r\n                      top={i * em * 2.5}\r\n                      opacity={!activeLegend || activeLegend === id ? 1 : 0.3}\r\n                      key={id}\r\n                    >\r\n                      <text\r\n                        fill=\"white\"\r\n                        fontSize={em}\r\n                        onClick={handleClick}\r\n                        style={{ cursor: 'pointer' }}\r\n                      >\r\n                        {label}\r\n                      </text>\r\n                      <rect\r\n                        x={legendsLength * em * 1.25}\r\n                        y={-1.25 * em}\r\n                        width={xScale(maxRate)}\r\n                        height={1.5 * em}\r\n                        fill=\"white\"\r\n                        opacity=\"0.15\"\r\n                      />\r\n                      <Animate\r\n                        start={{ width: 0 }}\r\n                        enter={{\r\n                          width: [xScale(dataByKey[id])],\r\n                          timing: { duration: 500 },\r\n                        }}\r\n                        update={{\r\n                          width: [xScale(dataByKey[id])],\r\n                          timing: { duration: 500 },\r\n                        }}\r\n                      >\r\n                        {(state) => (\r\n                          <Fragment>\r\n                            <rect\r\n                              x={legendsLength * em * 1.25}\r\n                              y={-1.25 * em}\r\n                              height={1.5 * em}\r\n                              {...state}\r\n                              fill={color}\r\n                              onClick={handleClick}\r\n                            />\r\n                            <text\r\n                              x={legendsLength * em * 1.25 + state.width + 0.5 * em}\r\n                              y=\"-.3em\"\r\n                              fill=\"white\"\r\n                              fontSize={em * 0.8}\r\n                            >\r\n                              {pd(dataByKey[id])}\r\n                            </text>\r\n                          </Fragment>\r\n                        )}\r\n                      </Animate>\r\n                    </Group>\r\n                  )\r\n                })}\r\n              </Group>\r\n            )\r\n          }}\r\n        </ChartBase>\r\n      )}\r\n    </FontSizeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default PercentBars;\r\n","import { createElement } from 'react'\r\nimport withData from './withData';\r\n\r\nexport default ({ publicOnly, ...params }, lockId) => (SubComp) => {\r\n  let key = 'data/bureaus'\r\n  if (window.__SHOW_BUREAU_ID !== '00000000') {\r\n    key = `${key}/${window.__SHOW_BUREAU_ID}`\r\n  } else if (lockId) {\r\n    key = `${key}/${lockId}`\r\n  }\r\n  key = `${key}/laws`\r\n  return withData(\r\n    key,\r\n    Object.assign(publicOnly ? { publicOnly } : {}, params),\r\n    publicOnly ? d => ({ ...d, isPublic: true }) : undefined,\r\n  )(props => createElement(SubComp, { ...props, publicOnly, data: props[key] }))\r\n}\r\n","import React, { Fragment, PureComponent, createElement } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleLinear } from '@vx/scale';\r\nimport { LinearGradient } from '@vx/gradient';\r\nimport { RectClipPath } from '@vx/clip-path'\r\nimport { Animate } from 'react-move'\r\nimport sortBy from 'lodash/sortBy'\r\nimport shortid from 'shortid';\r\n\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\n// import theme from '../../components/ThemeProvider/theme'\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\nimport LineBreakText from '../../components/Charts/LineBreakText'\r\nimport withLawData from '../../services/api/withLawData'\r\n\r\nconst labelLength = 18\r\n\r\nclass LawTops extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.SIG = shortid.generate()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { year, updateParams, top } = this.props\r\n    if (prevProps.year !== year) {\r\n      updateParams({ year, top })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { hasLine, color, ratio, top, data, publicOnly } = this.props;\r\n    let sorted = sortBy(data, 'count').reverse()\r\n    if (publicOnly) sorted = sorted.filter(d => d.isPublic)\r\n    sorted = sorted.slice(0, top)\r\n    return (\r\n      <FontSizeContext.Consumer>\r\n        {({ em }) => (\r\n          <ChartBase ratio={ratio}>\r\n            {({ width }) => {\r\n              const yStart = em * 2.5\r\n              const xStart = labelLength * em * 1.1;\r\n              const xEnd = width - 3 * em - xStart\r\n              const xScale = scaleLinear({\r\n                range: [0, xEnd],\r\n                domain: [0, Math.max(...sorted.map(d => d.count))],\r\n              });\r\n              return (\r\n                <Fragment>\r\n                  <LinearGradient from=\"#ffab2a\" to=\"#ff712a\" vertical={false} id={`bar-ramp-${this.SIG}`} />\r\n                  <Group top={yStart}>\r\n                    {sorted.map((law, i) => {\r\n                      return (\r\n                        <Animate\r\n                          start={{ width: 0 }}\r\n                          enter={{\r\n                            width: [xScale(law.count)],\r\n                            timing: { duration: 200 },\r\n                          }}\r\n                          update={{\r\n                            width: [xScale(law.count)],\r\n                            timing: { duration: 200 },\r\n                          }}\r\n                          key={law.id}\r\n                        >\r\n                          {(state) => (\r\n                            <Group top={i * em * 3}>\r\n                              <LineBreakText\r\n                                fill={color}\r\n                                fontSize={em}\r\n                                maxLength={labelLength}\r\n                                fillFront\r\n                                textAnchor=\"end\"\r\n                                x={xStart - em}\r\n                                y={0.5 * em}\r\n                                title={law.name}\r\n                              >\r\n                                {law.name.length > labelLength * 2 ? law.name.substring(0, labelLength * 2 - 3).concat('...') : law.name}\r\n                              </LineBreakText>\r\n                              <RectClipPath\r\n                                id={`bar-${this.SIG}-${i}`}\r\n                                x={xStart}\r\n                                y=\"-0.5em\"\r\n                                width={state.width}\r\n                                height={1.25 * em}\r\n                              />\r\n                              <rect\r\n                                fill={`url(#bar-ramp-${this.SIG})`}\r\n                                clipPath={`url(#bar-${this.SIG}-${i})`}\r\n                                x={xStart}\r\n                                y=\"-0.5em\"\r\n                                width={xEnd}\r\n                                height={1.25 * em}\r\n                              />\r\n                              <text\r\n                                fill={color}\r\n                                x={xStart + state.width + em * 0.5}\r\n                                y=\"0.5em\"\r\n                              >{law.count}</text>\r\n                            </Group>\r\n                          )}\r\n                        </Animate>\r\n                      )\r\n                    })}\r\n                  </Group>\r\n                  {hasLine && (\r\n                    <line\r\n                      x1={xStart}\r\n                      x2={xStart}\r\n                      y1={yStart / 2}\r\n                      y2={yStart / 2 + sorted.length * em * 3}\r\n                      stroke={color}\r\n                      strokeWidth=\"1.5\"\r\n                    />\r\n                  )}\r\n                </Fragment>\r\n              )\r\n            }}\r\n          </ChartBase>\r\n        )}\r\n      </FontSizeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ({ publicOnly, ...props }) => createElement(withLawData({ top: props.top, year: props.year, publicOnly }, props.lockId)(LawTops), props);\r\n","import React, { PureComponent, createRef } from 'react';\r\nimport TWEEN from '@tweenjs/tween.js';\r\nimport { SVGPathData, encodeSVGPath } from 'svg-pathdata';\r\nimport pickBy from 'lodash/pickBy';\r\nimport size from 'lodash/size';\r\nimport merge from 'lodash/merge';\r\n\r\nfunction animate() {\r\n\trequestAnimationFrame(animate);\r\n\tTWEEN.update();\r\n}\r\n\r\nconst blacklist = {\r\n  type: true,\r\n  relative: true,\r\n  lArcFlag: true,\r\n  sweepFlag: true,\r\n}\r\n\r\nclass TweenShape extends PureComponent {\r\n  static defaultProps = {\r\n    duration: 500,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { d } = props;\r\n    this.prevParsed = new SVGPathData(d).toAbs().commands;\r\n    this.tick = [];\r\n    this.tickShape = [];\r\n    animate();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { d } = this.props;\r\n    if (d !== prevProps.d) this.updatePath(d);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.tweens) {\r\n      this.tweens.forEach((tween) => tween.stop());\r\n    }\r\n  }\r\n\r\n  pathRef = createRef()\r\n\r\n  updatePath = (d) => {\r\n    this.parsed = new SVGPathData(d).toAbs().commands;\r\n    this.tweens = this.parsed.map((to, index) => {\r\n      const from = this.prevParsed[index];\r\n      const fromValues = pickBy(from, (v, k) => !blacklist[k]);\r\n      const toValues = pickBy(to, (v, k) => !blacklist[k]);\r\n      if (size(toValues)) {\r\n        this.tickShape[index] = false;\r\n        const tween = new TWEEN.Tween(fromValues)\r\n          .to(toValues, this.props.duration)\r\n          .easing(TWEEN.Easing.Quadratic.InOut)\r\n          .onUpdate(this.handleUpdate(index))\r\n        tween.start();\r\n        return tween;\r\n      }\r\n      this.tick[index] = true;\r\n      this.tickShape[index] = true;\r\n      return {\r\n        stop: () => {},\r\n      };\r\n    });\r\n  }\r\n\r\n  handleUpdate = (index) => (value) => {\r\n    this.prevParsed[index] = merge(this.prevParsed[index] || {}, value);\r\n    this.tick[index] = true;\r\n    if (this.tick.length === this.parsed.length && this.tick.every(Boolean)) {\r\n      this.doUpdatePath();\r\n    }\r\n  }\r\n\r\n  doUpdatePath = () => {\r\n    if (this.pathRef.current) {\r\n      try {\r\n        const encoded = encodeSVGPath(this.prevParsed)\r\n        this.pathRef.current.setAttribute('d', encoded);\r\n      } catch {\r\n\r\n      }\r\n    }\r\n    this.tick = Array.from(this.tickShape)\r\n  }\r\n\r\n  render() {\r\n    const { duration, ...props } = this.props\r\n    return (\r\n      <path ref={this.pathRef} style={props.onClick ? { cursor: 'pointer' } : {}} {...props} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TweenShape;\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleBand, scaleLinear } from '@vx/scale';\r\nimport { AxisLeft, AxisBottom } from '@vx/axis';\r\nimport { Grid } from '@vx/grid';\r\nimport { LinePath, Bar } from '@vx/shape';\r\nimport range from 'lodash/range'\r\nimport map from 'lodash/map'\r\nimport { NodeGroup } from 'react-move'\r\n\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\nimport theme from '../../components/ThemeProvider/theme'\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\nimport TweenShape from '../../components/Charts/TweenShape'\r\n\r\nconst xValue = d => d.month\r\nconst yValue = d => d.issued\r\n\r\nconst YearChart = ({\r\n  data,\r\n  ...props\r\n}) => {\r\n\r\n  return (\r\n    <FontSizeContext.Consumer>\r\n      {({ em }) => (\r\n        <ChartBase {...props}>\r\n          {({ width, height }) => {\r\n\r\n            const formattedData = map(data, (d, month) => ({\r\n              month,\r\n              ...d,\r\n              receivedRate: d.issuedDollar ? d.receivedDollar / d.issuedDollar : 0,\r\n              width,\r\n            }))\r\n            const yStart = 2 * em\r\n            const yEnd = height - 2 * em\r\n            const yHeight = yEnd - yStart\r\n            const xStart = em * 3\r\n            const xEnd = width - em * 13\r\n            const xScale = scaleBand({\r\n              range: [0, xEnd - xStart],\r\n              domain: range(1, 13),\r\n              paddingInner: 0.3,\r\n              paddingOuter: 0.3,\r\n            })\r\n            const percentYScale = scaleLinear({\r\n              range: [yHeight, 0],\r\n              domain: [0, 1.3],\r\n            });\r\n            const valueYMax = Math.ceil(Math.max(...formattedData.map(yValue)) / 100) * 100\r\n            const valueYScale = valueYMax ? scaleLinear({\r\n              range: [yHeight, 0],\r\n              domain: [0, valueYMax],\r\n            }) : () => yHeight;\r\n            const barWidth = xScale.bandwidth()\r\n            return (\r\n              <Group top={yStart}>\r\n                <Group left={xStart}>\r\n                  <Grid\r\n                    top={0}\r\n                    left={0}\r\n                    xScale={xScale}\r\n                    yScale={percentYScale}\r\n                    stroke=\"white\"\r\n                    width={xEnd - xStart}\r\n                    height={yHeight}\r\n                    numTicksRows={3}\r\n                    numTicksColumns={0}\r\n                    columnLineStyle={{\r\n                      strokeWidth: 0,\r\n                    }}\r\n                  />\r\n                  <AxisLeft\r\n                    top={0}\r\n                    left={0}\r\n                    scale={percentYScale}\r\n                    numTicks={3}\r\n                    stroke=\"white\"\r\n                    strokeWidth={1.5}\r\n                    tickStroke=\"none\"\r\n                    tickLabelProps={() => ({\r\n                      fill: 'white',\r\n                      textAnchor: 'end',\r\n                      fontSize: em * 0.8,\r\n                      dx: '-0.25em',\r\n                      dy: '0.25em'\r\n                    })}\r\n                    tickFormat={d => Math.round(d * 100)}\r\n                  />\r\n                  <AxisBottom\r\n                    top={yHeight}\r\n                    left={0}\r\n                    scale={xScale}\r\n                    numTicks={12}\r\n                    stroke=\"white\"\r\n                    strokeWidth={1.5}\r\n                    tickStroke=\"none\"\r\n                    tickFormat={d => `${d}月`}\r\n                    tickLabelProps={() => ({\r\n                      fill: 'white',\r\n                      fontSize: em * 0.8,\r\n                      textAnchor: 'middle',\r\n                    })}\r\n                  />\r\n                  <Group left={xStart}>\r\n                    <LinePath\r\n                      x={dd => xScale(xValue(dd)) - barWidth / 2}\r\n                      y={dd => valueYScale(yValue(dd))}\r\n                    >\r\n                      {({ path }) => (\r\n                        <TweenShape\r\n                          d={path(formattedData)}\r\n                          stroke={theme.colors.lightOrange}\r\n                          strokeWidth=\"1.5\"\r\n                          fill=\"transparent\"\r\n                          duration={500}\r\n                        />\r\n                      )}\r\n                    </LinePath>\r\n                    <NodeGroup\r\n                      data={formattedData}\r\n                      keyAccessor={xValue}\r\n                      start={d => ({\r\n                        xPos: xScale(xValue(d)),\r\n                        barHeight: 0,\r\n                        dotY: yHeight,\r\n                      })}\r\n                      enter={d => ({\r\n                        barHeight: [yHeight - (percentYScale(d.receivedRate) || yHeight)],\r\n                        dotY: [valueYScale(yValue(d))],\r\n                        timing: { duration: 500 },\r\n                      })}\r\n                      update={d => ({\r\n                        xPos: [xScale(xValue(d))],\r\n                        barHeight: [yHeight - (percentYScale(d.receivedRate) || yHeight)],\r\n                        dotY: [valueYScale(yValue(d))],\r\n                        timing: { duration: 500 },\r\n                      })}\r\n                    >\r\n                      {nodes => (\r\n                        <Fragment>\r\n                          {nodes.map(({ key, data: d, state: { xPos, barHeight, dotY } }) => {\r\n                            const barY = yHeight - barHeight;\r\n                            const dotX = xPos - barWidth / 2\r\n                            return (\r\n                              <Fragment key={key}>\r\n                                <Bar\r\n                                  x={xPos - barWidth}\r\n                                  y={barY}\r\n                                  width={barWidth}\r\n                                  height={barHeight}\r\n                                  fill={theme.colors.orange}\r\n                                  opacity={0.5}\r\n                                />\r\n                                <circle\r\n                                  cx={dotX}\r\n                                  cy={dotY}\r\n                                  r={em / 3}\r\n                                  fill={theme.colors.orange5}\r\n                                />\r\n                                <text\r\n                                  x={dotX}\r\n                                  y={dotY - em}\r\n                                  textAnchor=\"middle\"\r\n                                  fontSize={em}\r\n                                  fill={theme.colors.orange}\r\n                                >\r\n                                  {yValue(d)}\r\n                                </text>\r\n                              </Fragment>\r\n                            )\r\n                          })}\r\n                        </Fragment>\r\n                      )}\r\n                    </NodeGroup>\r\n                  </Group>\r\n                </Group>\r\n                <Group top={yHeight / 2 - em} left={xEnd + 5 * em}>\r\n                  <Group>\r\n                    <text>案件量</text>\r\n                    <line\r\n                      x1={4 * em}\r\n                      y1={-0.5 * em}\r\n                      x2={7 * em}\r\n                      y2={-0.5 * em}\r\n                      stroke={theme.colors.lightOrange}\r\n                      strokeWidth=\"1.5\"\r\n                    />\r\n                  </Group>\r\n                  <Group top={2.5 * em}>\r\n                    <text>收繳率</text>\r\n                    <rect\r\n                      x={4 * em}\r\n                      y={-1 * em}\r\n                      width={3 * em}\r\n                      height={em}\r\n                      fill={theme.colors.orange}\r\n                      opacity={0.5}\r\n                    />\r\n                  </Group>\r\n                </Group>\r\n              </Group>\r\n            )\r\n          }}\r\n        </ChartBase>\r\n      )}\r\n    </FontSizeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default YearChart;\r\n","import React, { Fragment, PureComponent, createRef } from 'react';\r\nimport { createPortal } from 'react-dom'\r\nimport { Group } from '@vx/group';\r\nimport { scalePoint, scaleLinear } from '@vx/scale';\r\nimport { AxisLeft, AxisBottom } from '@vx/axis';\r\nimport { Grid } from '@vx/grid';\r\nimport { AreaClosed, Bar, Line } from '@vx/shape';\r\nimport { withTooltip } from '@vx/tooltip';\r\nimport { localPoint } from '@vx/event';\r\nimport range from 'lodash/range'\r\nimport { NodeGroup } from 'react-move'\r\nimport styled from 'styled-components';\r\n\r\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\r\nimport theme from '../../../components/ThemeProvider/theme'\r\n\r\nimport Text from '../../../components/Text'\r\nimport Box from '../../../components/Box'\r\n\r\nimport ChartBase from '../../../components/Charts/ChartBase'\r\nimport TweenShape from '../../../components/Charts/TweenShape'\r\n\r\nconst TooltipBox = styled(Box)`\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 100%;\r\n    transform: translateX(-50%);\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 0.5em solid transparent;\r\n    border-right: 0.5em solid transparent;\r\n\r\n    border-top: 0.5em solid ${theme.colors.darkerBlue};\r\n  }\r\n`\r\n\r\nconst xValue = d => d.index\r\nconst yValue = d => d.issued\r\nconst yCancealedValue = d => d.canceled\r\n\r\nconst getZeros = n => {\r\n  if (n < 10) return 0\r\n  let i = 0\r\n  while (n / (10 ** i) > 10) {\r\n    i += 1\r\n  }\r\n  return i\r\n}\r\n\r\nclass IssuedChart extends PureComponent {\r\n  wrapper = createRef()\r\n\r\n  handleTooltip = ({ event, data, xScale, yScale, xStart }) => {\r\n    const { showTooltip } = this.props;\r\n    const { x } = localPoint(event);\r\n    const index = Math.round((x - xStart) / xScale.step());\r\n    const d = data[index];\r\n    showTooltip({\r\n      tooltipData: Object.assign({ canceledTop: yScale(yCancealedValue(d)) }, d),\r\n      tooltipLeft: xScale(xValue(d)) + xStart,\r\n      tooltipTop: yScale(yValue(d)),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      xTickFormat,\r\n      tooltipOpen,\r\n      updateTooltip,\r\n      showTooltip,\r\n      hideTooltip,\r\n      tooltipData,\r\n      tooltipTop,\r\n      tooltipLeft,\r\n      events,\r\n      getFill,\r\n      ...props\r\n    } = this.props\r\n    return (\r\n      <div ref={this.wrapper}>\r\n        <FontSizeContext.Consumer>\r\n          {({ em }) => (\r\n            <Fragment>\r\n              <ChartBase {...props}>\r\n                {({ width, height }) => {\r\n                  const yStart = 6 * em\r\n                  const yEnd = height - 2 * em\r\n                  const yHeight = yEnd - yStart\r\n                  const xStart = em * 3\r\n                  const xEnd = width - 2 * em\r\n                  const xScale = scalePoint({\r\n                    range: [0, xEnd - xStart],\r\n                    domain: range(0, data.length),\r\n                    // padding: 0.2,\r\n                  })\r\n                  const yMax = Math.max(...data.map(yValue))\r\n                  const z = getZeros(yMax)\r\n                  const yScale = scaleLinear({\r\n                    range: [yHeight, 0],\r\n                    domain: [0, Math.ceil(yMax / (10 ** z)) * (10 ** z)],\r\n                  });\r\n                  return (\r\n                    <Group>\r\n                      <Group top={yStart} left={xStart}>\r\n                        <AreaClosed\r\n                          x={dd => xScale(xValue(dd))}\r\n                          y={dd => yScale(yValue(dd))}\r\n                          yScale={yScale}\r\n                        >\r\n                          {({ path }) => (\r\n                            <TweenShape\r\n                              d={path(data)}\r\n                              stroke={theme.colors.lightOrange}\r\n                              fill={theme.colors.lightOrange}\r\n                              opacity={0.7}\r\n                              duration={500}\r\n                            />\r\n                          )}\r\n                        </AreaClosed>\r\n                        <AreaClosed\r\n                          x={dd => xScale(xValue(dd))}\r\n                          y={dd => yScale(yCancealedValue(dd))}\r\n                          yScale={yScale}\r\n                        >\r\n                          {({ path }) => (\r\n                            <TweenShape\r\n                              d={path(data)}\r\n                              stroke={theme.colors.orange}\r\n                              fill={theme.colors.orange}\r\n                              duration={500}\r\n                            />\r\n                          )}\r\n                        </AreaClosed>\r\n                        <Grid\r\n                          top={0}\r\n                          left={0}\r\n                          xScale={xScale}\r\n                          yScale={yScale}\r\n                          stroke={theme.colors.gray}\r\n                          width={xEnd - xStart}\r\n                          height={yHeight}\r\n                          numTicksRows={3}\r\n                          numTicksColumns={0}\r\n                          columnLineStyle={{\r\n                            strokeWidth: 0,\r\n                          }}\r\n                        />\r\n                        <AxisLeft\r\n                          top={0}\r\n                          left={0}\r\n                          scale={yScale}\r\n                          numTicks={3}\r\n                          stroke=\"black\"\r\n                          strokeWidth={1.5}\r\n                          tickStroke=\"none\"\r\n                          tickLabelProps={() => ({\r\n                            fill: 'black',\r\n                            textAnchor: 'end',\r\n                            fontSize: em * 0.8,\r\n                            dx: '-0.25em',\r\n                            dy: '0.25em'\r\n                          })}\r\n                        />\r\n                        <AxisBottom\r\n                          top={yHeight}\r\n                          left={0}\r\n                          scale={xScale}\r\n                          numTicks={12}\r\n                          stroke=\"black\"\r\n                          strokeWidth={1.5}\r\n                          tickStroke=\"none\"\r\n                          tickFormat={xTickFormat}\r\n                          tickLabelProps={() => ({\r\n                            fill: 'black',\r\n                            fontSize: em * 0.8,\r\n                            textAnchor: 'middle',\r\n                          })}\r\n                        />\r\n                        {tooltipData && (\r\n                          <Line\r\n                            from={{ x: tooltipLeft - xStart, y: tooltipTop }}\r\n                            to={{ x: tooltipLeft - xStart, y: yHeight }}\r\n                            stroke=\"white\"\r\n                            strokeWidth={2}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                        )}\r\n                        <NodeGroup\r\n                          data={data}\r\n                          keyAccessor={xValue}\r\n                          start={d => ({\r\n                            xPos: xScale(xValue(d)),\r\n                            dotY: yScale(yValue(d)),\r\n                            dotCanceledY: yScale(yCancealedValue(d)),\r\n                          })}\r\n                          enter={d => ({\r\n                            dotY: [yScale(yValue(d))],\r\n                            timing: { duration: 500 },\r\n                          })}\r\n                          update={d => ({\r\n                            xPos: [xScale(xValue(d))],\r\n                            dotY: [yScale(yValue(d))],\r\n                            dotCanceledY: [yScale(yCancealedValue(d))],\r\n                            timing: { duration: 500 },\r\n                          })}\r\n                        >\r\n                          {nodes => (\r\n                            <Fragment>\r\n                              {nodes.map(({ key, data: d, state: { xPos, dotY, dotCanceledY } }) => {\r\n                                return (\r\n                                  <Fragment key={key}>\r\n                                    <circle\r\n                                      cx={xPos}\r\n                                      cy={dotY}\r\n                                      r={em / 4}\r\n                                      fill={theme.colors.orange5}\r\n                                    />\r\n                                    <circle\r\n                                      cx={xPos}\r\n                                      cy={dotCanceledY}\r\n                                      r={em / 4}\r\n                                      fill={theme.colors.orange5}\r\n                                    />\r\n                                  </Fragment>\r\n                                )\r\n                              })}\r\n                            </Fragment>\r\n                          )}\r\n                        </NodeGroup>\r\n                      </Group>\r\n                      <Group top={1.75 * em} left={xEnd - 16 * em}>\r\n                        <Group>\r\n                          <text>案件量</text>\r\n                          <rect\r\n                            x={4 * em}\r\n                            y={-1 * em}\r\n                            width={3 * em}\r\n                            height={em}\r\n                            fill={theme.colors.lightOrange}\r\n                            opacity={0.7}\r\n                          />\r\n                        </Group>\r\n                        <Group left={8 * em}>\r\n                          <text>撤銷件數</text>\r\n                          <rect\r\n                            x={5.5 * em}\r\n                            y={-1 * em}\r\n                            width={3 * em}\r\n                            height={em}\r\n                            fill={theme.colors.orange}\r\n                          />\r\n                        </Group>\r\n                      </Group>\r\n                      <Bar\r\n                        x={0}\r\n                        y={0}\r\n                        width={width}\r\n                        height={height}\r\n                        fill=\"transparent\"\r\n                        data={data}\r\n                        onTouchStart={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onTouchMove={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onMouseMove={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onMouseLeave={() => hideTooltip()}\r\n                      />\r\n                      {tooltipData && (\r\n                        <g>\r\n                          <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipTop + yStart}\r\n                            r={em / 2}\r\n                            fill={theme.colors.darkBlue}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                          <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipData.canceledTop + yStart}\r\n                            r={em / 2}\r\n                            fill={theme.colors.darkBlue}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                        </g>\r\n                      )}\r\n                      {tooltipData && createPortal((\r\n                        <TooltipBox\r\n                          position=\"absolute\"\r\n                          top={tooltipTop - 0.5 * em}\r\n                          left={tooltipLeft}\r\n                          transform=\"translateX(-50%)\"\r\n                          p=\"1em\"\r\n                          bg=\"black\"\r\n                          color=\"white\"\r\n                          whiteSpace=\"nowrap\"\r\n                          gradient=\"darkBlue\"\r\n                          borderRadius=\"0.5em\"\r\n                          zIndex={10}\r\n                          fontSize=\"0.8em\"\r\n                        >\r\n                          <Text mb=\"0.25em\">案件量 {yValue(tooltipData)}</Text>\r\n                          <Text>撤銷數 {yCancealedValue(tooltipData)}</Text>\r\n                        </TooltipBox>\r\n                      ), this.wrapper.current)}\r\n                    </Group>\r\n                  )\r\n                }}\r\n              </ChartBase>\r\n            </Fragment>\r\n          )}\r\n        </FontSizeContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTooltip(IssuedChart);\r\n","import React, { Fragment } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleBand, scaleLinear } from '@vx/scale';\r\nimport range from 'lodash/range'\r\nimport { NodeGroup } from 'react-move'\r\nimport { format } from 'd3-format'\r\nimport { max } from 'd3-array'\r\n\r\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\r\n\r\nimport ChartBase from '../../../components/Charts/ChartBase'\r\n\r\nconst xValue = d => d.index\r\nconst yValue = d => d.receivedRate\r\nconst pd = format('.2%')\r\n\r\nconst ReceivedChart = ({\r\n  data,\r\n  getFill,\r\n  xTickFormat,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <FontSizeContext.Consumer>\r\n      {({ em }) => (\r\n        <ChartBase {...props}>\r\n          {({ width, height }) => {\r\n            const yStart = 6 * em\r\n            const yEnd = height - 2 * em\r\n            const yHeight = yEnd - yStart\r\n\r\n            const xStart = em * 3\r\n            const xEnd = width - em\r\n            const xScale = scaleBand({\r\n              range: [0, xEnd - xStart],\r\n              domain: range(0, data.length),\r\n              paddingInner: 0.2,\r\n            })\r\n            const yScale = scaleLinear({\r\n              range: [0, yHeight],\r\n              domain: [0, Math.ceil(max(data, yValue))],\r\n            });\r\n            return (\r\n              <Group>\r\n                <Group top={yStart} left={xStart}>\r\n                  <NodeGroup\r\n                    data={data}\r\n                    keyAccessor={xValue}\r\n                    start={d => ({\r\n                      xPos: xScale(xValue(d)),\r\n                      y: 0,\r\n                    })}\r\n                    enter={d => ({\r\n                      y: [yScale(yValue(d))],\r\n                      timing: { duration: 500 },\r\n                    })}\r\n                    update={d => ({\r\n                      xPos: [xScale(xValue(d))],\r\n                      y: [yScale(yValue(d))],\r\n                      timing: { duration: 500 },\r\n                    })}\r\n                  >\r\n                    {nodes => (\r\n                      <Fragment>\r\n                        {nodes.map(({ key, data: d, state: { xPos, y } }) => {\r\n                          const barWidth = xScale.bandwidth()\r\n                          return (\r\n                            <g key={key}>\r\n                              <rect\r\n                                fill=\"#e2e2e3\"\r\n                                x={xPos}\r\n                                y={0}\r\n                                width={barWidth}\r\n                                height={yHeight}\r\n                              />\r\n                              <rect\r\n                                fill={getFill(d.index)}\r\n                                x={xPos}\r\n                                y={yHeight - y}\r\n                                width={barWidth}\r\n                                height={y}\r\n                              />\r\n                              <text\r\n                                fontSize={em}\r\n                                x={xPos + barWidth / 2}\r\n                                y={yHeight - y - em}\r\n                                textAnchor=\"middle\"\r\n                              >\r\n                                {pd(yValue(d))}\r\n                              </text>\r\n                              <text\r\n                                fontSize={0.8 * em}\r\n                                x={xPos + barWidth / 2}\r\n                                y={yHeight + 1.5 * em}\r\n                                textAnchor=\"middle\"\r\n                              >\r\n                                {xTickFormat(xValue(d))}\r\n                              </text>\r\n                            </g>\r\n                          )\r\n                        })}\r\n                      </Fragment>\r\n                    )}\r\n                  </NodeGroup>\r\n                </Group>\r\n              </Group>\r\n            )\r\n          }}\r\n        </ChartBase>\r\n      )}\r\n    </FontSizeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default ReceivedChart;\r\n","import map from 'lodash/map'\r\nimport reduce from 'lodash/reduce'\r\nimport last from 'lodash/last'\r\nimport get from 'lodash/get'\r\n\r\nconst keys = [\r\n  'canceled',\r\n  'canceledDollar',\r\n  'issued',\r\n  'issuedDollar',\r\n  'received',\r\n  'receivedDollar',\r\n]\r\n\r\nexport const getBureauTotal = (data, activeType) => data.map(({ label, id, monthData }) => ({\r\n  label,\r\n  id,\r\n  ...keys.reduce((allData, key) => {\r\n    allData[key] = monthData.reduce((all, d) => all + (activeType ? d.types[activeType].data[key] : d.data[key]), 0)\r\n    allData.executed = get(last(monthData), (activeType ? ['types', activeType] : []).concat('data', 'executed'))\r\n    return allData\r\n  }, {})\r\n})).map((d) => ({\r\n  ...d,\r\n  receiveRate: d.receivedDollar / d.issuedDollar,\r\n  executedRate: d.executed / d.issued,\r\n}))\r\n\r\nexport const getTypes = (data, lockId) => Object.values(reduce(data, (allTypes, { monthData, id }) => {\r\n  if (!lockId || lockId === id) {\r\n    monthData.forEach(m => {\r\n      m.types.forEach((type) => {\r\n        allTypes[type.id] = allTypes[type.id] || keys.reduce((df, k) => {\r\n          df[k] = 0\r\n          return df\r\n        }, { id: type.id, name: type.name })\r\n        keys.forEach(k => {\r\n          allTypes[type.id][k] += type.data[k]\r\n        })\r\n      })\r\n    })\r\n  }\r\n  return allTypes\r\n}, {}))\r\n\r\nexport const getMonthData = (data, activeType, lockId) => data.reduce((md, d) => {\r\n  if (!lockId || lockId === d.id) {\r\n    d.monthData.forEach((m) => {\r\n      md[m.month] = md[m.month] || { month: m.month }\r\n      keys.forEach((key) => {\r\n        md[m.month][key] = md[m.month][key] || 0\r\n        md[m.month][key] += (activeType ? m.types[activeType].data[key] : m.data[key])\r\n      }, {})\r\n    })\r\n  }\r\n  return md\r\n}, {})\r\n\r\nexport const mapData = data => map(data, ({ id, name, monthData }) => ({\r\n  label: name,\r\n  id,\r\n  monthData: monthData.map(m => ({\r\n    ...m,\r\n    types: m.types.reduce((t, td) => {\r\n      t[td.id] = td\r\n      return t\r\n    },{})\r\n  }))\r\n}))\r\n","import React, { PureComponent, createElement } from 'react';\r\nimport { compose } from 'redux'\r\nimport reduce from 'lodash/reduce'\r\nimport forEach from 'lodash/forEach'\r\nimport groupBy from 'lodash/groupBy'\r\nimport range from 'lodash/range'\r\n\r\nimport Box from '../../../components/Box'\r\nimport Flex from '../../../components/Flex'\r\nimport Toggler from '../../../components/Toggler'\r\n\r\nimport withDataState from '../../../services/api/withDataState'\r\n\r\nimport IssuedChart from './IssuedChart'\r\nimport ReceivedChart from './ReceivedChart'\r\n\r\nimport { mapData, getMonthData } from '../dataHandler'\r\nimport theme from '../../../components/ThemeProvider/theme';\r\n\r\nconst parseData = (d, initial) => {\r\n  const parsed = reduce(d, (va, { month, ...vv }) => {\r\n    Object.keys(vv).forEach(k => {\r\n      va[k] = va[k] || 0\r\n      va[k] += vv[k]\r\n    })\r\n    return va\r\n  }, initial)\r\n  parsed.receivedRate = parsed.issuedDollar ? parsed.receivedDollar / parsed.issuedDollar : 0\r\n  return parsed\r\n}\r\n\r\nconst colors = [\r\n  theme.colors.orange3,\r\n  theme.colors.orange5,\r\n  theme.colors.orange4,\r\n];\r\n\r\nconst path = `data/bureaus${typeof window !== 'undefined' && window.__SHOW_BUREAU_ID !== '00000000' ? `/${window.__SHOW_BUREAU_ID}` : ''}`\r\n\r\nclass YearByYear extends PureComponent {\r\n  static getDerivedStateFromProps(nextProps) {\r\n    const { year } = nextProps\r\n    return {\r\n      data: {\r\n        [year]: nextProps[`${path}?year=${year}`],\r\n        [year - 1]: nextProps[`${path}?year=${year - 1}`],\r\n        [year - 2]: nextProps[`${path}?year=${year - 2}`],\r\n      }\r\n    }\r\n  }\r\n\r\n  state = {\r\n    chartType: 0,\r\n    timeType: 0,\r\n  }\r\n\r\n  handleToggle = key => value => this.setState({ [key]: value })\r\n\r\n  render() {\r\n    const { data, chartType, timeType } = this.state\r\n    const { year, activeType, lockId } = this.props\r\n    const formattedData = reduce(data, (fd, d, year) => {\r\n      let md = getMonthData(mapData(d.data), activeType, lockId)\r\n      if (timeType) {\r\n        md = groupBy(md, (dd) => Math.floor((dd.month - 1) / 3))\r\n        forEach(md, (v, i) => {\r\n          fd.push(parseData(v, {\r\n            year,\r\n            quarter: +i + 1,\r\n            index: (year - this.props.year + 2) * 4 + i * 1,\r\n          }))\r\n        })\r\n      } else {\r\n        fd.push(parseData(md, {\r\n          year,\r\n          index: year - this.props.year + 2,\r\n        }))\r\n      }\r\n      return fd\r\n    }, [])\r\n    const dataLength = formattedData.length\r\n    return (\r\n      <Box position=\"relative\" mx=\"4em\">\r\n        {createElement(chartType ? ReceivedChart : IssuedChart, {\r\n          key: `t-${timeType}`,\r\n          data: formattedData,\r\n          ratio: 0.66,\r\n          getFill: i => {\r\n            let c = i\r\n            if (timeType) {\r\n              c = Math.floor(i / 4)\r\n            }\r\n            return colors[c]\r\n          },\r\n          xTickFormat: d => {\r\n            if (timeType) {\r\n              const y = Math.floor(d / 4)\r\n              return year - (dataLength / 4 - y) + 1 + '第' + (d % 4 + 1) + '季'\r\n            }\r\n            return year - (dataLength - d) + 1\r\n          },\r\n        })}\r\n        <Flex position=\"absolute\" width={1} top=\"0\">\r\n          <Box>\r\n            <Toggler\r\n              color=\"darkBlue\"\r\n              bg=\"rgba(0,0,0,0.2)\"\r\n              options={['案件數', '收繳率']}\r\n              activeIndex={chartType}\r\n              onToggle={this.handleToggle('chartType')}\r\n            />\r\n          </Box>\r\n          <Box ml=\"1em\">\r\n            <Toggler\r\n              color=\"darkBlue\"\r\n              bg=\"rgba(0,0,0,0.2)\"\r\n              options={['年', '季']}\r\n              activeIndex={timeType}\r\n              onToggle={this.handleToggle('timeType')}\r\n            />\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (props) => createElement(compose(\r\n  ...range(3).map(i => withDataState(`${path}?year=${props.year - i}`))\r\n)(YearByYear), props);\r\n","import React, { createElement } from 'react';\r\nimport get from 'lodash/get'\r\n// import format from 'date-fns/format'\r\n\r\nimport Text from '../../components/Text'\r\nimport withDataState from '../../services/api/withDataState'\r\n\r\nconst LastUpdated = ({ lastUpdated }) => {\r\n  return (\r\n    <Text>資料更新日期：{get(lastUpdated, 'date')}</Text>\r\n  );\r\n}\r\n\r\nexport default props => createElement(withDataState('lastUpdated')(LastUpdated), props);\r\n","import React, { PureComponent, createElement } from 'react'\r\nimport { compose } from 'redux'\r\nimport last from 'lodash/last'\r\n\r\nimport Container from '../../components/Container'\r\nimport Box from '../../components/Box'\r\nimport Flex from '../../components/Flex'\r\nimport Text from '../../components/Text'\r\nimport Button from '../../components/Button'\r\nimport YearButton from '../../components/YearButton'\r\nimport Toggler from '../../components/Toggler'\r\nimport Dropdown from '../../components/Dropdown';\r\nimport ModalButton from '../../components/ModalButton';\r\nimport PatternBg from '../../components/PatternBg';\r\n\r\nimport theme, { mobileOrDesktop } from '../../components/ThemeProvider/theme';\r\n\r\nimport withBureauData from '../../services/api/withBureauData'\r\nimport withDataState from '../../services/api/withDataState'\r\n\r\nimport Layout from '../Layout';\r\nimport BubbleLine from './BubbleLine'\r\nimport TypeDonut from './TypeDonut'\r\nimport PercentBars from './PercentBars'\r\nimport LawTops from './LawTops'\r\nimport YearChart from './YearChart'\r\n// import AvgDays from './AvgDays'\r\nimport YearByYear from './YearByYear'\r\nimport LastUpdated from './LastUpdated'\r\n\r\nimport {\r\n  getBureauTotal,\r\n  getMonthData,\r\n  getTypes,\r\n  mapData,\r\n} from './dataHandler'\r\n\r\nconst isTopBureau = window.__SHOW_BUREAU_ID === '00000000'\r\nconst singleBureau = isTopBureau && window.__BUREAU_ID !== '00000000'\r\n\r\nclass IndexPage extends PureComponent {\r\n  static getDerivedStateFromProps(nexProps) {\r\n    const { typeList, data } = nexProps\r\n    const mappedData = mapData(data)\r\n    const typeLegends = typeList.map(({ name, id }, i) => ({\r\n      id,\r\n      label: name,\r\n      color: theme.colors.spectrum[theme.colors.spectrum.length - 1 - i],\r\n    }))\r\n    const typeOptions = typeList.map(({ name, id }) => ({ label: name, value: id }))\r\n    return { mappedData, typeLegends, typeOptions }\r\n  }\r\n\r\n  state = {\r\n    sortBy: 'receiveRate',\r\n    sortOrder: 'asc',\r\n    chartIndex: 0,\r\n    publicOnly: 0,\r\n    typeLegends: [],\r\n    year: last(this.props.yearsList),\r\n    lockId: singleBureau ? window.__BUREAU_ID : null,\r\n    typeOptions: [],\r\n  }\r\n\r\n  handleTypeFilter = activeType => this.setState({ activeType })\r\n\r\n  handleChartToggle = chartIndex => this.setState({ chartIndex })\r\n\r\n  handleYearChange = year => {\r\n    const { updateParams } = this.props\r\n    updateParams({ year })\r\n    this.setState({ year })\r\n  }\r\n\r\n  setPublicOnly = publicOnly => this.setState({ publicOnly })\r\n\r\n  setLock = lockId => this.setState({ lockId })\r\n\r\n  handleReset = () => this.setState({\r\n    lockId: singleBureau ? window.__BUREAU_ID : null,\r\n    chartIndex: 0,\r\n    publicOnly: 0,\r\n    activeType: null,\r\n  })\r\n\r\n  render() {\r\n    const { data, yearsList: years } = this.props\r\n    const {\r\n      sortBy,\r\n      sortOrder,\r\n      chartIndex,\r\n      activeType,\r\n      mappedData,\r\n      year,\r\n      publicOnly,\r\n      typeLegends,\r\n      lockId,\r\n      typeOptions,\r\n    } = this.state\r\n\r\n    const bureauTotal = getBureauTotal(mappedData, activeType)\r\n    const monthData = getMonthData(mappedData, activeType, lockId)\r\n    const types = getTypes(data, lockId)\r\n    return (\r\n      <Layout>\r\n        <Box backgroundImage=\"linear-gradient(#fff 80%, #e0e0e4 100%)\">\r\n          <PatternBg pt=\"2em\" pb=\"3em\">\r\n            <Container>\r\n              <Flex alignItems=\"center\">\r\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">案件類別</Text>\r\n                <Box width=\"12em\" py=\"1em\">\r\n                  <Dropdown\r\n                    placeholder=\"全部\"\r\n                    value={activeType}\r\n                    options={typeOptions}\r\n                    onChange={({ value }) => this.handleTypeFilter(value)}\r\n                  />\r\n                </Box>\r\n                <Box flex=\"1\" />\r\n                <LastUpdated />\r\n              </Flex>\r\n              <Flex alignItems=\"center\">\r\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">各{isTopBureau ? '局處' : '科室'}案件量分析</Text>\r\n                <YearButton\r\n                  currentYear={year}\r\n                  years={years}\r\n                  onChange={this.handleYearChange}\r\n                />\r\n              </Flex>\r\n              <Box textAlign=\"right\" my=\"1em\">\r\n                {!isTopBureau && <Button onClick={() => window.history.back()} mr=\"1em\">返回全局處</Button>}\r\n                <Button onClick={this.handleReset}>切回預設</Button>\r\n              </Box>\r\n              <BubbleLine\r\n                ratio={1 / 4}\r\n                data={bureauTotal}\r\n                sortBy={sortBy}\r\n                sortOrder={sortOrder}\r\n                lockId={lockId}\r\n                onLock={this.setLock}\r\n              />\r\n            </Container>\r\n          </PatternBg>\r\n        </Box>\r\n        <Box\r\n          py={mobileOrDesktop(0, '2em')}\r\n          gradient=\"darkBlue\"\r\n        >\r\n          <Container>\r\n            <Flex borderBottom=\"1px solid\">\r\n              <Box pl=\"1em\" pr=\"2em\" pb=\"1em\" width={2 / 5} borderRight=\"1px solid\">\r\n                <Box position=\"relative\">\r\n                  {createElement(chartIndex ? PercentBars : TypeDonut , Object.assign({\r\n                    ratio: 0.66,\r\n                    data: types,\r\n                    legends: typeLegends,\r\n                    onLegendClick: this.handleTypeFilter,\r\n                    activeLegend: activeType,\r\n                  }, chartIndex ? {} : {\r\n                    valueGetter: d => d.issued,\r\n                    outerCircle: true,\r\n                    showLegend: true,\r\n                  }))}\r\n                  <Box position=\"absolute\" top=\"0\" left=\"0\">\r\n                    <Toggler activeIndex={chartIndex} onToggle={this.handleChartToggle} options={['案件數', '收繳率']} />\r\n                  </Box>\r\n                  <Box position=\"absolute\" right=\"0\" bottom=\"0\">\r\n                    {!chartIndex && (\r\n                      <ModalButton\r\n                        is={Button.lightBg}\r\n                        label=\"查看更多\"\r\n                        title=\"案件分類分析\"\r\n                      >\r\n                        <Box px=\"10%\">\r\n                          <TypeDonut\r\n                            ratio={0.7}\r\n                            valueGetter={d => d.issued}\r\n                            data={types}\r\n                            showPercentage\r\n                            legends={typeLegends}\r\n                            showLabel\r\n                          />\r\n                        </Box>\r\n                      </ModalButton>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box pl=\"2em\" pr=\"1em\" width={3 / 5}>\r\n                <Flex pt=\"0.5em\" pb=\"1.25em\" alignItems=\"center\" borderBottom=\"1px solid\">\r\n                  <Text fontSize=\"1.5em\"><Text.inline letterSpacing=\"0.15em\">違反法條</Text.inline> TOP 5</Text>\r\n                  <ModalButton\r\n                    is={Button.lightBg}\r\n                    label=\"查看更多\"\r\n                    title=\"違反法條TOP10\"\r\n                    mx=\"2em\"\r\n                  >\r\n                    <Flex alignItems=\"center\">\r\n                      <Box mx=\"2em\">\r\n                        <Box my=\"1em\">\r\n                          <Button active={publicOnly === 0} onClick={() => this.setPublicOnly(0)}>所有法條分析</Button>\r\n                        </Box>\r\n                        <Box my=\"1em\">\r\n                          <Button active={publicOnly === true} onClick={() => this.setPublicOnly(true)}>公安法條分析</Button>\r\n                        </Box>\r\n                      </Box>\r\n                      <Box flex=\"1\" px=\"2em\">\r\n                        <LawTops key={10} top={10} year={year} color=\"text\" ratio={0.77} publicOnly={publicOnly} lockId={lockId} />\r\n                      </Box>\r\n                    </Flex>\r\n                  </ModalButton>\r\n                  {/* <Box flex=\"1\" /> */}\r\n                  {/* <AvgDays year={year} /> */}\r\n                </Flex>\r\n                <LawTops key={5} year={year} top={5} hasLine color=\"white\" ratio={0.35} lockId={lockId} />\r\n              </Box>\r\n            </Flex>\r\n            <Flex px=\"5%\" py=\"2em\" alignItems=\"center\">\r\n              <Box px=\"2em\">\r\n                <YearButton\r\n                  justifyContent=\"center\"\r\n                  darkBg\r\n                  currentYear={year}\r\n                  years={years}\r\n                  onChange={this.handleYearChange}\r\n                />\r\n                <Box fontSize=\"1.5em\" letterSpacing=\"0.15em\" my=\"1em\" borderBottom=\"1px solid\" pb=\"0.5rem\">月案件量分析</Box>\r\n                <Box textAlign=\"center\">\r\n                  <ModalButton\r\n                    is={Button.lightBg}\r\n                    label=\"看歷年分析\"\r\n                    title={`${year - 2}-${year}案件量分析`}\r\n                  >\r\n                    <YearByYear year={year} activeType={activeType} lockId={lockId} />\r\n                  </ModalButton>\r\n                </Box>\r\n              </Box>\r\n              <Box flex=\"1\">\r\n                <YearChart ratio={1 / 5} data={monthData} />\r\n              </Box>\r\n            </Flex>\r\n          </Container>\r\n        </Box>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  withDataState('yearsList'),\r\n  withDataState('typeList'),\r\n  withBureauData,\r\n)(IndexPage)\r\n","import React from 'react';\r\n\r\nimport HomePage from './containers/HomePage'\r\n\r\nfunction App() {\r\n  return <HomePage />\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { fontSize } from 'styled-system'\r\n\r\nimport theme from './theme';\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Comfortaa:400,700&display=swap');\r\n  body {\r\n    font-family: ${theme.font};\r\n    ${fontSize};\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    color: ${theme.colors.text};\r\n  }\r\n`;\r\n","import React, { Fragment } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport 'sanitize.css';\r\nimport { SizeMe } from 'react-sizeme'\r\n\r\nimport FontSizeContext from './FontSizeContext'\r\nimport GlobalStyles from './global-styles';\r\n\r\nimport theme from './theme';\r\n\r\nexport default ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <SizeMe>\r\n      {({ size: { width } }) => {\r\n        const fontSize = Math.round(Math.max(width, 800) / 94)\r\n        return (\r\n          <div>\r\n            <FontSizeContext.Provider value={{ em: fontSize }}>\r\n              <Fragment>\r\n                <GlobalStyles fontSize={fontSize} />\r\n                {children}\r\n              </Fragment>\r\n            </FontSizeContext.Provider>\r\n          </div>\r\n        )\r\n      }}\r\n    </SizeMe>\r\n  </ThemeProvider>\r\n);\r\n","/**\r\n * Parses the JSON returned by a network request\r\n *\r\n * @param  {object} response A response from a network request\r\n *\r\n * @return {object}          The parsed JSON from the request\r\n */\r\nfunction parseJSON(response) {\r\n  if (response.status === 204 || response.status === 205) {\r\n    return null;\r\n  }\r\n  return response.json();\r\n}\r\n\r\n/**\r\n * Checks if a network request came back fine, and throws an error if not\r\n *\r\n * @param  {object} response   A response from a network request\r\n *\r\n * @return {object|undefined} Returns either the response, or throws an error\r\n */\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n\r\n  const error = new Error(response.statusText);\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n *\r\n * @return {object}           The response data\r\n */\r\nexport default function request(url, options) {\r\n  return fetch(url, options)\r\n    .then(checkStatus)\r\n    .then(parseJSON);\r\n}\r\n","const BASE_URI = 'https://relab.cc/law-api-test/v2';\n// const BASE_URI = 'https://aes.taichung.gov.tw/GTFK/v2';\n// const BASE_URI = 'http://59.120.75.229/GTFK/v2'\n// const BASE_URI = '/GTFK/v2'\n\n// const BASE = process.env.NODE_ENV === 'production' ? BASE_URI : BASE_URI_LOCAL;\n\nexport const API_BASE = BASE_URI;\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { actionTypes } from 'redux-resource';\r\nimport reduce from 'lodash/reduce'\r\nimport isObject from 'lodash/isObject'\r\n\r\nimport sendRequest from '../../utils/request';\r\n\r\nimport { API_BASE } from './config';\r\nimport { GET_DATA, receivedDataSuccess, receivedDataError } from './reducer';\r\n\r\nfunction* handleRequest(target, onSuccess, onError) {\r\n  try {\r\n    const res = yield call(sendRequest, target);\r\n    yield put(onSuccess(res));\r\n  } catch (error) {\r\n    console.error(error)\r\n    yield put(onError(error));\r\n  }\r\n}\r\n\r\nfunction* handleManualRead({ payload: { key, params } }) {\r\n  const qs = isObject(params) ? reduce(params, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\r\n  const resourceBase = `${API_BASE}/${key}${qs}`;\r\n  yield call(\r\n    handleRequest,\r\n    resourceBase,\r\n    (data) => receivedDataSuccess({\r\n      key,\r\n      data,\r\n    }),\r\n    // onError\r\n    () => receivedDataError({ key }),\r\n  );\r\n}\r\n\r\nfunction* handleRead({ resourceType, resources, requestKey, requestParams, transformer }) {\r\n  const qs = isObject(requestParams) ? reduce(requestParams, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\r\n  const resourceBase = `${API_BASE}/${resourceType}${qs}`;\r\n  if (resources) {\r\n    yield all(\r\n      resources.map(id =>\r\n        call(\r\n          handleRequest,\r\n          // target\r\n          `${resourceBase}/${id}`,\r\n          // onSuccess\r\n          data => ({\r\n            type: actionTypes.READ_RESOURCES_SUCCEEDED,\r\n            resourceType,\r\n            resources: [transformer ? transformer(data) : data],\r\n          }),\r\n          // onError\r\n          () => ({\r\n            type: actionTypes.READ_RESOURCES_FAILED,\r\n            resourceType,\r\n            resources: [id],\r\n          }),\r\n        ),\r\n      ),\r\n    );\r\n  } else {\r\n    yield call(\r\n      handleRequest,\r\n      resourceBase,\r\n      ({ data }) => ({\r\n        type: actionTypes.READ_RESOURCES_SUCCEEDED,\r\n        resourceType,\r\n        resources: transformer ? data.map(transformer) : data,\r\n        requestKey,\r\n      }),\r\n      // onError\r\n      () => ({\r\n        type: actionTypes.READ_RESOURCES_FAILED,\r\n        resourceType,\r\n        requestKey,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nexport default function* apiSagas() {\r\n  yield all([\r\n    takeEvery(actionTypes.READ_RESOURCES_PENDING, handleRead),\r\n    takeEvery(GET_DATA, handleManualRead),\r\n  ]);\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { calculateResponsiveState } from 'redux-responsive'\r\n\r\nimport ThemeProvider from './components/ThemeProvider';\r\nimport creatStore from './stores/createStore';\r\n\r\nconst store = creatStore();\r\n\r\n// window.__DEPARTMENT_ID = '1631100000000'\r\n// window.__BUREAU_ID = '13'\r\nwindow.__BUREAU_ID = window.__BUREAU_ID || '00000000'\r\nwindow.__SHOW_BUREAU_ID = '00000000'\r\nif (window.location.search) {\r\n  const res = /showBureau=([^&]+)/g.exec(window.location.search)\r\n  if (res && res[1]) {\r\n    const id = decodeURIComponent(res[1])\r\n    window.__SHOW_BUREAU_ID = id\r\n    window.__BUREAU_ID = id\r\n  }\r\n}\r\n\r\nclass InitialDispatch extends Component {\r\n  componentDidMount() {\r\n    if (typeof window !== 'undefined') {\r\n      store.dispatch(calculateResponsiveState(window))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ({ children }) => (\r\n  <Provider store={store}>\r\n    <InitialDispatch>\r\n      <ThemeProvider>{children}</ThemeProvider>\r\n    </InitialDispatch>\r\n  </Provider>\r\n)\r\n","/**\r\n * Create the store with dynamic reducers\r\n */\r\n\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { fromJS } from 'immutable';\r\nimport { createResponsiveStoreEnhancer } from 'redux-responsive';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport apiSagas from '../services/api/sagas';\r\nimport createReducer from './reducers';\r\n\r\nexport default function configureStore(initialState = {}) {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n  const enhancers = [\r\n    applyMiddleware(...middlewares),\r\n    createResponsiveStoreEnhancer({ calculateInitialState: false }),\r\n  ];\r\n\r\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n  /* eslint-disable no-underscore-dangle */\r\n  const composeEnhancers =\r\n    (process.env.NODE_ENV !== 'production' &&\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n  /* eslint-enable */\r\n\r\n  const store = createStore(\r\n    createReducer(),\r\n    fromJS(initialState),\r\n    composeEnhancers(...enhancers)\r\n  );\r\n\r\n  // Extensions\r\n\r\n  store.runSaga = sagaMiddleware.run;\r\n  sagaMiddleware.run(apiSagas);\r\n  store.injectedReducers = {}; // Reducer registry\r\n\r\n  return store;\r\n}\r\n","import 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport WithProvider from './with-provider'\r\n\r\nif (document.getElementById('root')) {\r\n  const App = require('./App').default;\r\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('root'));\r\n}\r\n\r\nif (document.getElementById('summary')) {\r\n  const App = require('./Summary').default;\r\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('summary'));\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport {\r\n  fontSize,\r\n  fontWeight,\r\n  lineHeight,\r\n  space,\r\n  color,\r\n  letterSpacing,\r\n  display,\r\n} from 'styled-system';\r\nimport tag from 'clean-tag';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport { customColor } from './utils/getColor';\r\n\r\nconst linkStyle = css`\r\n  ${fontSize}\r\n  ${space}\r\n  ${color}\r\n  ${fontWeight}\r\n  ${lineHeight}\r\n  ${letterSpacing}\r\n  ${display}\r\n  text-decoration: none;\r\n  ${({ disabled }) => disabled && `\r\n    pointer-events: none;\r\n  `}\r\n  &:hover {\r\n    ${customColor('hoverColor')};\r\n  }\r\n`;\r\n\r\nconst NomalLink = styled(tag)`\r\n  ${linkStyle}\r\n`;\r\n\r\n\r\nconst Link = ({ blacklist, ...props }) => {\r\n  return (\r\n    <NomalLink\r\n      is=\"a\"\r\n      target=\"_blank\"\r\n      blacklist={blacklist}\r\n      color=\"text\"\r\n      { ...props }\r\n    />\r\n  );\r\n};\r\n\r\nLink.displayName = 'Link';\r\n\r\nLink.defaultProps = {\r\n  blacklist,\r\n};\r\n\r\nexport default Link;\r\n","import React from 'react';\r\n\r\nimport Box from '../Box'\r\nimport line from './line.svg'\r\n\r\nconst PatternBg = ({ children, ...props }) => (\r\n  <Box\r\n    {...props}\r\n    backgroundImage={`url('${line}')`}\r\n  >\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nPatternBg.defaultProps = {\r\n  backgroundSize: '20px',\r\n  backgroundRepeat: 'repeat no-repeat',\r\n  backgroundPosition: 'center',\r\n}\r\n\r\nexport default PatternBg;\r\n","import React, { useState, Fragment, PureComponent } from 'react'\r\n\r\nimport Container from '../../components/Container'\r\nimport Box from '../../components/Box'\r\nimport Link from '../../components/Link'\r\nimport Flex from '../../components/Flex'\r\nimport Text from '../../components/Text'\r\nimport PatternBg from '../../components/PatternBg';\r\nimport LineBg from '../../components/LineBg';\r\nimport Dropdown from '../../components/Dropdown';\r\n\r\nimport withDataState from '../../services/api/withDataState'\r\n\r\nimport Layout from '../Layout';\r\n\r\nconst Module = ({ color, value, label, unit, datas, ...props}) => (\r\n  <Flex flexWrap=\"wrap\" px=\"4em\" {...props}>\r\n    {datas.map(({ value, label, unit, url }, index) => (\r\n      <Box pr=\"1em\" width={1 / 3} key={index}>\r\n        <Box is={url && (p => <Link href={url} display=\"block\" {...p} />)} bg=\"#f4f4f4\" my=\"1em\" borderRadius=\"5em\" py=\"1.5em\">\r\n          <Flex alignItems=\"center\" px=\"2em\">\r\n            <Box width=\"7.5em\" textAlign=\"right\" borderRight=\"2px solid\" pr=\"1em\" py=\"0.5em\">\r\n              <Text.inline fontSize=\"2em\" color={color}>{value}</Text.inline>\r\n              <Text.inline pl=\"0.25em\">{unit}</Text.inline>\r\n            </Box>\r\n            <Box flex=\"1\" pl=\"1em\" py=\"0.5em\">\r\n              {label}\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    ))}\r\n  </Flex>\r\n)\r\n\r\nclass SummaryPage extends PureComponent {\r\n  componentDidUpdate(prevProps) {\r\n    const { type, resync } = this.props\r\n\r\n    if (type !== prevProps.type) {\r\n      resync(type ? { type } : {})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { summary } = this.props\r\n    const primarys = summary.primary;\r\n    const secondarys = summary.secondary\r\n    return (\r\n      <Fragment>\r\n        <Module datas={primarys} color=\"textYellow\" my=\"2em\" />\r\n        <LineBg>\r\n          <Box height=\"2em\" />\r\n        </LineBg>\r\n        <Module datas={secondarys} color=\"textBlue\" />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst TypeSummary = withDataState(\r\n  'summary',\r\n  window.__DEPARTMENT_ID && { departmentId: window.__DEPARTMENT_ID }\r\n)(SummaryPage)\r\n\r\nconst TypeWrapper = ({ typeList }) => {\r\n  const [type, handleTypeFilter] = useState('')\r\n\r\n  return (\r\n    <Layout>\r\n      <PatternBg py=\"2em\">\r\n        <Container>\r\n          <Flex py=\"1em\" alignItems=\"center\">\r\n            <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">案件類別</Text>\r\n            <Box width=\"12em\">\r\n              <Dropdown\r\n                value={type}\r\n                options={typeList.map(({ name, id }) => ({ value: id, label: name }))}\r\n                onChange={({ value }) => handleTypeFilter(value)}\r\n              />\r\n            </Box>\r\n          </Flex>\r\n          <TypeSummary type={type} />\r\n        </Container>\r\n      </PatternBg>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default withDataState('typeList')(TypeWrapper)\r\n","import React from 'react';\r\n\r\nimport SummaryPage from './containers/SummaryPage'\r\n\r\nfunction App() {\r\n  return <SummaryPage />\r\n}\r\n\r\nexport default App;\r\n","import React, { PureComponent, createElement } from 'react';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport size from 'lodash/size';\r\nimport md5 from 'blueimp-md5'\r\n\r\nimport Text from '../../components/Text';\r\nimport { getData } from './reducer'\r\n\r\nimport { STATUS_LOADED, STATUS_LOADING, STATUS_ERROR } from './constants'\r\n\r\nexport default (key, params) => {\r\n  const SIG = `_LAW.state.${md5(key + params ? JSON.stringify(params) : '')}`\r\n\r\n  return SubComp => {\r\n    if (!key) return () => null;\r\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\r\n\r\n    class WithData extends PureComponent {\r\n      state = {}\r\n\r\n      componentDidMount() {\r\n        setTimeout(this.request);\r\n      }\r\n\r\n      request = (skip, newParams) => {\r\n        if (!this.checkIsPending()) {\r\n          if (skip || !this.checkIsDone()) {\r\n            this.props.getData({ key, params: newParams || params })\r\n          }\r\n        }\r\n      };\r\n\r\n      checkIsPending = () => this.props.status === STATUS_LOADING\r\n\r\n      checkIsDone = () => this.props.status === STATUS_LOADED || this.props.status === STATUS_ERROR\r\n\r\n      render() {\r\n        const { data, status, ...props } = this.props\r\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\r\n        if (size(data)) {\r\n          content = createElement(SubComp, {\r\n            ...props,\r\n            [key]: data,\r\n            resync: (newParams) => this.request(true, newParams),\r\n            // isLoading: this.checkIsPending(),\r\n          });\r\n        }\r\n        return content\r\n      }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n      data: state.getIn(['api', key, 'data']),\r\n      status: state.getIn(['api', key, 'status']),\r\n    })\r\n\r\n    const mapDispatchToProps = dispatch => bindActionCreators({\r\n      getData,\r\n    }, dispatch)\r\n    return connect(mapStateToProps, mapDispatchToProps)(WithData)\r\n  };\r\n}\r\n","import { fromJS } from 'immutable';\r\nimport { createAction, handleActions } from 'redux-actions'\r\n\r\nimport {\r\n  STATUS_ERROR,\r\n  STATUS_LOADED,\r\n  STATUS_LOADING,\r\n} from './constants'\r\n\r\nexport const GET_DATA = 'API/GET_DATA'\r\n\r\nexport const getData = createAction(GET_DATA)\r\nexport const receivedDataSuccess = createAction('API/RECEIVED_DATA_SUCCESS')\r\nexport const receivedDataError = createAction('API/RECEIVED_DATA_ERROR')\r\n\r\nconst initialState = fromJS({})\r\n\r\nconst reducer = handleActions({\r\n  [getData]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_LOADING),\r\n  [receivedDataSuccess]: (state, { payload: { key, data } }) => state\r\n    .setIn([key, 'status'], STATUS_LOADED)\r\n    .setIn([key, 'data'], data),\r\n  [receivedDataError]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_ERROR),\r\n}, initialState)\r\n\r\nexport default reducer\r\n","export const STATUS_LOADING = 'STATUS_LOADING';\r\nexport const STATUS_LOADED = 'STATUS_LOADED';\r\nexport const STATUS_ERROR = 'STATUS_ERROR';\r\n","import merge from 'lodash/merge';\r\nimport { style } from 'styled-system';\r\n\r\nconst getConfig = (key, options) => merge({\r\n  prop: key,\r\n  cssProperty: key,\r\n}, options);\r\n\r\nconst injectProps = (key, options) => style(getConfig(key, options));\r\n\r\nexport default injectProps;\r\n"],"sourceRoot":""}