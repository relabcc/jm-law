{"version":3,"sources":["components/utils/getColor.js","components/Container.js","stores/reducers.js","components/PatternBg/index.js","containers/Layout/index.js","components/PatternBg/dot.svg","components/LineBg/line.svg","components/Text.js","components/Box.js","components/ThemeProvider/FontSizeContext.js","components/Flex.js","components/ThemeProvider/theme.js","components/Button.js","components/YearButton.js","components/Toggler.js","components/Dropdown.js","hoc/withResponsive.js","components/Circle.js","components/Modal.js","components/ModalButton.js","utils/checkStore.js","utils/reducerInjectors.js","utils/injectReducer.js","services/api/withData.js","services/api/withBureauData.js","components/Charts/ChartBase.js","components/Charts/LineBreakText.js","containers/HomePage/InfoSection.js","containers/HomePage/BubbleLine.js","components/Charts/PathInterpolation.js","containers/HomePage/TypeDonut.js","containers/HomePage/PercentBars.js","services/api/withLawData.js","containers/HomePage/LawTops.js","components/Charts/TweenShape.js","containers/HomePage/YearChart.js","containers/HomePage/YearByYear/IssuedChart.js","containers/HomePage/YearByYear/ReceivedChart.js","containers/HomePage/dataHandler.js","containers/HomePage/YearByYear/index.js","containers/HomePage/LastUpdated.js","containers/HomePage/index.js","App.js","components/ThemeProvider/global-styles.js","components/ThemeProvider/index.js","utils/request.js","services/api/config.js","services/api/sagas.js","with-provider.js","stores/createStore.js","index.js","components/Link.js","components/LineBg/index.js","containers/SummaryPage/index.js","Summary.js","components/utils/blacklist.js","services/api/withDataState.js","services/api/reducer.js","services/api/constants.js","components/utils/injectProps.js"],"names":["customColor","prop","cssProperty","style","key","Container","props","defaultProps","mx","px","width","displayName","names","createReducer","injectedReducers","combineReducers","browser","createResponsiveStateReducer","fromPairs","zip","breakpoints","map","bp","parseInt","api","PatternBg","children","backgroundImage","dot","backgroundSize","backgroundRepeat","backgroundPosition","Layout","height","minWidth","module","exports","Text","styled","tag","typography","display","space","color","position","injectProps","is","fontSize","blacklist","inline","bold","fontWeight","thin","range","forEach","h","Box","layout","zIndex","border","flex","borderRadius","opacity","variant","scale","onClick","forwardRef","ref","verticalAlign","createContext","Flex","flexbox","emToPx","em","containerWidth","mobileOrDesktop","mobile","desktop","generateFade","r","g","b","reduce","fade","merge","join","spectrum","orange","darkOrange","lightOrange","darkRed","oranges","o","c","i","primary","colors","white","black","gray","dropdownBg","textYellow","lightGray","darkGray","textBlue","darkBlue","darkerBlue","text","primaryHover","font","headerHeight","zOrder","gradients","none","active","css","buttonStyle","borderColor","themeGet","disabled","ButtonBase","InButtonSpan","Button","leftIcon","rightIcon","iconSpacing","mr","ml","bg","gradient","hoverColor","hoverBg","hoverBgImg","hoverBorder","py","lightBg","theme","outline","transparent","YearButton","state","handleNextYear","newYear","activeYear","setState","onChange","years","handleLastYear","this","currentYear","darkBg","alignItems","createElement","size","length","prevState","findIndex","y","PureComponent","Toggler","poses","options","handleBound","bounds","every","Boolean","activeIndex","onToggle","FontSizeContext","Consumer","left","top","bottom","transition","transform","label","onResize","measureRef","StyledDropdown","Dropdown","CustomDropdown","isMobile","value","onBlur","placeholder","name","concat","withResponsive","WrappedComp","connect","get","lessThan","md","Circle","pt","right","lineHeight","defaultStyles","overlay","backgroundColor","content","marginRight","padding","overflow","Modal","setAppElement","customStyles","title","justifyContent","pb","borderBottom","letterSpacing","p","onRequestClose","m","ModalButton","openModal","open","closeModal","isOpen","checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","isObject","invariant","conformsTo","injectReducerFactory","isValid","reducer","isString","isEmpty","Reflect","has","WrappedComponent","ReducerInjector","injectors","context","injectReducer","React","Component","contextType","ReactReduxContext","hoistNonReactStatics","params","transformer","ids","isArray","isNumber","listMode","resources","SIG","md5","JSON","stringify","SubComp","window","WithData","request","skip","requestParams","checkIsPending","checkIsDone","type","actionTypes","READ_RESOURCES_PENDING","resourceType","undefined","requestKey","setTimeout","resync","updateParams","checkStatus","status","requestStatuses","PENDING","SUCCEEDED","FAILED","data","textAlign","my","withReducer","resourceReducer","comp","compose","keys","ChartBase","dimensions","handleResize","debounce","ratio","backwardAutoLineBreak","str","maxLength","fillFront","strArr","Array","from","reverse","lines","st","substr","LineBreakText","x","lineBefore","verticalCenter","maxLines","perLine","lineCount","yPos","texts","w","yStart","Math","min","yEnd","max","fill","num","format","InfoSection","labelStart","onWidthChange","prevProps","main","sub","xEnd","mainValueStart","subValueStart","mainYStart","subYStart","x1","x2","y1","y2","stroke","strokeWidth","unit","textAnchor","mainLabelStart","toString","subLabelStart","newLabelStart","f","emPercent","n","isNaN","Infinity","isTopBureau","__SHOW_BUREAU_ID","singleBureau","__BUREAU_ID","BubbleLine","activeId","wrapper","createRef","handleTooltip","event","xScale","localPoint","d","round","invert","id","handleClick","lockId","onLock","handleInfoWidthChange","newStart","sortBy","sortOrder","namedData","sortedData","loSortBy","rLabelHeight","rMax","leftLabelWidth","xStart","lableY","rateY","executedRateY","scaleLinear","domain","valueMax","issued","rScale","scalePower","exponent","to","vertical","orange6","orange3","orange4","fromOffset","orange5","toOpacity","rx","strokeLinecap","start","update","timing","duration","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","keyAccessor","cx","otherOpacity","centerR","enter","centerActive","leave","nodes","cy","pointerEvents","mixBlendMode","receiveRate","executedRate","HoverSensor","isHover","boxHeight","boxWidth","cursor","location","search","encodeURIComponent","createPortal","points","current","sum","issuedDollar","received","receivedDollar","canceled","nd","PathInterpolation","prevD","thisD","interpolator","interpolate","TypeDonut","outerShapes","handleOuterShape","legends","onLegendClick","activeLegend","valueGetter","outerCircle","showLegend","showLabel","showPercentage","totalVaue","dataLength","labelLength","getColorByName","getIndexByName","spaceForLabels","notEnoughSpace","donutR","legendBottom","legend","pieValue","outerRadius","innerRadius","padAngle","pieSort","a","pie","arcs","arc","path","sideOrders","scaleLabelY","sides","groupBy","centroid","index","side","sign","distanceX","abs","distanceY","sideGroups","so","s","filteredS","filter","sd","ss","sorted","sort","slice","otherI","mapValues","scaleBand","centroidX","centroidY","dy","bandwidth","centX","centY","breakX","startAngle","endAngle","floor","cn","l","pd","PercentBars","dataByKey","dk","legendsLength","maxRate","ceil","LawTops","shortid","generate","year","hasLine","publicOnly","isPublic","count","law","substring","clipPath","withData","Object","assign","withLawData","animate","requestAnimationFrame","TWEEN","relative","lArcFlag","sweepFlag","TweenShape","pathRef","updatePath","parsed","SVGPathData","toAbs","commands","tweens","prevParsed","fromValues","pickBy","v","k","toValues","tickShape","tween","Tween","easing","Easing","Quadratic","InOut","onUpdate","handleUpdate","tick","stop","doUpdatePath","encoded","encodeSVGPath","setAttribute","xValue","month","yValue","YearChart","formattedData","receivedRate","yHeight","paddingInner","paddingOuter","percentYScale","valueYMax","valueYScale","barWidth","yScale","numTicksRows","numTicksColumns","columnLineStyle","numTicks","tickStroke","tickLabelProps","dx","tickFormat","dd","xPos","barHeight","dotY","barY","dotX","TooltipBox","yCancealedValue","IssuedChart","showTooltip","step","tooltipData","canceledTop","tooltipLeft","tooltipTop","xTickFormat","hideTooltip","tooltipOpen","updateTooltip","events","getFill","scalePoint","yMax","z","getZeros","dotCanceledY","whiteSpace","mb","withTooltip","ReceivedChart","getMonthData","activeType","monthData","types","mapData","t","td","parseData","initial","va","vv","YearByYear","chartType","timeType","handleToggle","fd","push","quarter","nextProps","withDataState","LastUpdated","lastUpdated","IndexPage","chartIndex","typeLegends","last","yearsList","handleTypeFilter","handleChartToggle","handleYearChange","setPublicOnly","setLock","handleReset","typeList","mappedData","bureauTotal","allData","all","executed","getBureauTotal","values","allTypes","df","getTypes","history","back","pl","pr","borderRight","nexProps","Date","getFullYear","App","HomePage","createGlobalStyle","Provider","parseJSON","response","json","error","Error","statusText","url","fetch","then","API_BASE","handleRequest","handleManualRead","handleRead","apiSagas","target","onSuccess","onError","call","sendRequest","res","put","console","payload","qs","q","resourceBase","receivedDataSuccess","receivedDataError","READ_RESOURCES_SUCCEEDED","READ_RESOURCES_FAILED","takeEvery","GET_DATA","initialState","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","createResponsiveStoreEnhancer","calculateInitialState","composeEnhancers","createStore","fromJS","runSaga","run","creatStore","exec","decodeURIComponent","InitialDispatch","calculateResponsiveState","ThemeProvider","document","getElementById","require","default","ReactDOM","render","linkStyle","NomalLink","Link","line","Module","datas","flexWrap","href","__DEPARTMENT_ID","departmentId","summary","primarys","secondarys","secondary","LineBg","getData","STATUS_LOADING","STATUS_LOADED","STATUS_ERROR","getIn","bindActionCreators","createAction","handleActions","setIn","getConfig"],"mappings":"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","file":"static/js/main.d414f5cc.chunk.js","sourcesContent":["import { style } from 'styled-system';\r\n\r\nexport const customColor = (prop, cssProperty = 'color') => style ({\r\n  prop,\r\n  cssProperty,\r\n  key: 'colors',\r\n});\r\n","import React from 'react';\n\nimport Box from './Box';\n\nconst Container = (props) => <Box {...props} />;\n\nContainer.defaultProps = {\n  mx: 'auto',\n  px: ['1em', null, '2em'],\n  width: 1,\n};\n\nContainer.displayName = 'Container';\n\nexport default Container;\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux-immutable';\nimport fromPairs from 'lodash/fromPairs';\nimport zip from 'lodash/zip';\nimport { createResponsiveStateReducer } from 'redux-responsive';\n\nimport { breakpoints } from '../components/ThemeProvider/theme';\nimport api from '../services/api/reducer'\n\nconst names = [\n  'xxs',\n  'xs',\n  'sm',\n  'md',\n  'lg',\n  'xl',\n];\n\n/**\n * Creates the main reducer with the dynamically injected ones\n */\nexport default function createReducer(injectedReducers) {\n  return combineReducers({\n    browser: createResponsiveStateReducer(fromPairs(zip(names, breakpoints.map((bp) => parseInt(bp, 10) - 1)))),\n    api,\n    ...injectedReducers,\n  });\n}\n","import React from 'react';\n\nimport Box from '../Box'\nimport dot from './dot.svg'\n\nconst PatternBg = ({ children, ...props }) => (\n  <Box\n    {...props}\n    backgroundImage={`url('${dot}')`}\n  >\n    {children}\n  </Box>\n)\n\nPatternBg.defaultProps = {\n  backgroundSize: '10px',\n  backgroundRepeat: 'repeat repeat',\n  backgroundPosition: 'center',\n}\n\nexport default PatternBg;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Box from '../../components/Box';\n\nconst Layout = ({ children }) => (\n  <Box height=\"100vh\" minWidth=\"800px\">\n    {children}\n  </Box>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/media/dot.0702eca7.svg\";","module.exports = __webpack_public_path__ + \"static/media/line.280d3107.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport range from 'lodash/range';\r\nimport {\r\n  typography,\r\n  space,\r\n  color,\r\n  display,\r\n  position,\r\n} from 'styled-system';\r\nimport tag from 'clean-tag';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport injectProps from './utils/injectProps';\r\n\r\nconst Text = styled(tag)`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  ${typography}\r\n  ${display}\r\n  ${space}\r\n  ${color}\r\n  ${position}\r\n  ${injectProps('textTransform')}\r\n  ${injectProps('whiteSpace')}\r\n`;\r\n\r\nText.defaultProps = {\r\n  is: 'p',\r\n  fontSize: '1em',\r\n  // lineHeight: 1.5,\r\n  blacklist,\r\n};\r\n\r\nText.inline = (props) => <Text is=\"span\" {...props} />;\r\nText.bold = (props) => <Text fontWeight=\"bold\" {...props} />;\r\nText.thin = (props) => <Text fontWeight=\"200\" {...props} />;\r\n\r\nrange(1, 7).forEach((key) => {\r\n  const h = `h${key}`;\r\n  Text[h] = (props) => (\r\n    <Text\r\n      is={h}\r\n      fontSize={`${1 + ((6 - key) * 0.125)}em`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nText.displayName = 'Text';\r\n\r\nexport default Text;\r\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport tag from 'clean-tag';\nimport {\n  space,\n  layout,\n  typography,\n  position,\n  color,\n  borderRadius,\n  zIndex,\n  border,\n  flex,\n  opacity,\n  style,\n  backgroundImage,\n  backgroundSize,\n  backgroundPosition,\n  backgroundRepeat,\n  variant,\n} from 'styled-system';\n\nimport blacklist from './utils/blacklist';\nimport injectProps from './utils/injectProps';\n\nconst Box = styled(tag)`\n  ${space}\n  ${layout}\n  ${position}\n  ${typography}\n  ${color}\n  ${position}\n  ${zIndex}\n  ${border}\n  ${flex}\n  ${borderRadius}\n  ${opacity}\n  ${backgroundImage}\n  ${backgroundSize}\n  ${backgroundRepeat}\n  ${backgroundPosition}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${injectProps('whiteSpace')}\n  ${injectProps('overflow')}\n  ${injectProps('transform')}\n  ${injectProps('transition')}\n  ${style({\n    prop: 'zOrder',\n    cssProperty: 'zIndex',\n    key: 'zOrder',\n  })}\n  ${({ onClick }) => onClick && 'cursor: pointer;'}\n`;\n\nBox.defaultProps = {\n  blacklist,\n};\n\nBox.displayName = 'Box';\n\nBox.inline = forwardRef((props, ref) => <Box is=\"span\" ref={ref} display=\"inline-block\" verticalAlign=\"middle\" {...props} />);\n\nexport default Box;\n","import { createContext } from 'react'\n\nexport default createContext({})\n","import { flexbox } from 'styled-system';\r\nimport styled from 'styled-components';\r\n\r\nimport Box from './Box';\r\nimport blacklist from './utils/blacklist'\r\n\r\nconst Flex = styled(Box)`\r\n  ${flexbox}\r\n`;\r\n\r\nFlex.defaultProps = {\r\n  display: 'flex',\r\n  blacklist,\r\n};\r\n\r\nFlex.displayName = 'Flex';\r\n\r\nexport default Flex;\r\n","import merge from 'lodash/merge';\nimport range from 'lodash/range';\n\nconst emToPx = (em) => `${em * 16}px`;\n\nexport const breakpoints = [22, 36, 48, 62, 90, 120].map(emToPx);\nexport const containerWidth = [22, 36, 46, 58].map(emToPx);\nexport const mobileOrDesktop = (mobile, desktop) => [mobile, null, null, desktop];\n\nconst generateFade = (r, g, b) => range(10, 100, 10)\n  .reduce((fade, opacity) => merge(fade, { [opacity]: `rgba(${[r, g, b, opacity / 100].join()})` }), {});\n\n\nconst font = 'Comfortaa, Arial, \"PingFang TC\", \"HeiTi TC\", \"Microsoft JhengHei\", sans-serif';\n\nconst spectrum = [\n  '#d3b998',\n  '#a57c56',\n  '#e8c52e',\n  '#ffa329',\n  '#f2690c',\n  '#d32e02',\n]\n\nconst darkBlue = '#2d3555'\nconst darkerBlue = '#171835'\nconst textBlue = '#1E213E'\nconst textYellow = '#F2B817'\nconst dropdownBg = '#E7EAF6'\n\nconst white = '#fff';\nconst black = '#000';\nconst text = '#040000';\nconst gray = '#7d7e80'\nconst lightGray = '#c9caca'\nconst darkGray = '#4c4948'\nconst orange = spectrum[3]\nconst darkOrange = spectrum[4]\nconst lightOrange = spectrum[2]\nconst darkRed = spectrum[5]\nconst oranges = spectrum.reduce((o, c, i) => {\n  o[`orange${i + 1}`] = c;\n  return o\n}, {});\nconst primary = darkOrange;\n\nexport default {\n  colors: {\n    white,\n    black,\n    gray,\n    dropdownBg,\n    textYellow,\n    lightGray,\n    darkGray,\n    textBlue,\n    darkBlue,\n    darkerBlue,\n    orange,\n    darkOrange,\n    lightOrange,\n    darkRed,\n    text,\n    primary,\n    primaryHover: darkOrange,\n    spectrum,\n    ...oranges,\n    fade: {\n      white: generateFade(255, 255, 255),\n      black: generateFade(0, 0, 0),\n    },\n  },\n  breakpoints,\n  containerWidth,\n  font,\n  headerHeight: '5em',\n  mobileOrDesktop,\n  zOrder: range(4).map((i) => 10 ** i),\n  gradients: {\n    none: {},\n    darkBlue: {\n      backgroundImage: `linear-gradient(to right, ${darkBlue}, ${darkerBlue})`,\n      color: white,\n    },\n  }\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  border,\n  borderRadius,\n  backgroundImage,\n  position,\n  borderColor,\n  variant,\n} from 'styled-system';\nimport themeGet from '@styled-system/theme-get';\nimport tag from 'clean-tag';\n\nimport Box from './Box';\nimport theme from './ThemeProvider/theme';\n\nimport { customColor } from './utils/getColor';\nimport blacklist from './utils/blacklist';\n\nconst active = css`\n  ${customColor('hoverColor')};\n  ${customColor('hoverBg', 'backgroundColor')};\n  ${customColor('hoverBgImg', 'backgroundImage')};\n  ${customColor('hoverBorder', 'borderColor')};\n`;\n\nexport const buttonStyle = css`\n  padding: 0;\n  border: none;\n  font-family: inherit;\n  line-height: 1;\n  text-decoration: none;\n  ${typography}\n  ${layout}\n  ${position}\n  ${backgroundImage}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${space}\n  ${color}\n  ${border}\n  ${borderColor}\n  ${borderRadius}\n  appearance: none;\n  transition: all ${themeGet('duration', 250)}ms;\n  cursor: pointer;\n  &:hover {\n    ${props => !props.disabled && active}\n    outline: none;\n  }\n  ${props => props.active && !props.disabled && active}\n  ${props =>\n    props.disabled &&\n    `\n    cursor: not-allowed;\n    opacity: 0.5;\n  `}\n`;\n\nconst ButtonBase = styled(tag)`\n  ${buttonStyle};\n`;\n\nconst InButtonSpan = props => <Box is=\"span\" {...props} />;\n\nconst Button = ({\n  leftIcon,\n  rightIcon,\n  iconSpacing,\n  children,\n  verticalAlign,\n  ...props\n}) => (\n  <ButtonBase {...props}>\n    {leftIcon ? (\n      <Box is={leftIcon} mr={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n    <InButtonSpan verticalAlign={verticalAlign}>{children}</InButtonSpan>\n    {rightIcon ? (\n      <Box is={rightIcon} ml={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n  </ButtonBase>\n);\n\nButton.defaultProps = {\n  blacklist,\n  is: 'button',\n  border: '1px solid',\n  borderColor: 'darkBlue',\n  bg: 'darkBlue',\n  gradient: 'darkBlue',\n  color: 'white',\n  hoverColor: 'darkBlue',\n  hoverBg: 'white',\n  hoverBgImg: 'none',\n  hoverBorder: 'darkBlue',\n  px: '1.25em',\n  py: '0.5em',\n  fontWeight: 'bold',\n  iconSpacing: '0.25em',\n  borderRadius: '1.25em',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n};\n\nButton.displayName = 'Button';\n\nButton.lightBg = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"white\"\n    hoverColor=\"white\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    hoverBorder=\"white\"\n    {...props}\n  />\n);\n\nButton.border = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    borderColor=\"darkBlue\"\n    hoverColor=\"white\"\n    hoverBg=\"none\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    {...props}\n  />\n);\n\nButton.outline = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"primary\"\n    bg=\"transparent\"\n    color=\"primary\"\n    hoverColor=\"white\"\n    {...props}\n  />\n);\n\nButton.transparent = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid transparent\"\n    bg=\"transparent\"\n    color=\"text\"\n    hoverBorder=\"primary\"\n    {...props}\n  />\n);\n\nexport default Button;\n","import React, { createElement, PureComponent } from 'react';\nimport { IoMdArrowDropleft,  IoMdArrowDropright} from 'react-icons/io';\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Button from './Button'\n\nclass YearButton extends PureComponent {\n  static defaultProps = {\n    onChange: () => {},\n  }\n\n  static getDerivedStateFromProps({ currentYear, years }, prevState) {\n    return {\n      activeYear: typeof currentYear === 'undefined' ? years.length - 1 : years.findIndex(y => y === currentYear),\n    }\n  }\n\n  state = {}\n\n  handleNextYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear + 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  handleLastYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear - 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  render() {\n    const { currentYear, years, darkBg, onChange, ...props} = this.props\n    const { activeYear } = this.state\n    return (\n      <Flex alignItems=\"center\" {...props}>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: !activeYear,\n          onClick: this.handleLastYear,\n        }, <IoMdArrowDropleft size=\"1.5em\" />)}\n        <Box px=\"1.5em\" py=\"0.375em\" border=\"1px solid\" mx=\"0.5em\" borderRadius=\"0.5em\">\n          {years[activeYear]}\n        </Box>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: activeYear === years.length - 1,\n          onClick: this.handleNextYear,\n        }, <IoMdArrowDropright size=\"1.5em\" />)}\n      </Flex>\n    );\n  }\n}\n\nexport default YearButton;\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\n\nimport FontSizeContext from './ThemeProvider/FontSizeContext'\nimport Box from './Box'\n\nclass Toggler extends PureComponent {\n  state = {\n    poses: this.props.options.map(() => ({}))\n  }\n\n  poses = []\n\n  handleBound = (i, bounds) => {\n    this.poses[i] = bounds\n    if (this.poses.every(Boolean) && this.poses.length === this.props.options.length) {\n      this.setState({ poses: this.poses })\n    }\n  }\n\n  render() {\n    const { options, activeIndex, onToggle, color, bg } = this.props\n    const { poses } = this.state;\n    return (\n      <FontSizeContext.Consumer>\n      {({ em }) => (\n        <Box borderRadius=\"1.5em\" bg={bg} px=\"0.5em\">\n          <Box position=\"relative\">\n            <Box\n              position=\"absolute\"\n              left={poses[activeIndex].left - poses[0].left - em * 0.65}\n              top=\"50%\"\n              bottom=\"0\"\n              width={poses[activeIndex].width + 1.3 * em}\n              transition=\"all 0.25s\"\n            >\n              <Box py=\"1.25em\" bg={color} transform=\"translateY(-50%)\" borderRadius=\"1.25em\" />\n            </Box>\n            <Box position=\"relative\">\n              {options.map((label, i) => (\n                <Measure bounds onResize={({ bounds }) => this.handleBound(i, bounds)} key={i}>\n                  {({ measureRef }) => (\n                    <Box.inline ref={measureRef} px=\"1.25em\" py=\"0.5em\" color=\"white\" onClick={() => onToggle(i)}>\n                      {label}\n                    </Box.inline>\n                  )}\n                </Measure>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </FontSizeContext.Consumer>\n    );\n  }\n}\n\n\nToggler.defaultProps = {\n  color: 'primary',\n  bg: 'rgba(255,255,255,0.2)',\n  onToggle: () => {},\n}\n\nexport default Toggler;\n","import React from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport styled from 'styled-components';\n\nimport themeGet from '@styled-system/theme-get';\nimport Box from './Box'\n\nimport withResponsive from '../hoc/withResponsive'\n\nconst StyledDropdown = styled(Dropdown)`\n  .Dropdown-control {\n    border: 1px solid;\n    border-radius: 0.5em;\n    text-align: center;\n    background-color: white;\n    color: black;\n    font-family: inherit;\n    padding: 0.25em;\n    font-size: 1em;\n    cursor: pointer;\n    transition: none;\n  }\n  &.is-open {\n    .Dropdown-control {\n      border-radius: 0.5em 0.5em 0em 0em;\n    }\n  }\n  .Dropdown-menu {\n    border: 1px solid;\n    transform: translateY(1px);\n    border-radius: 0 0 0.5em 0.5em;\n  }\n  .Dropdown-option {\n    color: inherit;\n    text-align: center;\n    padding: 0.5em 1em;\n    border-bottom: 1px solid gray;\n    &.is-selected {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n    &:hover {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n  }\n  .Dropdown-arrow {\n    border-color: black transparent transparent;\n    top: 0.8em;\n    right: 0.5em;\n  }\n`\n\nconst CustomDropdown = ({\n  isMobile,\n  options,\n  onChange,\n  onBlur,\n  value,\n  name,\n  placeholder,\n  disabled,\n  ...props\n}) => {\n  return (\n    <Box {...props}>\n      <StyledDropdown\n        onChange={onChange}\n        options={[{ label: '全部', value: '' }].concat(options.map(value => ({ value, label: value })))}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </Box>\n  );\n};\n\nCustomDropdown.defaultProps = {\n  placeholder: '請選擇',\n  onChange: () => {}\n}\n\nexport default withResponsive(CustomDropdown);\n","import { connect } from 'react-redux';\r\n\r\nexport default (WrappedComp) => connect((state) => {\r\n  const browser = state.get('browser');\r\n  return {\r\n    browser,\r\n    isMobile: browser.lessThan.md,\r\n  };\r\n})(WrappedComp);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from './Box';\r\n\r\nconst Circle = ({ children, border, borderColor, bg, is, ...props }) => (\r\n  <Box {...props}>\r\n    <Box position=\"relative\" pt=\"100%\">\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"0\"\r\n        left=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        width={1}\r\n        borderRadius=\"50%\"\r\n        border={border}\r\n        borderColor={borderColor}\r\n        bg={bg}\r\n        is={is}\r\n      >\r\n        <Box\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          transform=\"translate(-50%, -50%)\"\r\n          position=\"absolute\"\r\n          lineHeight=\"0\"\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCircle.propTypes = {\r\n  children: PropTypes.node,\r\n  border: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bg: PropTypes.string,\r\n  is: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n  ]),\r\n};\r\n\r\nCircle.displayName = 'Circle';\r\n\r\nexport default Circle;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport merge from 'lodash/merge'\r\nimport { IoIosClose } from \"react-icons/io\";\r\n\r\nimport Box from './Box'\r\nimport Flex from './Flex'\r\nimport Text from './Text'\r\nimport Button from './Button'\r\nimport Circle from './Circle'\r\nimport theme from './ThemeProvider/theme'\r\n\r\nconst defaultStyles = {\r\n  overlay: {\r\n    zIndex: theme.zOrder[3],\r\n    backgroundColor: 'rgba(0,0,0,0.7)'\r\n  },\r\n  content: {\r\n    width: '66%',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: '1em',\r\n    border: 'none',\r\n    padding: '0',\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    overflow: 'unset',\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default ({ children, border, borderRadius, customStyles, title, ...props }) => (\r\n  <Modal\r\n    style={merge({}, defaultStyles, { content: customStyles})}\r\n    {...props}\r\n  >\r\n    <Box py=\"1.5em\">\r\n      <Flex justifyContent=\"space-between\" mx=\"2em\" pb=\"1em\" borderBottom=\"1px solid\" borderColor=\"darkBlue\" alignItems=\"center\">\r\n        <Text fontWeight=\"bold\" letterSpacing=\"0.25em\" fontSize=\"1.25em\">{title}</Text>\r\n        <Circle width=\"2em\" is={(p) => <Button borderRadius=\"50%\" px=\"0\" py=\"0\" {...p} />} onClick={props.onRequestClose}>\r\n          <IoIosClose size=\"2em\" />\r\n        </Circle>\r\n      </Flex>\r\n      <Box m=\"1.5em\" position=\"relative\">\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </Modal>\r\n)\r\n","import React, { PureComponent, Fragment, createElement } from 'react';\n\nimport Button from './Button'\nimport Modal from './Modal'\n\nclass ModalButton extends PureComponent {\n  static defaultProps = {\n    is: Button,\n  }\n\n  state = {}\n\n  openModal = () => this.setState({ open: true })\n  closeModal = () => this.setState({ open: false })\n\n  render() {\n    const { is, label, title, children, ...props } = this.props\n    const { open } = this.state\n    return (\n      <Fragment>\n        {createElement(is, {\n          onClick: this.openModal,\n          ...props\n        }, label)}\n        <Modal isOpen={open} onRequestClose={this.closeModal} title={title}>\n          {children}\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default ModalButton;\n","import conformsTo from 'lodash/conformsTo';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isObject from 'lodash/isObject';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    injectedReducers: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(src/utils...) injectors: Expected a valid redux store'\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../stores/reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function'\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => (WrappedComponent) => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n    static contextType = ReactReduxContext;\r\n    static displayName = `withReducer(${(WrappedComponent.displayName || WrappedComponent.name || 'Component')})`;\r\n\r\n    componentWillMount() {\r\n      const { injectReducer } = this.injectors;\r\n\r\n      injectReducer(key, reducer);\r\n    }\r\n\r\n    injectors = getInjectors(this.context.store)\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n","import React, { PureComponent, createElement } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { actionTypes, requestStatuses, resourceReducer } from 'redux-resource';\r\nimport get from 'lodash/get';\r\nimport isArray from 'lodash/isArray';\r\nimport isNumber from 'lodash/isNumber';\r\nimport size from 'lodash/size';\r\nimport md5 from 'blueimp-md5'\r\n\r\nimport Text from '../../components/Text';\r\nimport injectReducer from '../../utils/injectReducer';\r\n\r\nexport default (key, params, transformer) => {\r\n  const ids = (isArray(params) || isNumber(params)) ? params : '';\r\n  const listMode = !ids;\r\n  const resources = isArray(ids) ? ids : [ids];\r\n  const SIG = `_LAW.${md5(`${key}${ids}${params ? JSON.stringify(params) : ''}`)}`\r\n\r\n  return SubComp => {\r\n    if (!key) return () => null;\r\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\r\n\r\n    class WithData extends PureComponent {\r\n      componentDidMount() {\r\n        setTimeout(this.request);\r\n      }\r\n\r\n      // shouldComponentUpdate(nextProps) {\r\n      //   return get(this.props, [key, 'resources']) !== get(nextProps, [key, 'resources'])\r\n      // }\r\n\r\n      request = (skip, requestParams = params) => {\r\n        if (this.props[key]) {\r\n          if (!this.checkIsPending()) {\r\n            if (skip || !this.checkIsDone()) {\r\n              this.props.dispatch({\r\n                type: actionTypes.READ_RESOURCES_PENDING,\r\n                resourceType: key,\r\n                resources: listMode ? undefined : resources,\r\n                requestKey: listMode && `list${JSON.stringify(params)}`,\r\n                requestParams,\r\n                transformer,\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          setTimeout(this.request, 100)\r\n        }\r\n      };\r\n\r\n      resync = () => this.request(true);\r\n\r\n      updateParams = (params) => this.request(true, params);\r\n\r\n      checkStatus = status => {\r\n        if (listMode) {\r\n          return (\r\n            get(this.props, [\r\n              key,\r\n              'requests',\r\n              'list',\r\n              'status',\r\n            ]) === status\r\n          );\r\n        }\r\n        return (\r\n          get(this.props, [\r\n            key,\r\n            'meta',\r\n            resources,\r\n            'readStatus'\r\n          ]) === status\r\n        );\r\n      };\r\n\r\n      checkIsPending = () => this.checkStatus(requestStatuses.PENDING);\r\n\r\n      checkIsDone = () => this.checkStatus(requestStatuses.SUCCEEDED) || this.checkStatus(requestStatuses.FAILED);\r\n\r\n      render() {\r\n        const data = get(this.props, [key, 'resources']);\r\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\r\n        if (size(data)) {\r\n          content = createElement(SubComp, {\r\n            ...this.props,\r\n            [key]: data,\r\n            updateParams: this.updateParams,\r\n            // resync: this.resync,\r\n            // isLoading: this.checkIsPending(),\r\n          });\r\n        }\r\n        return content\r\n      }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n      [key]: state.get(key),\r\n    });\r\n\r\n    const withReducer = injectReducer({\r\n      key: key,\r\n      reducer: resourceReducer(key),\r\n    });\r\n\r\n    const comp = compose(\r\n      withReducer,\r\n      connect(mapStateToProps),\r\n    )(WithData)\r\n    if (typeof window !== 'undefined') window[SIG] = comp\r\n\r\n    return comp\r\n  };\r\n}\r\n","import { createElement } from 'react'\nimport mapValues from 'lodash/mapValues'\n\nimport withData from './withData';\n\nconst keys = [\n  'canceled',\n  'canceledDollar',\n  'issued',\n  'issuedDollar',\n  'received',\n  'receivedDollar',\n  'executed',\n]\n\nconst transformData = data => mapValues(data, d => ({\n  ...d,\n  monthData: d.monthData.map(m => ({\n    ...m,\n    data: m.types.reduce((sum, t) => {\n      keys.forEach((key) => {\n        sum[key] = sum[key] || 0\n        sum[key] += t.data[key]\n      }, {})\n      return sum\n    }, {})\n  })),\n}))\n\nexport default (SubComp) => {\n  let key = 'data/bureaus'\n\n  if (typeof window !== 'undefined' && window.__SHOW_BUREAU_ID !== '00000000') {\n    key = `${key}/${window.__SHOW_BUREAU_ID}`\n  }\n  return withData(key, { year: new Date().getFullYear() - 1911 })(props => createElement(SubComp, { ...props, data: transformData(props[key]) }))\n}\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\nimport debounce from 'lodash/debounce'\n\nimport Box from '../Box'\n\nclass ChartBase extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleResize = debounce(this.handleResize, 200)\n  }\n\n  state = {\n    dimensions: {},\n  }\n\n  handleResize = ({ bounds }) => this.setState({ dimensions: bounds })\n\n  render() {\n    const { children, ratio, ...props } = this.props;\n    const { width, height } = this.state.dimensions;\n    return (\n      <Measure onResize={this.handleResize} bounds>\n        {({ measureRef }) => (\n          <Box position=\"relative\" pt={`${ratio * 100}%`} {...props} ref={measureRef}>\n            {width && height && (\n              <Box\n                is=\"svg\"\n                position=\"absolute\"\n                top=\"0\"\n                left=\"0\"\n                width={width}\n                height={height}\n              >\n                {children({ width, height })}\n              </Box>\n            )}\n          </Box>\n        )}\n      </Measure>\n    );\n  }\n}\n\nChartBase.defaultProps = {\n  ratio: 1 / 3,\n}\n\nexport default ChartBase;\n","import React from 'react';\n\nfunction backwardAutoLineBreak(str, maxLength, fillFront) {\n  if (!maxLength) return [str]\n  const strArr = Array.from(str)\n  if (!fillFront) strArr.reverse()\n  let i = 0\n  const lines = strArr.reduce((lines, st) => {\n    lines[i] = lines[i] || ''\n    if (lines[i].length == maxLength) {\n      i += 1\n      lines[i] = ''\n    }\n    if (fillFront) {\n      lines[i] += st\n    } else {\n      lines[i] = st + lines[i]\n    }\n    return lines\n  }, [])\n  if (!fillFront) {\n    lines.reverse()\n  }\n  if (fillFront) {\n    const { length } = lines\n    if (lines[length - 1].length === 1) {\n      lines[length - 1] = lines[length - 2].substr(lines[length - 2].length - 1) + lines[length - 1]\n      lines[length - 2] = lines[length - 2].substr(0, lines[length - 2].length - 1)\n    }\n  } else {\n    if (lines[0].length === 1) {\n      lines[0] += lines[1][0]\n      lines[1] = lines[1].substr(1)\n    }\n  }\n  return lines\n}\n\nconst LineBreakText = ({\n  x,\n  y,\n  children,\n  fontSize,\n  maxLength,\n  lineHeight,\n  lineBefore,\n  fillFront,\n  bg,\n  style,\n  verticalCenter,\n  title,\n  maxLines,\n  ...props\n}) => {\n  if (typeof children !== 'string') {\n    return (\n      <text\n        x={x}\n        y={y}\n        fontSize={fontSize}\n        style={style}\n        {...props}\n      >\n        {children}\n      </text>\n    );\n  }\n  let perLine = maxLength\n  let lines = backwardAutoLineBreak(children, perLine, fillFront)\n  let lineCount = lines.length\n  while (lineCount > maxLines) {\n    perLine += 1\n    lines = backwardAutoLineBreak(children, perLine, fillFront)\n    lineCount = lines.length\n  }\n  const yPos = lines.map((c, i) => y + (verticalCenter && lineCount > 1 ? (0.5 * fontSize * (lineBefore ? 1 : -1)) : 0) + lineHeight * fontSize * (lineBefore ? i - lineCount + 1 : i));\n  const texts = lines.map((c, i) => (\n    <text\n      key={i}\n      x={x}\n      y={yPos[i]}\n      fontSize={fontSize}\n      style={style}\n      {...props}\n    >\n      {c}\n    </text>\n  )).concat(title && <title key=\"title\">{title}</title>)\n  return bg ? (() => {\n    const w = maxLength * fontSize\n    const yStart = Math.min(...yPos)\n    const yEnd = Math.max(...yPos)\n    return (\n      <g>\n        <rect\n          width={w}\n          height={yEnd - yStart + 1.75 * fontSize}\n          x={x - w / 2}\n          y={yStart - 1.25 * fontSize}\n          fill={bg}\n          style={style}\n        />\n        {texts}\n      </g>\n    )\n  })() : <g>{texts}</g>;\n};\n\nLineBreakText.defaultProps = {\n  lineHeight: 1.3,\n  y: 0,\n  verticalCenter: true,\n  maxLines: 3,\n}\n\nexport default LineBreakText;\n","import React, { Component } from 'react';\nimport { format } from 'd3-format'\nimport get from 'lodash/get'\n\nimport theme from '../../components/ThemeProvider/theme'\n\nconst num = format(',')\n\nclass InfoSection extends Component {\n  static getDerivedStateFromProps({\n    sub,\n    main,\n    em,\n    xEnd,\n    labelStart,\n  }) {\n    const mainValueStart = xEnd - (get(main.unit, 'length', -0.25) + 0.25) * em\n    const mainValueWidth = main.value.toString().length * 1.5 * em\n    const mainLabelStart = mainValueStart - mainValueWidth\n    const subValueStart = xEnd - (get(sub, ['unit', 'length'], -0.25) + 0.25) * em\n    const subValueWidth = get(sub, 'value', '').toString().length * 0.75 * em\n    const subLabelStart = subValueStart - subValueWidth\n    const newLabelStart = Math.min(mainLabelStart, subLabelStart)\n    return {\n      mainValueStart,\n      mainLabelStart,\n      subValueStart,\n      labelStart: newLabelStart !== labelStart ? newLabelStart : labelStart,\n    }\n  }\n\n  state = {}\n\n  componentDidMount() {\n    const { labelStart } = this.state\n    const { onWidthChange } = this.props\n    if (onWidthChange) {\n      onWidthChange(labelStart)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { labelStart } = this.state\n    const { onWidthChange } = this.props\n    if (labelStart !== prevState.labelStart && onWidthChange) {\n      onWidthChange(labelStart)\n    }\n  }\n\n  render() {\n    const {\n      y,\n      em,\n      main,\n      sub,\n      xEnd,\n    } = this.props\n    const {\n      mainValueStart,\n      subValueStart,\n      labelStart,\n    } = this.state;\n    const mainYStart = y - 0.8 * em\n    const subYStart = y + 1.5 * em\n    return (\n      <g>\n        <line\n          x1={labelStart - get(main.label, 'length') * em}\n          x2={xEnd}\n          y1={y}\n          y2={y}\n          stroke=\"black\"\n          strokeWidth=\"2\"\n        />\n        <g>\n          {main.unit && (\n            <text\n              x={xEnd}\n              y={mainYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {main.unit}\n            </text>\n          )}\n          <text\n            fill={theme.colors.primary}\n            x={mainValueStart}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={2 * em}\n          >\n            {num(main.value)}\n          </text>\n          <text\n            x={labelStart}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {main.label}\n          </text>\n        </g>\n        {sub && (\n          <g>\n            <text\n              x={xEnd}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {sub.unit}\n            </text>\n            <text\n              x={subValueStart - 0.25 * em}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n              color={theme.colors.gray}\n            >\n              {num(sub.value)}\n            </text>\n            <text\n              x={labelStart}\n              y={subYStart}\n              textAnchor=\"end\"\n              fontSize={em}\n            >\n              {sub.label}\n            </text>\n          </g>\n        )}\n      </g>\n    );\n  }\n}\n\n\nexport default InfoSection;\n","import React, { Fragment, PureComponent, createRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport { Animate, NodeGroup } from 'react-move'\nimport loSortBy from 'lodash/sortBy'\nimport { max } from 'd3-array'\nimport { format } from 'd3-format'\nimport { Bar, Circle } from '@vx/shape';\nimport { scaleLinear, scalePower } from '@vx/scale';\nimport { LinearGradient, RadialGradient } from '@vx/gradient';\nimport { localPoint } from '@vx/event';\nimport { Group } from '@vx/group';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport LineBreakText from '../../components/Charts/LineBreakText'\nimport theme from '../../components/ThemeProvider/theme'\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n\nimport InfoSection from './InfoSection'\n\nconst f = format('.2f')\nconst fade = 0.15\n\nconst emPercent = n => (\n  <Fragment>\n    {isNaN(n) || n === Infinity ? '-' : f(n * 100)}\n    <tspan fontSize=\"0.6em\">%</tspan>\n  </Fragment>\n)\n\nconst isTopBureau = window.__SHOW_BUREAU_ID === '00000000'\nconst singleBureau = isTopBureau && window.__BUREAU_ID !== '00000000'\n\nclass BubbleLine extends PureComponent {\n  static getDerivedStateFromProps({ data }) {\n    return {\n      namedData: data.reduce((nd, d) => {\n        nd[d.id] = d\n        return nd\n      }, {})\n    }\n  }\n\n  state = {\n    labelStart: 0,\n    activeId: singleBureau ? window.__BUREAU_ID : null,\n  }\n\n  wrapper = createRef()\n\n  handleTooltip = ({ event, xScale, data }) => {\n    if (singleBureau) return\n    const { x } = localPoint(event);\n    const index = Math.round(xScale.invert(x))\n    const d = data[index]\n    if (d) {\n      this.setState({ activeId: d.id })\n    } else {\n      this.setState({ activeId: null })\n    }\n  }\n\n  handleClick = () => {\n    if (singleBureau) return\n    const { activeId } = this.state\n    const { lockId, onLock } = this.props\n    if (lockId) {\n      onLock(null)\n      // this.setState({ activeId: null }, () => onLock(null))\n    } else {\n      onLock(activeId)\n    }\n  }\n\n  handleInfoWidthChange = (newStart) => {\n    this.setState(({ labelStart }) => ({ labelStart: labelStart > 0 ? Math.min(labelStart, newStart) : newStart }))\n  }\n\n  render() {\n    const {\n      data,\n      sortBy,\n      sortOrder,\n      onLock,\n      lockId,\n      ...props\n    } = this.props\n    const { activeId, namedData, labelStart } = this.state;\n    if (!data || !data.length) return null\n    const sortedData = loSortBy(data, sortBy)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase {...props}>\n            {({ width, height }) => {\n              const rLabelHeight = 2 * em\n              const rMax = height * 0.2\n              const leftLabelWidth = width * 0.075\n              const rightInfoWidth = width * 0.15\n              const xStart = leftLabelWidth + rMax\n              const xEnd = width - rMax - rightInfoWidth\n              const lableY = rLabelHeight + rMax * 2 + em * 3.5\n              const rateY = lableY + em * 3\n              const executedRateY = rateY + em * 2.5\n\n              const xScale = scaleLinear({\n                domain: [0, data.length - 1],\n                range: [xStart, xEnd]\n              })\n              const valueMax = max(data, d => d.issued)\n              const rScale = valueMax ? scalePower({\n                domain: [0, valueMax],\n                range: [0, rMax],\n                exponent: 0.5,\n              }) : () => 0;\n\n              return (\n                <Fragment>\n                  <LinearGradient from={theme.colors.darkBlue} to={theme.colors.darkerBlue} vertical={false} id=\"dark\" />\n                  <LinearGradient from={theme.colors.orange6} to={theme.colors.orange3} vertical={false} id=\"rate\" />\n                  <RadialGradient from={theme.colors.orange3} to={theme.colors.orange4} fromOffset=\"30%\" id=\"radial-fill\" />\n                  <RadialGradient from={theme.colors.orange5} to={theme.colors.orange5} toOpacity={0} id=\"radial-trans\" />\n                  <g>\n                    <rect\n                      width={leftLabelWidth}\n                      height={height - rLabelHeight / 2}\n                      x={0}\n                      y={rLabelHeight / 2}\n                      opacity={0.15}\n                      fill=\"url('#dark')\"\n                      rx={em}\n                    />\n                    {[lableY, rateY - 2 * em / 3, executedRateY - 2 * em / 3].map((y, i) => (\n                      <line\n                        key={i}\n                        x1={em}\n                        x2={leftLabelWidth - em}\n                        y1={y - em * 2 / 3}\n                        y2={y - em * 2 / 3}\n                        stroke={theme.colors.text}\n                        strokeWidth=\"1\"\n                        strokeLinecap=\"round\"\n                      />\n                    ))}\n                    {[\n                      { label: '已開案件量', y: rLabelHeight + rMax - em / 2 },\n                      { label: isTopBureau ? '局處' : '科室', y: lableY + em },\n                      { label: '收繳率', y: rateY + em / 3 },\n                      { label: '執行率', y: executedRateY + em / 3 },\n                    ].map(({ label, y }, i) => (\n                      <LineBreakText\n                        key={i}\n                        x={leftLabelWidth / 2}\n                        y={y}\n                        textAnchor=\"middle\"\n                        fontSize={1.25 * em}\n                        fontWeight=\"bold\"\n                        maxLength={3}\n                        letterSpacing=\"2\"\n                      >\n                        {label}\n                      </LineBreakText>\n                    ))}\n                  </g>\n                  <Animate\n                    start={{\n                      opacity: 1,\n                    }}\n                    update={{\n                      opacity: [(activeId || lockId) ? fade : 1],\n                      timing: { duration: 250 }\n                    }}\n                  >\n                    {state => (\n                      <line\n                        x1={xStart}\n                        y1={rLabelHeight + rMax}\n                        x2={width}\n                        y2={rLabelHeight + rMax}\n                        stroke={theme.colors.lightGray}\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        {...state}\n                      />\n                    )}\n                  </Animate>\n                  <rect\n                    width={xEnd - xStart + rMax + em / 2}\n                    height={2 * em}\n                    fill=\"url('#rate')\"\n                    x={xStart - rMax / 2 - em / 2}\n                    y={rateY - em}\n                    rx={em}\n                  />\n                  {/* <rect\n                  width={xEnd - xStart + rMax}\n                  height={2 * em}\n                  fill=\"url('#rate')\"\n                  x={xStart - rMax / 2}\n                  y={executedRateY - em}\n                  rx={em}\n                /> */}\n                  <Bar\n                    x={0}\n                    y={0}\n                    width={width}\n                    height={height}\n                    fill=\"transparent\"\n                    data={data}\n                    onTouchStart={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onTouchMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseLeave={() => !singleBureau && this.setState({ activeId: null })}\n                    onClick={this.handleClick}\n                  />\n                  <g ref={this.wrapper}>\n                    <NodeGroup\n                      // must make react-move think data had been updated, so we inject width and height here\n                      data={sortedData.map(d => ({ ...d, width, height }))}\n                      keyAccessor={d => d.label}\n                      start={(d, i) => ({\n                        cx: xScale(i),\n                        r: 0,\n                        opacity: 0.5,\n                        otherOpacity: 1,\n                        centerR: 0,\n                      })}\n                      enter={d => ({\n                        r: [rScale(d.issued)],\n                        timing: { duration: 500 },\n                      })}\n                      update={(d, i) => {\n                        let active = true\n                        let centerActive\n                        if (lockId) {\n                          active = lockId === d.id\n                          centerActive = lockId === d.id\n                        } else if (activeId) {\n                          active = activeId === d.id\n                        }\n                        return [\n                          {\n                            cx: [xScale(i)],\n                            r: [rScale(d.issued)],\n                            timing: { duration: 500 },\n                          },\n                          {\n                            opacity: [active ? 0.5 : fade],\n                            otherOpacity: [active ? 1 : fade],\n                            centerR: [centerActive ? em : 0],\n                            timing: { duration: 250 },\n                          },\n                        ]\n                      }}\n                      leave={() => ({\n                        opacity: [0],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <g>\n                          {nodes.map(({ key, data: d, state: { cx, r, opacity, otherOpacity } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rLabelHeight + rMax}\n                                  r={r}\n                                  fill=\"url('#radial-fill')\"\n                                  opacity={opacity}\n                                  style={{\n                                    pointerEvents: 'none',\n                                    mixBlendMode: 'multiply',\n                                  }}\n                                />\n                                <text\n                                  fill={theme.colors.darkGray}\n                                  x={cx}\n                                  y={rLabelHeight + rMax - Math.max(r, 0.15 * rMax) - 0.5 * em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {d.issued}\n                                </text>\n                                <line\n                                  x1={cx}\n                                  x2={cx}\n                                  y1={rLabelHeight + rMax}\n                                  y2={lableY + em}\n                                  stroke={theme.colors.lightGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <LineBreakText\n                                  x={cx}\n                                  y={lableY + em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  maxLength={3}\n                                  lineBefore\n                                  em={em}\n                                  bg=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                  verticalCenter={false}\n                                >\n                                  {d.label}\n                                </LineBreakText>\n                                <text\n                                  x={cx}\n                                  y={rateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={0.9 * em}\n                                  fill=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveRate)}\n                                </text>\n                                <text\n                                  x={cx}\n                                  y={executedRateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={0.9 * em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.executedRate)}\n                                </text>\n                              </g>\n                            );\n                          })}\n                          {nodes.map(({ key, data: d, state: { cx, otherOpacity, centerR } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rMax + rLabelHeight}\n                                  r={rMax / 25}\n                                  fill={theme.colors.darkGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <HoverSensor>\n                                  {({ isHover }) => {\n                                    const cy = rLabelHeight + rMax\n                                    const boxHeight = 2.5 * em\n                                    const boxWidth = 5 * em\n                                    return (\n                                      <g>\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR * 0.6}\n                                          fill={theme.colors.orange5}\n                                        />\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR}\n                                          fill=\"transparent\"\n                                          strokeWidth=\"2\"\n                                          stroke={theme.colors.orange5}\n                                          style={isTopBureau ? { cursor: 'pointer' } : {}}\n                                          onClick={() => {\n                                            if (isTopBureau) {\n                                              window.location.search = `?showBureau=${encodeURIComponent(d.id)}`\n                                            }\n                                          }}\n                                        />\n                                        {isTopBureau && isHover && createPortal((\n                                          <Group top={rLabelHeight + rMax} left={cx + 2 * em}>\n                                            <polygon\n                                              points={[\n                                                [-0.75 * em, 0],\n                                                [0.1 * em, -0.5 * em],\n                                                [0.1 * em, 0.5 * em]\n                                              ].map(p => p.join()).join(' ')}\n                                              fill={theme.colors.orange5}\n                                            />\n                                            <rect\n                                              x={0}\n                                              y={-boxHeight / 2}\n                                              width={boxWidth}\n                                              height={boxHeight}\n                                              fill={theme.colors.orange5}\n                                              rx={0.5 * em}\n                                            />\n                                            <text\n                                              fontSize={em}\n                                              fill=\"white\"\n                                              x={boxWidth / 2}\n                                              y={0.3*em}\n                                              textAnchor=\"middle\"\n                                            >前往局處</text>\n                                          </Group>\n                                        ), this.wrapper.current)}\n                                      </g>\n                                    )\n                                  }}\n                                </HoverSensor>\n                              </g>\n                            );\n                          })}\n                        </g>\n                      )}\n                    </NodeGroup>\n                  </g>\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 2 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].issued : data.reduce((sum, d) => sum + d.issued, 0),\n                      label: '已開案量',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].issuedDollar : data.reduce((sum, d) => sum + d.issuedDollar, 0),\n                      label: '案件金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 9.5 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].received : data.reduce((sum, d) => sum + d.received, 0),\n                      label: '收繳案件',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].receivedDollar : data.reduce((sum, d) => sum + d.receivedDollar, 0),\n                      label: '收繳金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    labelStart={labelStart}\n                    onWidthChange={this.handleInfoWidthChange}\n                    xEnd={width}\n                    y={rLabelHeight + 18 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].canceled : data.reduce((sum, d) => sum + d.canceled, 0),\n                      label: '撤銷案件',\n                      unit: '件',\n                    }}\n                  />\n                </Fragment>\n              );\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    )\n  }\n}\n\nexport default BubbleLine;\n","import React, { Component } from 'react';\n\nimport { Animate } from 'react-move'\nimport { interpolate } from 'flubber'\n\nclass PathInterpolation extends Component {\n  static getDerivedStateFromProps({ d }, { thisD }) {\n    return {\n      thisD: d,\n      prevD: thisD,\n    }\n  }\n\n  static defaultProps = {\n    duration: 200,\n  }\n\n  state = {\n    prevD: this.props.d,\n    thisD: this.props.d,\n  }\n\n  render() {\n    const { d, duration, ...props } = this.props\n    const { prevD, thisD } = this.state\n\n    if (!prevD) {\n      return (\n        <path\n          d={d}\n          {...props}\n        />\n      )\n    }\n\n    const interpolator = interpolate(prevD, thisD)\n    return (\n      <Animate\n        start={{\n          d: interpolator(1),\n        }}\n        enter={[\n          {\n            timing: { duration },\n          },\n        ]}\n        update={{\n          d: interpolator,\n          timing: { duration },\n        }}\n      >\n        {(state) => (\n          <path\n            {...state}\n            {...props}\n          />\n        )}\n      </Animate>\n    );\n  }\n}\n\nexport default PathInterpolation\n","import React, { Fragment, PureComponent } from 'react';\nimport { Group } from '@vx/group';\nimport { Pie } from '@vx/shape';\nimport { scaleBand } from '@vx/scale';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\nimport { format } from 'd3-format'\nimport { pie } from 'd3-shape'\nimport groupBy from 'lodash/groupBy'\nimport reduce from 'lodash/reduce'\nimport range from 'lodash/range'\nimport mapValues from 'lodash/mapValues'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/PathInterpolation'\n\nconst p = format('.0%')\n\nconst calcSide = (centroid, index) => {\n  return {\n    side: Math.sign(centroid[0]),\n    distanceX: Math.abs(centroid[0]),\n    distanceY: centroid[1],\n    index,\n  }\n}\n\nclass TypeDonut extends PureComponent {\n  static contextType = FontSizeContext\n\n  static defaultProps = {\n    onLegendClick: () => {}\n  }\n\n  static getDerivedStateFromProps({ data, legends, valueGetter }) {\n    const spaceForLabels = pie().value(valueGetter)(data).map(({ startAngle, endAngle }) => endAngle - startAngle >= 0.1)\n    return {\n      totalVaue: data.reduce((sum, d) => sum + valueGetter(d), 0),\n      dataLength: data.length,\n      labelLength: Math.floor(data.length / 2) + 1,\n      getColorByName: legends.reduce((cn, l) => {\n        cn[l.label] = l.color\n        return cn\n      }, {}),\n      getIndexByName: legends.reduce((cn, l, i) => {\n        cn[l.label] = i\n        return cn\n      }, {}),\n      spaceForLabels,\n      notEnoughSpace: !spaceForLabels.every(Boolean),\n    }\n  }\n\n  state = {}\n\n  outerShapes = []\n\n  handleOuterShape = (i, shape) => {\n    this.outerShapes[i] = shape\n  }\n\n  render() {\n    const {\n      data,\n      legends,\n      onLegendClick,\n      activeLegend,\n      valueGetter,\n      outerCircle,\n      showLegend,\n      showLabel,\n      showPercentage,\n      ...props\n    } = this.props;\n    const {\n      totalVaue,\n      dataLength,\n      labelLength,\n      getColorByName,\n      getIndexByName,\n      spaceForLabels,\n      notEnoughSpace,\n    } = this.state;\n    const { em } = this.context\n    const stroke = showLabel ? 'black' : 'white'\n    return (\n      <ChartBase {...props}>\n        {({ width, height }) => {\n          const donutR = height * 0.45 - (showLabel ? 8 * em : (notEnoughSpace ? 4 * em : 2 * em));\n          const legendBottom = height - 4 * em\n          return (\n            <Fragment>\n              {showLegend && (\n                <g>\n                  {legends.map((legend, i) => (\n                    <Group\n                      key={i}\n                      left={notEnoughSpace ? 0 : em}\n                      top={legendBottom - (dataLength - 1 - i) * em * 1.75}\n                      onClick={() => onLegendClick(legend.label === activeLegend ? null : legend.label)}\n                      opacity={!activeLegend || legend.label === activeLegend ? 1 : 0.3}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <circle cx={em / 2} cy={-em * 0.3} r={em / 2} fill={legend.color} />\n                      <text x={(notEnoughSpace ? 1.5 : 1.75) * em} fill=\"white\" fontSize={em}>{legend.label}</text>\n                    </Group>\n                  ))}\n                </g>\n              )}\n              <Group top={height / 2} left={width / 2 + (showLegend ? 5 * em : 0)}>\n                {outerCircle && (\n                  <Fragment>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.05}\n                      innerRadius={donutR * 0.4}\n                      padAngle={0}\n                      pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                    >\n                      {pie => pie.arcs.map((arc, i) => {\n                        const d = pie.path(arc)\n                        return (\n                          <g key={`outer-${arc.data.name}-${i}`}>\n                            <path d={d} fill=\"transparent\" ref={() => this.handleOuterShape(i, d)} />\n                          </g>\n                        )\n                      })}\n                    </Pie>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.1}\n                      innerRadius={donutR * 0.3}\n                      padAngle={0}\n                    >\n                      {pie => pie.arcs.map((arc, i) => (\n                        <g key={`bg-${arc.data.name}-${i}`}>\n                          <path d={pie.path(arc)} fill=\"white\" opacity=\"0.2\" />\n                        </g>\n                      ))}\n                    </Pie>\n                  </Fragment>\n                )}\n                <Pie\n                  data={data}\n                  pieValue={valueGetter}\n                  outerRadius={donutR}\n                  innerRadius={donutR * 0.4}\n                  padAngle={0}\n                  pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                >\n                  {pie => {\n                    let sideOrders\n                    let scaleLabelY\n                    if (showLabel || notEnoughSpace) {\n                      const sides = groupBy(pie.arcs.map((arc, i) => calcSide(pie.path.centroid(arc), i)), 'side')\n                      const sideGroups = reduce(sides, (so, s, i) => {\n                        const filteredS = s.filter(sd => pie.arcs[sd.index].value)\n                        let ss = so[i] ? filteredS.concat(so[i]) : filteredS\n                        if (filteredS.length > labelLength) {\n                          const sorted = filteredS.sort((a, b) => b.distanceX - a.distanceX)\n                          ss = sorted.slice(0, labelLength)\n                          const otherI = i * -1\n                          so[otherI] = (so[otherI] || []).concat(sorted.slice(labelLength))\n                        }\n                        so[i] = ss\n                        return so\n                      }, {})\n                      scaleLabelY = mapValues(sideGroups, s => scaleBand({\n                        range: [-donutR, donutR],\n                        domain: range(0, s.length),\n                      }))\n                      sideOrders = reduce(sideGroups, (so, s) => {\n                        const sorted = s.sort((a, b) => a.distanceY - b.distanceY)\n                        sorted.forEach((d, index) => {\n                          so[d.index] = { side: d.side, index }\n                        })\n                        return so\n                      }, [])\n                    }\n                    return pie.arcs.map((arc, i) => {\n                      const [centroidX, centroidY] = pie.path.centroid(arc);\n                      const value = valueGetter(arc.data)\n                      const opacity = (!activeLegend || arc.data.name === activeLegend) ? 1 : 0.3\n                      return (\n                        <Fragment key={`inner-${arc.data.name}-${i}`}>\n                          <HoverSensor>\n                            {({ isHover }) => (\n                              <g>\n                                <TweenShape\n                                  d={((!activeLegend && isHover) || activeLegend === arc.data.name) && this.outerShapes[i] ? this.outerShapes[i] : pie.path(arc)}\n                                  fill={getColorByName[arc.data.name]}\n                                  opacity={opacity}\n                                  onClick={() => onLegendClick(arc.data.name === activeLegend ? null : arc.data.name)}\n                                  duration={150}\n                                />\n                                {arc.value && spaceForLabels[i] && (\n                                  <text\n                                    fill=\"white\"\n                                    x={centroidX}\n                                    y={centroidY}\n                                    dy=\".33em\"\n                                    fontSize={em}\n                                    fontWeight=\"bold\"\n                                    textAnchor=\"middle\"\n                                    opacity={opacity}\n                                    style={{ pointerEvents: 'none' }}\n                                  >\n                                    {showPercentage ? p(value / totalVaue) : value}\n                                  </text>\n                                )}\n                              </g>\n                            )}\n                          </HoverSensor>\n\n                          {(showLabel || !spaceForLabels[i]) && (() => {\n                            const side = sideOrders[i]\n                            if (!side) return null\n                            const scale = scaleLabelY[side.side]\n                            const sign = side.side\n                            const left = (donutR + (showLabel ? 8 * em : 4.5 * em)) * sign\n                            const top = scale(side.index) + scale.bandwidth() / 2 - em / 2\n                            const centX = centroidX - left + (spaceForLabels[i] ? 2 * em * sign : 0)\n                            const centY = centroidY - top\n                            const breakX = centX + Math.abs(centY) * sign\n                            return (\n                              <Fragment>\n                                <Group\n                                  left={left}\n                                  top={top}\n                                  opacity={opacity}\n                                >\n                                  <line\n                                    x1={0}\n                                    x2={breakX}\n                                    y1={0}\n                                    y2={0}\n                                    stroke={stroke}\n                                  />\n                                  <line\n                                    x1={centX}\n                                    y1={centY}\n                                    x2={breakX}\n                                    y2={0}\n                                    stroke={stroke}\n                                  />\n                                  <text\n                                    y={1.5 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={(showLabel ? 1 : 0.9) * em}\n                                    fontWeight=\"bold\"\n                                  >{arc.data.name}</text>\n                                  <text\n                                    y={-0.75 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={(showLabel ? 1.5 : 1) * em}\n                                    fill={showLabel ? theme.colors.primary : getColorByName[arc.data.name]}\n                                    fontWeight=\"bold\"\n                                  >{valueGetter(arc.data)}</text>\n                                </Group>\n                              </Fragment>\n                            )\n                          })()}\n                        </Fragment>\n                      );\n                    });\n                  }}\n                </Pie>\n              </Group>\n            </Fragment>\n          )\n        }}\n      </ChartBase>\n    );\n  }\n}\n\nexport default TypeDonut;\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleLinear } from '@vx/scale';\nimport { Animate } from 'react-move'\nimport { format } from 'd3-format'\nimport { max } from 'd3-array'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\n\nimport ChartBase from '../../components/Charts/ChartBase'\n\nconst pd = format('.0%')\n\nconst PercentBars = ({\n  data,\n  legends,\n  onLegendClick,\n  activeLegend,\n  ...props\n}) => {\n  const dataByKey = data.reduce((dk, d) => {\n    dk[d.name] = d.issuedDollar ? d.receivedDollar / d.issuedDollar : 0;\n    return dk\n  }, {})\n\n  const legendsLength = Math.max(...legends.map(l => l.label.length))\n  const maxRate = Math.ceil(max(legends, ({ label }) => dataByKey[label]))\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width }) => {\n            const yStart = 6 * em\n            const xScale = scaleLinear({\n              range: [0, width - 3 * em - legendsLength * em * 1.25],\n              domain: [0, maxRate],\n            });\n            return (\n              <Group top={yStart}>\n                {legends.map(({ label, color }, i) => {\n                  const handleClick = () => onLegendClick(label === activeLegend ? null : label)\n                  return (\n                    <Group\n                      top={i * em * 2.5}\n                      opacity={!activeLegend || activeLegend === label ? 1 : 0.3}\n                      key={label + i}\n                    >\n                      <text\n                        fill=\"white\"\n                        fontSize={em}\n                        onClick={handleClick}\n                        style={{ cursor: 'pointer' }}\n                      >\n                        {label}\n                      </text>\n                      <rect\n                        x={legendsLength * em * 1.25}\n                        y={-1.25 * em}\n                        width={xScale(maxRate)}\n                        height={1.5 * em}\n                        fill=\"white\"\n                        opacity=\"0.15\"\n                      />\n                      <Animate\n                        start={{ width: 0 }}\n                        enter={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                        update={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                      >\n                        {(state) => (\n                          <Fragment>\n                            <rect\n                              x={legendsLength * em * 1.25}\n                              y={-1.25 * em}\n                              height={1.5 * em}\n                              {...state}\n                              fill={color}\n                              onClick={handleClick}\n                            />\n                            <text\n                              x={legendsLength * em * 1.25 + state.width + 0.5 * em}\n                              y=\"-.3em\"\n                              fill=\"white\"\n                              fontSize={em * 0.8}\n                            >\n                              {pd(dataByKey[label])}\n                            </text>\n                          </Fragment>\n                        )}\n                      </Animate>\n                    </Group>\n                  )\n                })}\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default PercentBars;\n","import { createElement } from 'react'\nimport withData from './withData';\n\nexport default ({ publicOnly, ...params }, lockId) => (SubComp) => {\n  let key = 'data/bureaus'\n  if (window.__SHOW_BUREAU_ID !== '00000000') {\n    key = `${key}/${window.__SHOW_BUREAU_ID}`\n  } else if (lockId) {\n    key = `${key}/${lockId}`\n  }\n  key = `${key}/laws`\n  return withData(\n    key,\n    Object.assign(publicOnly ? { publicOnly } : {}, params),\n    publicOnly ? d => ({ ...d, isPublic: true }) : undefined,\n  )(props => createElement(SubComp, { ...props, publicOnly, data: props[key] }))\n}\n","import React, { Fragment, PureComponent, createElement } from 'react';\r\nimport { Group } from '@vx/group';\r\nimport { scaleLinear } from '@vx/scale';\r\nimport { LinearGradient } from '@vx/gradient';\r\nimport { RectClipPath } from '@vx/clip-path'\r\nimport { Animate } from 'react-move'\r\nimport sortBy from 'lodash/sortBy'\r\nimport shortid from 'shortid';\r\n\r\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\r\n// import theme from '../../components/ThemeProvider/theme'\r\n\r\nimport ChartBase from '../../components/Charts/ChartBase'\r\nimport LineBreakText from '../../components/Charts/LineBreakText'\r\nimport withLawData from '../../services/api/withLawData'\r\n\r\nconst labelLength = 18\r\n\r\nclass LawTops extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.SIG = shortid.generate()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { year, updateParams, top } = this.props\r\n    if (prevProps.year !== year) {\r\n      updateParams({ year, top })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { hasLine, color, ratio, top, data, publicOnly } = this.props;\r\n    let sorted = sortBy(data, 'count').reverse()\r\n    if (publicOnly) sorted = sorted.filter(d => d.isPublic)\r\n    sorted = sorted.slice(0, top)\r\n    return (\r\n      <FontSizeContext.Consumer>\r\n        {({ em }) => (\r\n          <ChartBase ratio={ratio}>\r\n            {({ width }) => {\r\n              const yStart = em * 2.5\r\n              const xStart = labelLength * em * 1.1;\r\n              const xEnd = width - 3 * em - xStart\r\n              const xScale = scaleLinear({\r\n                range: [0, xEnd],\r\n                domain: [0, Math.max(...sorted.map(d => d.count))],\r\n              });\r\n              return (\r\n                <Fragment>\r\n                  <LinearGradient from=\"#ffab2a\" to=\"#ff712a\" vertical={false} id={`bar-ramp-${this.SIG}`} />\r\n                  <Group top={yStart}>\r\n                    {sorted.map((law, i) => {\r\n                      return (\r\n                        <Animate\r\n                          start={{ width: 0 }}\r\n                          enter={{\r\n                            width: [xScale(law.count)],\r\n                            timing: { duration: 200 },\r\n                          }}\r\n                          update={{\r\n                            width: [xScale(law.count)],\r\n                            timing: { duration: 200 },\r\n                          }}\r\n                          key={law.id}\r\n                        >\r\n                          {(state) => (\r\n                            <Group top={i * em * 3}>\r\n                              <LineBreakText\r\n                                fill={color}\r\n                                fontSize={em}\r\n                                maxLength={labelLength}\r\n                                fillFront\r\n                                textAnchor=\"end\"\r\n                                x={xStart - em}\r\n                                y={0.5 * em}\r\n                                title={law.name}\r\n                              >\r\n                                {law.name.length > labelLength * 2 ? law.name.substring(0, labelLength * 2 - 3).concat('...') : law.name}\r\n                              </LineBreakText>\r\n                              <RectClipPath\r\n                                id={`bar-${this.SIG}-${i}`}\r\n                                x={xStart}\r\n                                y=\"-0.5em\"\r\n                                width={state.width}\r\n                                height={1.25 * em}\r\n                              />\r\n                              <rect\r\n                                fill={`url(#bar-ramp-${this.SIG})`}\r\n                                clipPath={`url(#bar-${this.SIG}-${i})`}\r\n                                x={xStart}\r\n                                y=\"-0.5em\"\r\n                                width={xEnd}\r\n                                height={1.25 * em}\r\n                              />\r\n                              <text\r\n                                fill={color}\r\n                                x={xStart + state.width + em * 0.5}\r\n                                y=\"0.5em\"\r\n                              >{law.count}</text>\r\n                            </Group>\r\n                          )}\r\n                        </Animate>\r\n                      )\r\n                    })}\r\n                  </Group>\r\n                  {hasLine && (\r\n                    <line\r\n                      x1={xStart}\r\n                      x2={xStart}\r\n                      y1={yStart / 2}\r\n                      y2={yStart / 2 + sorted.length * em * 3}\r\n                      stroke={color}\r\n                      strokeWidth=\"1.5\"\r\n                    />\r\n                  )}\r\n                </Fragment>\r\n              )\r\n            }}\r\n          </ChartBase>\r\n        )}\r\n      </FontSizeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ({ publicOnly, ...props }) => createElement(withLawData({ top: props.top, year: props.year, publicOnly }, props.lockId)(LawTops), props);\r\n","import React, { PureComponent, createRef } from 'react';\nimport TWEEN from '@tweenjs/tween.js';\nimport { SVGPathData, encodeSVGPath } from 'svg-pathdata';\nimport pickBy from 'lodash/pickBy';\nimport size from 'lodash/size';\nimport merge from 'lodash/merge';\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\tTWEEN.update();\n}\n\nconst blacklist = {\n  type: true,\n  relative: true,\n  lArcFlag: true,\n  sweepFlag: true,\n}\n\nclass TweenShape extends PureComponent {\n  static defaultProps = {\n    duration: 500,\n  }\n\n  constructor(props) {\n    super(props);\n    const { d } = props;\n    this.prevParsed = new SVGPathData(d).toAbs().commands;\n    this.tick = [];\n    this.tickShape = [];\n    animate();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { d } = this.props;\n    if (d !== prevProps.d) this.updatePath(d);\n  }\n\n  componentWillUnmount() {\n    if (this.tweens) {\n      this.tweens.forEach((tween) => tween.stop());\n    }\n  }\n\n  pathRef = createRef()\n\n  updatePath = (d) => {\n    this.parsed = new SVGPathData(d).toAbs().commands;\n    this.tweens = this.parsed.map((to, index) => {\n      const from = this.prevParsed[index];\n      const fromValues = pickBy(from, (v, k) => !blacklist[k]);\n      const toValues = pickBy(to, (v, k) => !blacklist[k]);\n      if (size(toValues)) {\n        this.tickShape[index] = false;\n        const tween = new TWEEN.Tween(fromValues)\n          .to(toValues, this.props.duration)\n          .easing(TWEEN.Easing.Quadratic.InOut)\n          .onUpdate(this.handleUpdate(index))\n        tween.start();\n        return tween;\n      }\n      this.tick[index] = true;\n      this.tickShape[index] = true;\n      return {\n        stop: () => {},\n      };\n    });\n  }\n\n  handleUpdate = (index) => (value) => {\n    this.prevParsed[index] = merge(this.prevParsed[index] || {}, value);\n    this.tick[index] = true;\n    if (this.tick.length === this.parsed.length && this.tick.every(Boolean)) {\n      this.doUpdatePath();\n    }\n  }\n\n  doUpdatePath = () => {\n    if (this.pathRef.current) {\n      try {\n        const encoded = encodeSVGPath(this.prevParsed)\n        this.pathRef.current.setAttribute('d', encoded);\n      } catch {\n\n      }\n    }\n    this.tick = Array.from(this.tickShape)\n  }\n\n  render() {\n    const { duration, ...props } = this.props\n    return (\n      <path ref={this.pathRef} style={props.onClick ? { cursor: 'pointer' } : {}} {...props} />\n    );\n  }\n}\n\nexport default TweenShape;\n\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { LinePath, Bar } from '@vx/shape';\nimport range from 'lodash/range'\nimport map from 'lodash/map'\nimport { NodeGroup } from 'react-move'\n\nimport FontSizeContext from '../../components/ThemeProvider/FontSizeContext'\nimport theme from '../../components/ThemeProvider/theme'\n\nimport ChartBase from '../../components/Charts/ChartBase'\nimport TweenShape from '../../components/Charts/TweenShape'\n\nconst xValue = d => d.month\nconst yValue = d => d.issued\n\nconst YearChart = ({\n  data,\n  ...props\n}) => {\n\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n\n            const formattedData = map(data, (d, month) => ({\n              month,\n              ...d,\n              receivedRate: d.issuedDollar ? d.receivedDollar / d.issuedDollar : 0,\n              width,\n            }))\n            const yStart = 2 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em * 13\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(1, 13),\n              paddingInner: 0.3,\n              paddingOuter: 0.3,\n            })\n            const percentYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, 1.3],\n            });\n            const valueYMax = Math.ceil(Math.max(...formattedData.map(yValue)) / 100) * 100\n            const valueYScale = valueYMax ? scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, valueYMax],\n            }) : () => yHeight;\n            const barWidth = xScale.bandwidth()\n            return (\n              <Group top={yStart}>\n                <Group left={xStart}>\n                  <Grid\n                    top={0}\n                    left={0}\n                    xScale={xScale}\n                    yScale={percentYScale}\n                    stroke=\"white\"\n                    width={xEnd - xStart}\n                    height={yHeight}\n                    numTicksRows={3}\n                    numTicksColumns={0}\n                    columnLineStyle={{\n                      strokeWidth: 0,\n                    }}\n                  />\n                  <AxisLeft\n                    top={0}\n                    left={0}\n                    scale={percentYScale}\n                    numTicks={3}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      textAnchor: 'end',\n                      fontSize: em * 0.8,\n                      dx: '-0.25em',\n                      dy: '0.25em'\n                    })}\n                    tickFormat={d => Math.round(d * 100)}\n                  />\n                  <AxisBottom\n                    top={yHeight}\n                    left={0}\n                    scale={xScale}\n                    numTicks={12}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickFormat={d => `${d}月`}\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      fontSize: em * 0.8,\n                      textAnchor: 'middle',\n                    })}\n                  />\n                  <Group left={xStart}>\n                    <LinePath\n                      x={dd => xScale(xValue(dd)) - barWidth / 2}\n                      y={dd => valueYScale(yValue(dd))}\n                    >\n                      {({ path }) => (\n                        <TweenShape\n                          d={path(formattedData)}\n                          stroke={theme.colors.lightOrange}\n                          strokeWidth=\"1.5\"\n                          fill=\"transparent\"\n                          duration={500}\n                        />\n                      )}\n                    </LinePath>\n                    <NodeGroup\n                      data={formattedData}\n                      keyAccessor={xValue}\n                      start={d => ({\n                        xPos: xScale(xValue(d)),\n                        barHeight: 0,\n                        dotY: yHeight,\n                      })}\n                      enter={d => ({\n                        barHeight: [yHeight - (percentYScale(d.receivedRate) || yHeight)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                      update={d => ({\n                        xPos: [xScale(xValue(d))],\n                        barHeight: [yHeight - (percentYScale(d.receivedRate) || yHeight)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <Fragment>\n                          {nodes.map(({ key, data: d, state: { xPos, barHeight, dotY } }) => {\n                            const barY = yHeight - barHeight;\n                            const dotX = xPos - barWidth / 2\n                            return (\n                              <Fragment key={key}>\n                                <Bar\n                                  x={xPos - barWidth}\n                                  y={barY}\n                                  width={barWidth}\n                                  height={barHeight}\n                                  fill={theme.colors.orange}\n                                  opacity={0.5}\n                                />\n                                <circle\n                                  cx={dotX}\n                                  cy={dotY}\n                                  r={em / 3}\n                                  fill={theme.colors.orange5}\n                                />\n                                <text\n                                  x={dotX}\n                                  y={dotY - em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  fill={theme.colors.orange}\n                                >\n                                  {yValue(d)}\n                                </text>\n                              </Fragment>\n                            )\n                          })}\n                        </Fragment>\n                      )}\n                    </NodeGroup>\n                  </Group>\n                </Group>\n                <Group top={yHeight / 2 - em} left={xEnd + 5 * em}>\n                  <Group>\n                    <text>案件量</text>\n                    <line\n                      x1={4 * em}\n                      y1={-0.5 * em}\n                      x2={7 * em}\n                      y2={-0.5 * em}\n                      stroke={theme.colors.lightOrange}\n                      strokeWidth=\"1.5\"\n                    />\n                  </Group>\n                  <Group top={2.5 * em}>\n                    <text>收繳率</text>\n                    <rect\n                      x={4 * em}\n                      y={-1 * em}\n                      width={3 * em}\n                      height={em}\n                      fill={theme.colors.orange}\n                      opacity={0.5}\n                    />\n                  </Group>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default YearChart;\n","import React, { Fragment, PureComponent, createRef } from 'react';\r\nimport { createPortal } from 'react-dom'\r\nimport { Group } from '@vx/group';\r\nimport { scalePoint, scaleLinear } from '@vx/scale';\r\nimport { AxisLeft, AxisBottom } from '@vx/axis';\r\nimport { Grid } from '@vx/grid';\r\nimport { AreaClosed, Bar, Line } from '@vx/shape';\r\nimport { withTooltip } from '@vx/tooltip';\r\nimport { localPoint } from '@vx/event';\r\nimport range from 'lodash/range'\r\nimport { NodeGroup } from 'react-move'\r\nimport styled from 'styled-components';\r\n\r\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\r\nimport theme from '../../../components/ThemeProvider/theme'\r\n\r\nimport Text from '../../../components/Text'\r\nimport Box from '../../../components/Box'\r\n\r\nimport ChartBase from '../../../components/Charts/ChartBase'\r\nimport TweenShape from '../../../components/Charts/TweenShape'\r\n\r\nconst TooltipBox = styled(Box)`\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 100%;\r\n    transform: translateX(-50%);\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 0.5em solid transparent;\r\n    border-right: 0.5em solid transparent;\r\n\r\n    border-top: 0.5em solid ${theme.colors.darkerBlue};\r\n  }\r\n`\r\n\r\nconst xValue = d => d.index\r\nconst yValue = d => d.issued\r\nconst yCancealedValue = d => d.canceled\r\n\r\nconst getZeros = n => {\r\n  if (n < 10) return 0\r\n  let i = 0\r\n  while (n / (10 ** i) > 10) {\r\n    i += 1\r\n  }\r\n  return i\r\n}\r\n\r\nclass IssuedChart extends PureComponent {\r\n  wrapper = createRef()\r\n\r\n  handleTooltip = ({ event, data, xScale, yScale, xStart }) => {\r\n    const { showTooltip } = this.props;\r\n    const { x } = localPoint(event);\r\n    const index = Math.round((x - xStart) / xScale.step());\r\n    const d = data[index];\r\n    showTooltip({\r\n      tooltipData: Object.assign({ canceledTop: yScale(yCancealedValue(d)) }, d),\r\n      tooltipLeft: xScale(xValue(d)) + xStart,\r\n      tooltipTop: yScale(yValue(d)),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      xTickFormat,\r\n      tooltipOpen,\r\n      updateTooltip,\r\n      showTooltip,\r\n      hideTooltip,\r\n      tooltipData,\r\n      tooltipTop,\r\n      tooltipLeft,\r\n      events,\r\n      getFill,\r\n      ...props\r\n    } = this.props\r\n    return (\r\n      <div ref={this.wrapper}>\r\n        <FontSizeContext.Consumer>\r\n          {({ em }) => (\r\n            <Fragment>\r\n              <ChartBase {...props}>\r\n                {({ width, height }) => {\r\n                  const yStart = 6 * em\r\n                  const yEnd = height - 2 * em\r\n                  const yHeight = yEnd - yStart\r\n                  const xStart = em * 3\r\n                  const xEnd = width - 2 * em\r\n                  const xScale = scalePoint({\r\n                    range: [0, xEnd - xStart],\r\n                    domain: range(0, data.length),\r\n                    // padding: 0.2,\r\n                  })\r\n                  const yMax = Math.max(...data.map(yValue))\r\n                  const z = getZeros(yMax)\r\n                  const yScale = scaleLinear({\r\n                    range: [yHeight, 0],\r\n                    domain: [0, Math.ceil(yMax / (10 ** z)) * (10 ** z)],\r\n                  });\r\n                  return (\r\n                    <Group>\r\n                      <Group top={yStart} left={xStart}>\r\n                        <AreaClosed\r\n                          x={dd => xScale(xValue(dd))}\r\n                          y={dd => yScale(yValue(dd))}\r\n                          yScale={yScale}\r\n                        >\r\n                          {({ path }) => (\r\n                            <TweenShape\r\n                              d={path(data)}\r\n                              stroke={theme.colors.lightOrange}\r\n                              fill={theme.colors.lightOrange}\r\n                              opacity={0.7}\r\n                              duration={500}\r\n                            />\r\n                          )}\r\n                        </AreaClosed>\r\n                        <AreaClosed\r\n                          x={dd => xScale(xValue(dd))}\r\n                          y={dd => yScale(yCancealedValue(dd))}\r\n                          yScale={yScale}\r\n                        >\r\n                          {({ path }) => (\r\n                            <TweenShape\r\n                              d={path(data)}\r\n                              stroke={theme.colors.orange}\r\n                              fill={theme.colors.orange}\r\n                              duration={500}\r\n                            />\r\n                          )}\r\n                        </AreaClosed>\r\n                        <Grid\r\n                          top={0}\r\n                          left={0}\r\n                          xScale={xScale}\r\n                          yScale={yScale}\r\n                          stroke={theme.colors.gray}\r\n                          width={xEnd - xStart}\r\n                          height={yHeight}\r\n                          numTicksRows={3}\r\n                          numTicksColumns={0}\r\n                          columnLineStyle={{\r\n                            strokeWidth: 0,\r\n                          }}\r\n                        />\r\n                        <AxisLeft\r\n                          top={0}\r\n                          left={0}\r\n                          scale={yScale}\r\n                          numTicks={3}\r\n                          stroke=\"black\"\r\n                          strokeWidth={1.5}\r\n                          tickStroke=\"none\"\r\n                          tickLabelProps={() => ({\r\n                            fill: 'black',\r\n                            textAnchor: 'end',\r\n                            fontSize: em * 0.8,\r\n                            dx: '-0.25em',\r\n                            dy: '0.25em'\r\n                          })}\r\n                        />\r\n                        <AxisBottom\r\n                          top={yHeight}\r\n                          left={0}\r\n                          scale={xScale}\r\n                          numTicks={12}\r\n                          stroke=\"black\"\r\n                          strokeWidth={1.5}\r\n                          tickStroke=\"none\"\r\n                          tickFormat={xTickFormat}\r\n                          tickLabelProps={() => ({\r\n                            fill: 'black',\r\n                            fontSize: em * 0.8,\r\n                            textAnchor: 'middle',\r\n                          })}\r\n                        />\r\n                        {tooltipData && (\r\n                          <Line\r\n                            from={{ x: tooltipLeft - xStart, y: tooltipTop }}\r\n                            to={{ x: tooltipLeft - xStart, y: yHeight }}\r\n                            stroke=\"white\"\r\n                            strokeWidth={2}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                        )}\r\n                        <NodeGroup\r\n                          data={data}\r\n                          keyAccessor={xValue}\r\n                          start={d => ({\r\n                            xPos: xScale(xValue(d)),\r\n                            dotY: yScale(yValue(d)),\r\n                            dotCanceledY: yScale(yCancealedValue(d)),\r\n                          })}\r\n                          enter={d => ({\r\n                            dotY: [yScale(yValue(d))],\r\n                            timing: { duration: 500 },\r\n                          })}\r\n                          update={d => ({\r\n                            xPos: [xScale(xValue(d))],\r\n                            dotY: [yScale(yValue(d))],\r\n                            dotCanceledY: [yScale(yCancealedValue(d))],\r\n                            timing: { duration: 500 },\r\n                          })}\r\n                        >\r\n                          {nodes => (\r\n                            <Fragment>\r\n                              {nodes.map(({ key, data: d, state: { xPos, dotY, dotCanceledY } }) => {\r\n                                return (\r\n                                  <Fragment key={key}>\r\n                                    <circle\r\n                                      cx={xPos}\r\n                                      cy={dotY}\r\n                                      r={em / 4}\r\n                                      fill={theme.colors.orange5}\r\n                                    />\r\n                                    <circle\r\n                                      cx={xPos}\r\n                                      cy={dotCanceledY}\r\n                                      r={em / 4}\r\n                                      fill={theme.colors.orange5}\r\n                                    />\r\n                                  </Fragment>\r\n                                )\r\n                              })}\r\n                            </Fragment>\r\n                          )}\r\n                        </NodeGroup>\r\n                      </Group>\r\n                      <Group top={1.75 * em} left={xEnd - 16 * em}>\r\n                        <Group>\r\n                          <text>案件量</text>\r\n                          <rect\r\n                            x={4 * em}\r\n                            y={-1 * em}\r\n                            width={3 * em}\r\n                            height={em}\r\n                            fill={theme.colors.lightOrange}\r\n                            opacity={0.7}\r\n                          />\r\n                        </Group>\r\n                        <Group left={8 * em}>\r\n                          <text>撤銷件數</text>\r\n                          <rect\r\n                            x={5.5 * em}\r\n                            y={-1 * em}\r\n                            width={3 * em}\r\n                            height={em}\r\n                            fill={theme.colors.orange}\r\n                          />\r\n                        </Group>\r\n                      </Group>\r\n                      <Bar\r\n                        x={0}\r\n                        y={0}\r\n                        width={width}\r\n                        height={height}\r\n                        fill=\"transparent\"\r\n                        data={data}\r\n                        onTouchStart={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onTouchMove={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onMouseMove={event =>\r\n                          this.handleTooltip({\r\n                            event,\r\n                            xScale,\r\n                            xStart,\r\n                            yScale,\r\n                            data,\r\n                          })\r\n                        }\r\n                        onMouseLeave={() => hideTooltip()}\r\n                      />\r\n                      {tooltipData && (\r\n                        <g>\r\n                          <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipTop + yStart}\r\n                            r={em / 2}\r\n                            fill={theme.colors.darkBlue}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                          <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipData.canceledTop + yStart}\r\n                            r={em / 2}\r\n                            fill={theme.colors.darkBlue}\r\n                            style={{ pointerEvents: 'none' }}\r\n                          />\r\n                        </g>\r\n                      )}\r\n                      {tooltipData && createPortal((\r\n                        <TooltipBox\r\n                          position=\"absolute\"\r\n                          top={tooltipTop - 0.5 * em}\r\n                          left={tooltipLeft}\r\n                          transform=\"translateX(-50%)\"\r\n                          p=\"1em\"\r\n                          bg=\"black\"\r\n                          color=\"white\"\r\n                          whiteSpace=\"nowrap\"\r\n                          gradient=\"darkBlue\"\r\n                          borderRadius=\"0.5em\"\r\n                          zIndex={10}\r\n                          fontSize=\"0.8em\"\r\n                        >\r\n                          <Text mb=\"0.25em\">案件量 {yValue(tooltipData)}</Text>\r\n                          <Text>撤銷數 {yCancealedValue(tooltipData)}</Text>\r\n                        </TooltipBox>\r\n                      ), this.wrapper.current)}\r\n                    </Group>\r\n                  )\r\n                }}\r\n              </ChartBase>\r\n            </Fragment>\r\n          )}\r\n        </FontSizeContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTooltip(IssuedChart);\r\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport range from 'lodash/range'\nimport { NodeGroup } from 'react-move'\nimport { format } from 'd3-format'\nimport { max } from 'd3-array'\n\nimport FontSizeContext from '../../../components/ThemeProvider/FontSizeContext'\n\nimport ChartBase from '../../../components/Charts/ChartBase'\n\nconst xValue = d => d.index\nconst yValue = d => d.receivedRate\nconst pd = format('.2%')\n\nconst ReceivedChart = ({\n  data,\n  getFill,\n  xTickFormat,\n  ...props\n}) => {\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n            const yStart = 6 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n\n            const xStart = em * 3\n            const xEnd = width - em\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(0, data.length),\n              paddingInner: 0.2,\n            })\n            const yScale = scaleLinear({\n              range: [0, yHeight],\n              domain: [0, Math.ceil(max(data, yValue))],\n            });\n            return (\n              <Group>\n                <Group top={yStart} left={xStart}>\n                  <NodeGroup\n                    data={data}\n                    keyAccessor={xValue}\n                    start={d => ({\n                      xPos: xScale(xValue(d)),\n                      y: 0,\n                    })}\n                    enter={d => ({\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                    update={d => ({\n                      xPos: [xScale(xValue(d))],\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                  >\n                    {nodes => (\n                      <Fragment>\n                        {nodes.map(({ key, data: d, state: { xPos, y } }) => {\n                          const barWidth = xScale.bandwidth()\n                          return (\n                            <g key={key}>\n                              <rect\n                                fill=\"#e2e2e3\"\n                                x={xPos}\n                                y={0}\n                                width={barWidth}\n                                height={yHeight}\n                              />\n                              <rect\n                                fill={getFill(d.index)}\n                                x={xPos}\n                                y={yHeight - y}\n                                width={barWidth}\n                                height={y}\n                              />\n                              <text\n                                fontSize={em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight - y - em}\n                                textAnchor=\"middle\"\n                              >\n                                {pd(yValue(d))}\n                              </text>\n                              <text\n                                fontSize={0.8 * em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight + 1.5 * em}\n                                textAnchor=\"middle\"\n                              >\n                                {xTickFormat(xValue(d))}\n                              </text>\n                            </g>\n                          )\n                        })}\n                      </Fragment>\n                    )}\n                  </NodeGroup>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default ReceivedChart;\n","import map from 'lodash/map'\nimport reduce from 'lodash/reduce'\nimport last from 'lodash/last'\nimport get from 'lodash/get'\n\nconst keys = [\n  'canceled',\n  'canceledDollar',\n  'issued',\n  'issuedDollar',\n  'received',\n  'receivedDollar',\n]\n\nexport const getBureauTotal = (data, activeType) => data.map(({ label, id, monthData }) => ({\n  label,\n  id,\n  ...keys.reduce((allData, key) => {\n    allData[key] = monthData.reduce((all, d) => all + (activeType ? d.types[activeType].data[key] : d.data[key]), 0)\n    allData.executed = get(last(monthData), (activeType ? ['types', activeType] : []).concat('data', 'executed'))\n    return allData\n  }, {})\n})).map((d) => ({\n  ...d,\n  receiveRate: d.receivedDollar / d.issuedDollar,\n  executedRate: d.executed / d.issued,\n}))\n\nexport const getTypes = (data, lockId) => Object.values(reduce(data, (allTypes, { monthData, id }) => {\n  if (!lockId || lockId === id) {\n    monthData.forEach(m => {\n      m.types.forEach((type) => {\n        allTypes[type.id] = allTypes[type.id] || keys.reduce((df, k) => {\n          df[k] = 0\n          return df\n        }, { id: type.id, name: type.name })\n        keys.forEach(k => {\n          allTypes[type.id][k] += type.data[k]\n        })\n      })\n    })\n  }\n  return allTypes\n}, {}))\n\nexport const getMonthData = (data, activeType, lockId) => data.reduce((md, d) => {\n  if (!lockId || lockId === d.id) {\n    d.monthData.forEach((m) => {\n      md[m.month] = md[m.month] || { month: m.month }\n      keys.forEach((key) => {\n        md[m.month][key] = md[m.month][key] || 0\n        md[m.month][key] += (activeType ? m.types[activeType].data[key] : m.data[key])\n      }, {})\n    })\n  }\n  return md\n}, {})\n\nexport const mapData = data => map(data, ({ id, name, monthData }) => ({\n  label: name,\n  id,\n  monthData: monthData.map(m => ({\n    ...m,\n    types: m.types.reduce((t, td) => {\n      t[td.name] = td\n      return t\n    },{})\n  }))\n}))\n","import React, { PureComponent, createElement } from 'react';\nimport { compose } from 'redux'\nimport reduce from 'lodash/reduce'\nimport forEach from 'lodash/forEach'\nimport groupBy from 'lodash/groupBy'\nimport range from 'lodash/range'\n\nimport Box from '../../../components/Box'\nimport Flex from '../../../components/Flex'\nimport Toggler from '../../../components/Toggler'\n\nimport withDataState from '../../../services/api/withDataState'\n\nimport IssuedChart from './IssuedChart'\nimport ReceivedChart from './ReceivedChart'\n\nimport { mapData, getMonthData } from '../dataHandler'\nimport theme from '../../../components/ThemeProvider/theme';\n\nconst parseData = (d, initial) => {\n  const parsed = reduce(d, (va, { month, ...vv }) => {\n    Object.keys(vv).forEach(k => {\n      va[k] = va[k] || 0\n      va[k] += vv[k]\n    })\n    return va\n  }, initial)\n  parsed.receivedRate = parsed.issuedDollar ? parsed.receivedDollar / parsed.issuedDollar : 0\n  return parsed\n}\n\nconst colors = [\n  theme.colors.orange3,\n  theme.colors.orange5,\n  theme.colors.orange4,\n];\n\nconst path = `data/bureaus${typeof window !== 'undefined' && window.__SHOW_BUREAU_ID !== '00000000' ? `/${window.__SHOW_BUREAU_ID}` : ''}`\n\nclass YearByYear extends PureComponent {\n  static getDerivedStateFromProps(nextProps) {\n    const { year } = nextProps\n    return {\n      data: {\n        [year]: nextProps[`${path}?year=${year}`],\n        [year - 1]: nextProps[`${path}?year=${year - 1}`],\n        [year - 2]: nextProps[`${path}?year=${year - 2}`],\n      }\n    }\n  }\n\n  state = {\n    chartType: 0,\n    timeType: 0,\n  }\n\n  handleToggle = key => value => this.setState({ [key]: value })\n\n  render() {\n    const { data, chartType, timeType } = this.state\n    const { year, activeType, lockId } = this.props\n    const formattedData = reduce(data, (fd, d, year) => {\n      let md = getMonthData(mapData(d.data), activeType, lockId)\n      if (timeType) {\n        md = groupBy(md, (dd) => Math.floor((dd.month - 1) / 3))\n        forEach(md, (v, i) => {\n          fd.push(parseData(v, {\n            year,\n            quarter: +i + 1,\n            index: (year - this.props.year + 2) * 4 + i * 1,\n          }))\n        })\n      } else {\n        fd.push(parseData(md, {\n          year,\n          index: year - this.props.year + 2,\n        }))\n      }\n      return fd\n    }, [])\n    const dataLength = formattedData.length\n    return (\n      <Box position=\"relative\" mx=\"4em\">\n        {createElement(chartType ? ReceivedChart : IssuedChart, {\n          key: `t-${timeType}`,\n          data: formattedData,\n          ratio: 0.66,\n          getFill: i => {\n            let c = i\n            if (timeType) {\n              c = Math.floor(i / 4)\n            }\n            return colors[c]\n          },\n          xTickFormat: d => {\n            if (timeType) {\n              const y = Math.floor(d / 4)\n              return year - (dataLength / 4 - y) + 1 + '第' + (d % 4 + 1) + '季'\n            }\n            return year - (dataLength - d) + 1\n          },\n        })}\n        <Flex position=\"absolute\" width={1} top=\"0\">\n          <Box>\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['案件數', '收繳率']}\n              activeIndex={chartType}\n              onToggle={this.handleToggle('chartType')}\n            />\n          </Box>\n          <Box ml=\"1em\">\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['年', '季']}\n              activeIndex={timeType}\n              onToggle={this.handleToggle('timeType')}\n            />\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default (props) => createElement(compose(\n  ...range(3).map(i => withDataState(`${path}?year=${props.year - i}`))\n)(YearByYear), props);\n","import React, { createElement } from 'react';\nimport get from 'lodash/get'\n// import format from 'date-fns/format'\n\nimport Text from '../../components/Text'\nimport withDataState from '../../services/api/withDataState'\n\nconst LastUpdated = ({ lastUpdated }) => {\n  return (\n    <Text>資料更新日期：{get(lastUpdated, 'date')}</Text>\n  );\n}\n\nexport default props => createElement(withDataState('lastUpdated')(LastUpdated), props);\n","import React, { PureComponent, createElement } from 'react'\nimport { compose } from 'redux'\nimport last from 'lodash/last'\n\nimport Container from '../../components/Container'\nimport Box from '../../components/Box'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport YearButton from '../../components/YearButton'\nimport Toggler from '../../components/Toggler'\nimport Dropdown from '../../components/Dropdown';\nimport ModalButton from '../../components/ModalButton';\nimport PatternBg from '../../components/PatternBg';\n\nimport theme, { mobileOrDesktop } from '../../components/ThemeProvider/theme';\n\nimport withBureauData from '../../services/api/withBureauData'\nimport withDataState from '../../services/api/withDataState'\n\nimport Layout from '../Layout';\nimport BubbleLine from './BubbleLine'\nimport TypeDonut from './TypeDonut'\nimport PercentBars from './PercentBars'\nimport LawTops from './LawTops'\nimport YearChart from './YearChart'\n// import AvgDays from './AvgDays'\nimport YearByYear from './YearByYear'\nimport LastUpdated from './LastUpdated'\n\nimport {\n  getBureauTotal,\n  getMonthData,\n  getTypes,\n  mapData,\n} from './dataHandler'\n\nconst isTopBureau = window.__SHOW_BUREAU_ID === '00000000'\nconst singleBureau = isTopBureau && window.__BUREAU_ID !== '00000000'\n\nclass IndexPage extends PureComponent {\n  static getDerivedStateFromProps(nexProps) {\n    const { typeList, data } = nexProps\n    const mappedData = mapData(data)\n    const typeLegends = typeList.map(({ name }, i) => ({\n      label: name,\n      color: theme.colors.spectrum[theme.colors.spectrum.length - 1 - i],\n    }))\n    return { mappedData, typeLegends }\n  }\n\n  state = {\n    sortBy: 'receiveRate',\n    sortOrder: 'asc',\n    chartIndex: 0,\n    publicOnly: 0,\n    typeLegends: [],\n    year: last(this.props.yearsList),\n    lockId: singleBureau ? window.__BUREAU_ID : null,\n  }\n\n  handleTypeFilter = activeType => this.setState({ activeType })\n\n  handleChartToggle = chartIndex => this.setState({ chartIndex })\n\n  handleYearChange = year => {\n    const { updateParams } = this.props\n    updateParams({ year })\n    this.setState({ year })\n  }\n\n  setPublicOnly = publicOnly => this.setState({ publicOnly })\n\n  setLock = lockId => this.setState({ lockId })\n\n  handleReset = () => this.setState({\n    lockId: singleBureau ? window.__BUREAU_ID : null,\n    chartIndex: 0,\n    publicOnly: 0,\n    activeType: null,\n  })\n\n  render() {\n    const { data, typeList, yearsList: years } = this.props\n    const {\n      sortBy,\n      sortOrder,\n      chartIndex,\n      activeType,\n      mappedData,\n      year,\n      publicOnly,\n      typeLegends,\n      lockId,\n    } = this.state\n\n    const bureauTotal = getBureauTotal(mappedData, activeType)\n    const monthData = getMonthData(mappedData, activeType, lockId)\n    const types = getTypes(data, lockId)\n    return (\n      <Layout>\n        <Box backgroundImage=\"linear-gradient(#fff 80%, #e0e0e4 100%)\">\n          <PatternBg pt=\"2em\" pb=\"3em\">\n            <Container>\n              <Flex alignItems=\"center\">\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">案件類別</Text>\n                <Box width=\"12em\" py=\"1em\">\n                  <Dropdown\n                    placeholder=\"全部\"\n                    value={activeType}\n                    options={typeList.map(({ name }) => name)}\n                    onChange={({ value }) => this.handleTypeFilter(value)}\n                  />\n                </Box>\n                <Box flex=\"1\" />\n                <LastUpdated />\n              </Flex>\n              <Flex alignItems=\"center\">\n                <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">各{isTopBureau ? '局處' : '科室'}案件量分析</Text>\n                <YearButton\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n              </Flex>\n              <Box textAlign=\"right\" my=\"1em\">\n                {!isTopBureau && <Button onClick={() => window.history.back()} mr=\"1em\">返回全局處</Button>}\n                <Button onClick={this.handleReset}>切回預設</Button>\n              </Box>\n              <BubbleLine\n                ratio={1 / 4}\n                data={bureauTotal}\n                sortBy={sortBy}\n                sortOrder={sortOrder}\n                lockId={lockId}\n                onLock={this.setLock}\n              />\n            </Container>\n          </PatternBg>\n        </Box>\n        <Box\n          py={mobileOrDesktop(0, '2em')}\n          gradient=\"darkBlue\"\n        >\n          <Container>\n            <Flex borderBottom=\"1px solid\">\n              <Box pl=\"1em\" pr=\"2em\" pb=\"1em\" width={2 / 5} borderRight=\"1px solid\">\n                <Box position=\"relative\">\n                  {createElement(chartIndex ? PercentBars : TypeDonut , Object.assign({\n                    ratio: 0.66,\n                    data: types,\n                    legends: typeLegends,\n                    onLegendClick: this.handleTypeFilter,\n                    activeLegend: activeType,\n                  }, chartIndex ? {} : {\n                    valueGetter: d => d.issued,\n                    outerCircle: true,\n                    showLegend: true,\n                  }))}\n                  <Box position=\"absolute\" top=\"0\" left=\"0\">\n                    <Toggler activeIndex={chartIndex} onToggle={this.handleChartToggle} options={['案件數', '收繳率']} />\n                  </Box>\n                  <Box position=\"absolute\" right=\"0\" bottom=\"0\">\n                    {!chartIndex && (\n                      <ModalButton\n                        is={Button.lightBg}\n                        label=\"查看更多\"\n                        title=\"案件分類分析\"\n                      >\n                        <Box px=\"10%\">\n                          <TypeDonut\n                            ratio={0.7}\n                            valueGetter={d => d.issued}\n                            data={types}\n                            showPercentage\n                            legends={typeLegends}\n                            showLabel\n                          />\n                        </Box>\n                      </ModalButton>\n                    )}\n                  </Box>\n                </Box>\n              </Box>\n              <Box pl=\"2em\" pr=\"1em\" width={3 / 5}>\n                <Flex pt=\"0.5em\" pb=\"1.25em\" alignItems=\"center\" borderBottom=\"1px solid\">\n                  <Text fontSize=\"1.5em\"><Text.inline letterSpacing=\"0.15em\">違反法條</Text.inline> TOP 5</Text>\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"查看更多\"\n                    title=\"違反法條TOP10\"\n                    mx=\"2em\"\n                  >\n                    <Flex alignItems=\"center\">\n                      <Box mx=\"2em\">\n                        <Box my=\"1em\">\n                          <Button active={publicOnly === 0} onClick={() => this.setPublicOnly(0)}>所有法條分析</Button>\n                        </Box>\n                        <Box my=\"1em\">\n                          <Button active={publicOnly === true} onClick={() => this.setPublicOnly(true)}>公安法條分析</Button>\n                        </Box>\n                      </Box>\n                      <Box flex=\"1\" px=\"2em\">\n                        <LawTops key={10} top={10} year={year} color=\"text\" ratio={0.77} publicOnly={publicOnly} lockId={lockId} />\n                      </Box>\n                    </Flex>\n                  </ModalButton>\n                  {/* <Box flex=\"1\" /> */}\n                  {/* <AvgDays year={year} /> */}\n                </Flex>\n                <LawTops key={5} year={year} top={5} hasLine color=\"white\" ratio={0.35} lockId={lockId} />\n              </Box>\n            </Flex>\n            <Flex px=\"5%\" py=\"2em\" alignItems=\"center\">\n              <Box px=\"2em\">\n                <YearButton\n                  justifyContent=\"center\"\n                  darkBg\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n                <Box fontSize=\"1.5em\" letterSpacing=\"0.15em\" my=\"1em\" borderBottom=\"1px solid\" pb=\"0.5rem\">月案件量分析</Box>\n                <Box textAlign=\"center\">\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"看歷年分析\"\n                    title={`${year - 2}-${year}案件量分析`}\n                  >\n                    <YearByYear year={year} activeType={activeType} lockId={lockId} />\n                  </ModalButton>\n                </Box>\n              </Box>\n              <Box flex=\"1\">\n                <YearChart ratio={1 / 5} data={monthData} />\n              </Box>\n            </Flex>\n          </Container>\n        </Box>\n      </Layout>\n    )\n  }\n}\n\n\nexport default compose(\n  withDataState('yearsList'),\n  withDataState('typeList'),\n  withBureauData,\n)(IndexPage)\n","import React from 'react';\n\nimport HomePage from './containers/HomePage'\n\nfunction App() {\n  return <HomePage />\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport { fontSize } from 'styled-system'\n\nimport theme from './theme';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Comfortaa:400,700&display=swap');\n  body {\n    font-family: ${theme.font};\n    ${fontSize};\n    min-width: 100%;\n    min-height: 100%;\n    color: ${theme.colors.text};\n  }\n`;\n","import React, { Fragment } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport 'sanitize.css';\nimport { SizeMe } from 'react-sizeme'\n\nimport FontSizeContext from './FontSizeContext'\nimport GlobalStyles from './global-styles';\n\nimport theme from './theme';\n\nexport default ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <SizeMe>\n      {({ size: { width } }) => {\n        const fontSize = Math.round(Math.max(width, 800) / 94)\n        return (\n          <div>\n            <FontSizeContext.Provider value={{ em: fontSize }}>\n              <Fragment>\n                <GlobalStyles fontSize={fontSize} />\n                {children}\n              </Fragment>\n            </FontSizeContext.Provider>\n          </div>\n        )\n      }}\n    </SizeMe>\n  </ThemeProvider>\n);\n","/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}\n","// const BASE_URI = 'https://relab.cc/law-api-test/v2';\nconst BASE_URI = 'https://59.120.75.229/GTFK/v2';\n\n// const BASE = process.env.NODE_ENV === 'production' ? BASE_URI : BASE_URI_LOCAL;\n\nexport const API_BASE = BASE_URI;\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { actionTypes } from 'redux-resource';\r\nimport reduce from 'lodash/reduce'\r\nimport isObject from 'lodash/isObject'\r\n\r\nimport sendRequest from '../../utils/request';\r\n\r\nimport { API_BASE } from './config';\r\nimport { GET_DATA, receivedDataSuccess, receivedDataError } from './reducer';\r\n\r\nfunction* handleRequest(target, onSuccess, onError) {\r\n  try {\r\n    const res = yield call(sendRequest, target);\r\n    yield put(onSuccess(res));\r\n  } catch (error) {\r\n    console.error(error)\r\n    yield put(onError(error));\r\n  }\r\n}\r\n\r\nfunction* handleManualRead({ payload: { key, params } }) {\r\n  const qs = isObject(params) ? reduce(params, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\r\n  const resourceBase = `${API_BASE}/${key}${qs}`;\r\n  yield call(\r\n    handleRequest,\r\n    resourceBase,\r\n    (data) => receivedDataSuccess({\r\n      key,\r\n      data,\r\n    }),\r\n    // onError\r\n    () => receivedDataError({ key }),\r\n  );\r\n}\r\n\r\nfunction* handleRead({ resourceType, resources, requestKey, requestParams, transformer }) {\r\n  const qs = isObject(requestParams) ? reduce(requestParams, (q, value, key) => `${q}${key}=${encodeURIComponent(value)}&`, '?') : ''\r\n  const resourceBase = `${API_BASE}/${resourceType}${qs}`;\r\n  if (resources) {\r\n    yield all(\r\n      resources.map(id =>\r\n        call(\r\n          handleRequest,\r\n          // target\r\n          `${resourceBase}/${id}`,\r\n          // onSuccess\r\n          data => ({\r\n            type: actionTypes.READ_RESOURCES_SUCCEEDED,\r\n            resourceType,\r\n            resources: [transformer ? transformer(data) : data],\r\n          }),\r\n          // onError\r\n          () => ({\r\n            type: actionTypes.READ_RESOURCES_FAILED,\r\n            resourceType,\r\n            resources: [id],\r\n          }),\r\n        ),\r\n      ),\r\n    );\r\n  } else {\r\n    yield call(\r\n      handleRequest,\r\n      resourceBase,\r\n      ({ data }) => ({\r\n        type: actionTypes.READ_RESOURCES_SUCCEEDED,\r\n        resourceType,\r\n        resources: transformer ? data.map(transformer) : data,\r\n        requestKey,\r\n      }),\r\n      // onError\r\n      () => ({\r\n        type: actionTypes.READ_RESOURCES_FAILED,\r\n        resourceType,\r\n        requestKey,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nexport default function* apiSagas() {\r\n  yield all([\r\n    takeEvery(actionTypes.READ_RESOURCES_PENDING, handleRead),\r\n    takeEvery(GET_DATA, handleManualRead),\r\n  ]);\r\n}\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux';\nimport { calculateResponsiveState } from 'redux-responsive'\n\nimport ThemeProvider from './components/ThemeProvider';\nimport creatStore from './stores/createStore';\n\nconst store = creatStore();\n\n// window.__DEPARTMENT_ID = '1631100000000'\n// window.__BUREAU_ID = '13'\nwindow.__BUREAU_ID = window.__BUREAU_ID || '00000000'\nwindow.__SHOW_BUREAU_ID = '00000000'\nif (window.location.search) {\n  const res = /showBureau=([^&]+)/g.exec(window.location.search)\n  if (res && res[1]) {\n    const id = decodeURIComponent(res[1])\n    window.__SHOW_BUREAU_ID = id\n    window.__BUREAU_ID = id\n  }\n}\n\nclass InitialDispatch extends Component {\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      store.dispatch(calculateResponsiveState(window))\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default ({ children }) => (\n  <Provider store={store}>\n    <InitialDispatch>\n      <ThemeProvider>{children}</ThemeProvider>\n    </InitialDispatch>\n  </Provider>\n)\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport { createResponsiveStoreEnhancer } from 'redux-responsive';\nimport createSagaMiddleware from 'redux-saga';\n\nimport apiSagas from '../services/api/sagas';\nimport createReducer from './reducers';\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    createResponsiveStoreEnhancer({ calculateInitialState: false }),\n  ];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers =\n    (process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n  /* eslint-enable */\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n\n  store.runSaga = sagaMiddleware.run;\n  sagaMiddleware.run(apiSagas);\n  store.injectedReducers = {}; // Reducer registry\n\n  return store;\n}\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WithProvider from './with-provider'\n\nif (document.getElementById('root')) {\n  const App = require('./App').default;\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('root'));\n}\n\nif (document.getElementById('summary')) {\n  const App = require('./Summary').default;\n  ReactDOM.render(<WithProvider><App /></WithProvider>, document.getElementById('summary'));\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  color,\n  letterSpacing,\n  display,\n} from 'styled-system';\nimport tag from 'clean-tag';\n\nimport blacklist from './utils/blacklist';\nimport { customColor } from './utils/getColor';\n\nconst linkStyle = css`\n  ${fontSize}\n  ${space}\n  ${color}\n  ${fontWeight}\n  ${lineHeight}\n  ${letterSpacing}\n  ${display}\n  text-decoration: none;\n  ${({ disabled }) => disabled && `\n    pointer-events: none;\n  `}\n  &:hover {\n    ${customColor('hoverColor')};\n  }\n`;\n\nconst NomalLink = styled(tag)`\n  ${linkStyle}\n`;\n\n\nconst Link = ({ blacklist, ...props }) => {\n  return (\n    <NomalLink\n      is=\"a\"\n      target=\"_blank\"\n      blacklist={blacklist}\n      color=\"text\"\n      { ...props }\n    />\n  );\n};\n\nLink.displayName = 'Link';\n\nLink.defaultProps = {\n  blacklist,\n};\n\nexport default Link;\n","import React from 'react';\r\n\r\nimport Box from '../Box'\r\nimport line from './line.svg'\r\n\r\nconst PatternBg = ({ children, ...props }) => (\r\n  <Box\r\n    {...props}\r\n    backgroundImage={`url('${line}')`}\r\n  >\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nPatternBg.defaultProps = {\r\n  backgroundSize: '20px',\r\n  backgroundRepeat: 'repeat no-repeat',\r\n  backgroundPosition: 'center',\r\n}\r\n\r\nexport default PatternBg;\r\n","import React from 'react'\n\nimport Container from '../../components/Container'\nimport Box from '../../components/Box'\nimport Link from '../../components/Link'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport PatternBg from '../../components/PatternBg';\nimport LineBg from '../../components/LineBg';\n\nimport withDataState from '../../services/api/withDataState'\n\nimport Layout from '../Layout';\n// {label.replace(String.fromCharCode(92).concat('n'), '\\n')}\n\nconst Module = ({ color, value, label, unit, datas, ...props}) => (\n  <Flex flexWrap=\"wrap\" px=\"4em\" {...props}>\n    {datas.map(({ value, label, unit, url }, index) => (\n      <Box pr=\"1em\" width={1 / 3} key={index}>\n        <Box is={url && (p => <Link href={url} display=\"block\" {...p} />)} bg=\"#f4f4f4\" my=\"1em\" borderRadius=\"5em\" py=\"1.5em\">\n          <Flex alignItems=\"center\" px=\"2em\">\n            <Box width=\"7.5em\" textAlign=\"right\" borderRight=\"2px solid\" pr=\"1em\" py=\"0.5em\">\n              <Text.inline fontSize=\"2em\" color={color}>{value}</Text.inline>\n              <Text.inline pl=\"0.25em\">{unit}</Text.inline>\n            </Box>\n            <Box flex=\"1\" pl=\"1em\" py=\"0.5em\">\n              {label}\n            </Box>\n          </Flex>\n        </Box>\n      </Box>\n    ))}\n  </Flex>\n)\n\nconst SummaryPage = ({ summary }) => {\n  const primarys = summary.primary;\n  const secondarys = summary.secondary\n\n  return (\n    <Layout>\n      <PatternBg py=\"2em\">\n        <Container>\n          <Module datas={primarys} color=\"textYellow\" my=\"2em\" />\n          <LineBg>\n            <Box height=\"2em\" />\n          </LineBg>\n          <Module datas={secondarys} color=\"textBlue\" />\n        </Container>\n      </PatternBg>\n    </Layout>\n  )\n}\n\n\nexport default withDataState('summary', window.__DEPARTMENT_ID && { departmentId: window.__DEPARTMENT_ID })(SummaryPage)\n","import React from 'react';\n\nimport SummaryPage from './containers/SummaryPage'\n\nfunction App() {\n  return <SummaryPage />\n}\n\nexport default App;\n","const allProps = [\n  'margin',\n  'm',\n  'marginTop',\n  'mt',\n  'marginBottom',\n  'mb',\n  'marginLeft',\n  'ml',\n  'marginRight',\n  'mr',\n  'mx',\n  'my',\n  'padding',\n  'p',\n  'paddingTop',\n  'pt',\n  'paddingBottom',\n  'pb',\n  'paddingLeft',\n  'pl',\n  'paddingRight',\n  'pr',\n  'px',\n  'py',\n  'width',\n  'fontSize',\n  'fontFamily',\n  'fontWeight',\n  'lineHeight',\n  'textAlign',\n  'fontStyle',\n  'letterSpacing',\n  'display',\n  'maxWidth',\n  'minWidth',\n  'height',\n  'maxHeight',\n  'minHeight',\n  'color',\n  'backgroundColor',\n  'bg',\n  'verticalAlign',\n  'alignItems',\n  'alignContent',\n  'justifyItems',\n  'justifyContent',\n  'flexWrap',\n  'flexBasis',\n  'flexDirection',\n  'flex',\n  'justifySelf',\n  'alignSelf',\n  'order',\n  'gridGap',\n  'gridColumnGap',\n  'gridRowGap',\n  'gridColumn',\n  'gridRow',\n  'gridAutoFlow',\n  'gridAutoColumns',\n  'gridAutoRows',\n  'gridTemplateColumns',\n  'gridTemplateRows',\n  'gridTemplateAreas',\n  'gridArea',\n  'border',\n  'borderWidth',\n  'borderStyle',\n  'borderColor',\n  'borderTop',\n  'borderRight',\n  'borderBottom',\n  'borderLeft',\n  'borderRadius',\n  'boxShadow',\n  'opacity',\n  'overflow',\n  'background',\n  'backgroundImage',\n  'backgroundSize',\n  'backgroundPosition',\n  'backgroundRepeat',\n  'position',\n  'zIndex',\n  'top',\n  'right',\n  'bottom',\n  'left',\n];\n\nexport default [\n  ...allProps,\n  'transform',\n  'transition',\n  'overflow',\n  'opacity',\n  'alpha',\n  'hoverColor',\n  'hoverBg',\n  'hoverBorder',\n  'hoverBgImg',\n  'zOrder',\n  'verticalAlign',\n  'whiteSpace',\n  'dispatch',\n  'isMobile',\n  'browser',\n  'gradient',\n];\n","import React, { PureComponent, createElement } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport { getData } from './reducer'\n\nimport { STATUS_LOADED, STATUS_LOADING, STATUS_ERROR } from './constants'\n\nexport default (key, params) => {\n  const SIG = `_LAW.state.${md5(key + params ? JSON.stringify(params) : '')}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      state = {}\n\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      request = (skip) => {\n        if (!this.checkIsPending()) {\n          if (skip || !this.checkIsDone()) {\n            this.props.getData({ key, params })\n          }\n        }\n      };\n\n      checkIsPending = () => this.props.status === STATUS_LOADING\n\n      checkIsDone = () => this.props.status === STATUS_LOADED || this.props.status === STATUS_ERROR\n\n      render() {\n        const { data, status, ...props } = this.props\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...props,\n            [key]: data,\n            resync: () => this.request(true),\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      data: state.getIn(['api', key, 'data']),\n      status: state.getIn(['api', key, 'status']),\n    })\n\n    const mapDispatchToProps = dispatch => bindActionCreators({\n      getData,\n    }, dispatch)\n    return connect(mapStateToProps, mapDispatchToProps)(WithData)\n  };\n}\n","import { fromJS } from 'immutable';\nimport { createAction, handleActions } from 'redux-actions'\n\nimport {\n  STATUS_ERROR,\n  STATUS_LOADED,\n  STATUS_LOADING,\n} from './constants'\n\nexport const GET_DATA = 'API/GET_DATA'\n\nexport const getData = createAction(GET_DATA)\nexport const receivedDataSuccess = createAction('API/RECEIVED_DATA_SUCCESS')\nexport const receivedDataError = createAction('API/RECEIVED_DATA_ERROR')\n\nconst initialState = fromJS({})\n\nconst reducer = handleActions({\n  [getData]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_LOADING),\n  [receivedDataSuccess]: (state, { payload: { key, data } }) => state\n    .setIn([key, 'status'], STATUS_LOADED)\n    .setIn([key, 'data'], data),\n  [receivedDataError]: (state, { payload: { key } }) => state.setIn([key, 'status'], STATUS_ERROR),\n}, initialState)\n\nexport default reducer\n","export const STATUS_LOADING = 'STATUS_LOADING';\nexport const STATUS_LOADED = 'STATUS_LOADED';\nexport const STATUS_ERROR = 'STATUS_ERROR';\n","import merge from 'lodash/merge';\r\nimport { style } from 'styled-system';\r\n\r\nconst getConfig = (key, options) => merge({\r\n  prop: key,\r\n  cssProperty: key,\r\n}, options);\r\n\r\nconst injectProps = (key, options) => style(getConfig(key, options));\r\n\r\nexport default injectProps;\r\n"],"sourceRoot":""}