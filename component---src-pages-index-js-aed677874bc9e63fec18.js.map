{"version":3,"sources":["webpack:///./src/components/Container.js","webpack:///./src/components/Flex.js","webpack:///./src/components/Text.js","webpack:///./src/components/utils/getColor.js","webpack:///./src/components/Button.js","webpack:///./src/components/YearButton.js","webpack:///./src/components/Toggler.js","webpack:///./src/components/Dropdown.js","webpack:///./src/hoc/withResponsive.js","webpack:///./src/components/Circle.js","webpack:///./src/components/Modal.js","webpack:///./src/components/ModalButton.js","webpack:///./src/utils/checkStore.js","webpack:///./src/utils/reducerInjectors.js","webpack:///./src/utils/injectReducer.js","webpack:///./src/services/api/withData.js","webpack:///./src/services/api/withDataState.js","webpack:///./src/components/Charts/ChartBase.js","webpack:///./src/components/Charts/LineBreakText.js","webpack:///./src/containers/HomePage/InfoSection.js","webpack:///./src/containers/HomePage/BubbleLine.js","webpack:///./src/components/Charts/TweenShape.js","webpack:///./src/containers/HomePage/TypeDonut.js","webpack:///./src/containers/HomePage/PercentBars.js","webpack:///./src/containers/HomePage/LawTops.js","webpack:///./src/services/api/withLawData.js","webpack:///./src/containers/HomePage/YearChart.js","webpack:///./src/containers/HomePage/AvgDays.js","webpack:///./src/containers/HomePage/YearByYear/IssuedChart.js","webpack:///./src/containers/HomePage/YearByYear/ReceivedChart.js","webpack:///./src/containers/HomePage/dataHandler.js","webpack:///./src/containers/HomePage/YearByYear/index.js","webpack:///./src/containers/HomePage/index.js","webpack:///./src/services/api/withBureauData.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/containers/Layout/index.js"],"names":["Container","props","react_default","a","createElement","Box","defaultProps","mx","px","width","displayName","Flex","styled","withConfig","componentId","flexbox","display","blacklist","Text","tag","typography","space","color","position","injectProps","is","fontSize","inline","Object","assign","bold","fontWeight","thin","range","forEach","key","h","customColor","prop","cssProperty","style","active","css","buttonStyle","layout","backgroundImage","variant","scale","border","borderColor","borderRadius","themeGet","disabled","ButtonBase","InButtonSpan","Button","_ref","leftIcon","rightIcon","iconSpacing","children","verticalAlign","_objectWithoutPropertiesLoose","mr","Button_InButtonSpan","ml","bg","gradient","hoverColor","hoverBg","hoverBgImg","hoverBorder","py","lightBg","Button_Button","theme","gradients","darkBlue","outline","transparent","YearButton","_this","_PureComponent","call","this","handleNextYear","newYear","state","activeYear","setState","onChange","years","handleLastYear","currentYear","length","findIndex","y","render","_this$props","darkBg","YearButton_objectWithoutPropertiesLoose","components_Flex","alignItems","onClick","io_index_esm","size","PureComponent","Toggler","options","activeIndex","onToggle","poses","map","useState","FontSizeContext","Consumer","_ref2","em","left","top","bottom","transition","transform","label","i","react_measure_dist_index_esm","bounds","onResize","_ref3","_ref4","measureRef","ref","StyledDropdown","Dropdown","CustomDropdown","isMobile","value","onBlur","placeholder","name","Dropdown_objectWithoutPropertiesLoose","concat","withResponsive","WrappedComp","connect","browser","get","lessThan","md","Circle","Circle_objectWithoutPropertiesLoose","pt","right","lineHeight","propTypes","PropTypes","node","string","oneOfType","func","defaultStyles","overlay","zIndex","zOrder","backgroundColor","content","marginRight","padding","overflow","Modal","setAppElement","customStyles","title","Modal_objectWithoutPropertiesLoose","lib_default","merge","justifyContent","pb","borderBottom","components_Text","letterSpacing","components_Circle","p","components_Button","onRequestClose","m","ModalButton","openModal","open","closeModal","ModalButton_objectWithoutPropertiesLoose","react","isOpen","checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","injectedReducers","isObject","invariant","conformsTo","injectReducerFactory","isValid","reducer","isString","isEmpty","Reflect","has","createReducer","utils_injectReducer","WrappedComponent","ReducerInjector","_React$Component","_len","arguments","args","Array","_key","apply","injectors","context","injectReducer","_proto","prototype","componentWillMount","React","Component","contextType","ReactReduxContext","hoistNonReactStatics","withData","params","ids","isArray","isNumber","listMode","resources","SIG","md5","JSON","stringify","SubComp","window","WithData","request","skip","requestParams","checkIsPending","checkIsDone","type","actionTypes","READ_RESOURCES_PENDING","resourceType","undefined","requestKey","setTimeout","resync","updateParams","checkStatus","status","requestStatuses","PENDING","SUCCEEDED","FAILED","componentDidMount","_Object$assign","data","textAlign","my","withReducer","resourceReducer","comp","compose","withDataState","getData","STATUS_LOADING","STATUS_LOADED","STATUS_ERROR","_this2","withDataState_objectWithoutPropertiesLoose","getIn","bindActionCreators","ChartBase","dimensions","handleResize","debounce","ratio","ChartBase_objectWithoutPropertiesLoose","_this$state$dimension","height","LineBreakText","x","maxLength","lineBefore","fillFront","LineBreakText_objectWithoutPropertiesLoose","w","yStart","yEnd","lines","str","strArr","from","reverse","reduce","st","substr","backwardAutoLineBreak","yPos","c","texts","Math","min","max","fill","num","format","InfoSection","xEnd","main","sub","mainYStart","subYStart","mainValueStart","unit","mainLabelStart","toString","subValueStart","subLabelStart","labelStart","x1","x2","y1","y2","stroke","strokeWidth","textAnchor","colors","primary","gray","emPercent","n","round","canGoDown","__ID","BubbleLine","wrapper","createRef","handleTooltip","event","xScale","localPoint","d","invert","activeId","id","handleClick","lockId","onLock","getDerivedStateFromProps","namedData","nd","_this$props2","sortBy","sortOrder","BubbleLine_objectWithoutPropertiesLoose","_this$state","sortedData","loSortBy","Charts_ChartBase","rLabelHeight","rMax","leftLabelWidth","xStart","lableY","rateY","dollarRateY","scaleLinear","domain","rScale","scalePower","issued","exponent","vx_gradient_es","to","darkerBlue","vertical","orange6","orange2","orange4","toOpacity","opacity","rx","text","strokeLinecap","_ref5","Charts_LineBreakText","react_move_es","start","update","timing","duration","lightGray","vx_shape_es","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","keyAccessor","cx","r","otherOpacity","centerR","enter","centerActive","leave","nodes","_ref6","_ref6$state","cy","pointerEvents","darkGray","receiveRate","receiveDollarRate","_ref7","_ref7$state","HoverSensor","_ref8","isHover","boxHeight","boxWidth","cursor","createPortal","vx_group_es","points","join","orange3","current","HomePage_InfoSection","sum","issuedDollar","received","receivedDollar","canceled","animate","requestAnimationFrame","TWEEN","TweenShape","_Component","pathRef","updatePath","parsed","SVGPathData","toAbs","commands","tweens","index","prevParsed","toValues","pickBy","tween","Tween","mapValues","v","k","easing","Easing","Quadratic","InOut","onUpdate","handleUpdate","tick","every","Boolean","doUpdatePath","setAttribute","encodeSVGPath","shouldComponentUpdate","componentWillUnmount","stop","TweenShape_objectWithoutPropertiesLoose","TypeDonut","outerShapes","handleOuterShape","legends","valueGetter","totalVaue","dataLength","labelLength","floor","getColorByName","cn","l","getIndexByName","onLegendClick","activeLegend","outerCircle","showLegend","showLabel","showPercentage","TypeDonut_objectWithoutPropertiesLoose","donutR","legendBottom","legend","pieValue","outerRadius","innerRadius","padAngle","pieSort","b","pie","arcs","arc","path","sideOrders","scaleLabelY","sides","groupBy","centroid","side","sign","distanceX","abs","distanceY","sideGroups","so","s","ss","sorted","sort","slice","otherI","scaleBand","centX","centY","breakX","_pie$path$centroid","centroidX","centroidY","startAngle","hasSpaceForLabel","endAngle","Charts_TweenShape","dy","bandwidth","pd","PercentBars","PercentBars_objectWithoutPropertiesLoose","dataByKey","dk","legendsLength","LawTops","componentDidUpdate","prevProps","year","hasLine","count","law","HomePage_LawTops","xValue","month","yValue","YearChart","YearChart_objectWithoutPropertiesLoose","formattedData","receivedRate","yHeight","paddingInner","paddingOuter","percentYScale","valueYScale","ceil","barWidth","vx_grid_es","yScale","numTicksRows","numTicksColumns","columnLineStyle","vx_axis_es","numTicks","tickStroke","tickLabelProps","dx","tickFormat","dd","lightOrange","xPos","barHeight","dotY","_ref5$state","barY","dotX","spectrum","AvgDays","prevState","avgDays","HomePage_AvgDays","TooltipBox","yCancealedValue","IssuedChart","showTooltip","step","tooltipData","canceledTop","tooltipLeft","tooltipTop","xTickFormat","hideTooltip","showTooltop","events","IssuedChart_objectWithoutPropertiesLoose","scalePoint","yMax","z","pow","getZeros","orange","dotCanceledY","whiteSpace","withTooltip","ReceivedChart","ReceivedChart_objectWithoutPropertiesLoose","_ref4$state","keys","getMonthData","activeType","monthData","types","parseData","initial","va","vv","YearByYear_objectWithoutPropertiesLoose","YearByYear","chartType","timeType","handleToggle","_this$setState","nextProps","_data","fd","push","quarter","components_Toggler","HomePage_YearByYear","IndexPage","chartIndex","lawType","typeLegends","last","yearsList","handleTypeFilter","handleChartToggle","handleYearChange","setLawType","setLock","nexProps","typeList","mappedData","t","td","bureauTotal","allData","all","getBureauTotal","values","allTypes","getTypes","Layout","components_Container","components_YearButton","HomePage_BubbleLine","mobileOrDesktop","pl","pr","borderRight","components_ModalButton","HomePage_TypeDonut","flex","HomePage_YearChart","Page","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","pathname","isRequired","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","StaticQuery","object","gatsby_browser_entry_StaticQuery","_ref2$site$siteMetada","site","siteMetadata","description","url","Helmet_default","lang","rel","sizes","href","withPrefix","property","minWidth","_2669241669"],"mappings":"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","file":"component---src-pages-index-js-aed677874bc9e63fec18.js","sourcesContent":["import React from 'react';\n\nimport Box from './Box';\n\nconst Container = (props) => <Box {...props} />;\n\nContainer.defaultProps = {\n  mx: 'auto',\n  px: ['1em', null, '2em'],\n  width: 1,\n};\n\nContainer.displayName = 'Container';\n\nexport default Container;\n","import { flexbox } from 'styled-system';\r\nimport styled from 'styled-components';\r\n\r\nimport Box from './Box';\r\nimport blacklist from './utils/blacklist'\r\n\r\nconst Flex = styled(Box)`\r\n  ${flexbox}\r\n`;\r\n\r\nFlex.defaultProps = {\r\n  display: 'flex',\r\n  blacklist,\r\n};\r\n\r\nFlex.displayName = 'Flex';\r\n\r\nexport default Flex;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport range from 'lodash/range';\r\nimport {\r\n  typography,\r\n  space,\r\n  color,\r\n  display,\r\n  position,\r\n} from 'styled-system';\r\nimport tag from 'clean-tag';\r\n\r\nimport blacklist from './utils/blacklist';\r\nimport injectProps from './utils/injectProps';\r\n\r\nconst Text = styled(tag)`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  ${typography}\r\n  ${display}\r\n  ${space}\r\n  ${color}\r\n  ${position}\r\n  ${injectProps('textTransform')}\r\n`;\r\n\r\nText.defaultProps = {\r\n  is: 'p',\r\n  fontSize: '1em',\r\n  // lineHeight: 1.5,\r\n  blacklist,\r\n};\r\n\r\nText.inline = (props) => <Text is=\"span\" {...props} />;\r\nText.bold = (props) => <Text fontWeight=\"bold\" {...props} />;\r\nText.thin = (props) => <Text fontWeight=\"200\" {...props} />;\r\n\r\nrange(1, 7).forEach((key) => {\r\n  const h = `h${key}`;\r\n  Text[h] = (props) => (\r\n    <Text\r\n      is={h}\r\n      fontSize={`${1 + ((6 - key) * 0.125)}em`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nText.displayName = 'Text';\r\n\r\nexport default Text;\r\n","import { style } from 'styled-system';\r\n\r\nexport const customColor = (prop, cssProperty = 'color') => style ({\r\n  prop,\r\n  cssProperty,\r\n  key: 'colors',\r\n});\r\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  border,\n  borderRadius,\n  backgroundImage,\n  position,\n  borderColor,\n  variant,\n} from 'styled-system';\nimport themeGet from '@styled-system/theme-get';\nimport tag from 'clean-tag';\n\nimport Box from './Box';\nimport theme from './ThemeProvider/theme';\n\nimport { customColor } from './utils/getColor';\nimport blacklist from './utils/blacklist';\n\nconst active = css`\n  ${customColor('hoverColor')};\n  ${customColor('hoverBg', 'backgroundColor')};\n  ${customColor('hoverBgImg', 'backgroundImage')};\n  ${customColor('hoverBorder', 'borderColor')};\n`;\n\nexport const buttonStyle = css`\n  padding: 0;\n  border: none;\n  font-family: inherit;\n  line-height: 1;\n  text-decoration: none;\n  ${typography}\n  ${layout}\n  ${position}\n  ${backgroundImage}\n  ${variant({ scale: 'gradients', prop: 'gradient' })}\n  ${space}\n  ${color}\n  ${border}\n  ${borderColor}\n  ${borderRadius}\n  appearance: none;\n  transition: all ${themeGet('duration', 250)}ms;\n  cursor: pointer;\n  &:hover {\n    ${props => !props.disabled && active}\n    outline: none;\n  }\n  ${props => props.active && !props.disabled && active}\n  ${props =>\n    props.disabled &&\n    `\n    cursor: not-allowed;\n    opacity: 0.5;\n  `}\n`;\n\nconst ButtonBase = styled(tag)`\n  ${buttonStyle};\n`;\n\nconst InButtonSpan = props => <Box is=\"span\" {...props} />;\n\nconst Button = ({\n  leftIcon,\n  rightIcon,\n  iconSpacing,\n  children,\n  verticalAlign,\n  ...props\n}) => (\n  <ButtonBase {...props}>\n    {leftIcon ? (\n      <Box is={leftIcon} mr={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n    <InButtonSpan verticalAlign={verticalAlign}>{children}</InButtonSpan>\n    {rightIcon ? (\n      <Box is={rightIcon} ml={iconSpacing} verticalAlign={verticalAlign} />\n    ) : null}\n  </ButtonBase>\n);\n\nButton.defaultProps = {\n  blacklist,\n  is: 'button',\n  border: '1px solid',\n  borderColor: 'darkBlue',\n  bg: 'darkBlue',\n  gradient: 'darkBlue',\n  color: 'white',\n  hoverColor: 'darkBlue',\n  hoverBg: 'white',\n  hoverBgImg: 'none',\n  hoverBorder: 'darkBlue',\n  px: '1.25em',\n  py: '0.5em',\n  fontWeight: 'bold',\n  iconSpacing: '0.25em',\n  borderRadius: '1.25em',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n};\n\nButton.displayName = 'Button';\n\nButton.lightBg = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"white\"\n    hoverColor=\"white\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    hoverBorder=\"white\"\n    {...props}\n  />\n);\n\nButton.border = props => (\n  <Button\n    bg=\"white\"\n    color=\"darkBlue\"\n    gradient=\"none\"\n    borderColor=\"darkBlue\"\n    hoverColor=\"white\"\n    hoverBg=\"none\"\n    hoverBgImg={theme.gradients.darkBlue.backgroundImage}\n    {...props}\n  />\n);\n\nButton.outline = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid\"\n    borderColor=\"primary\"\n    bg=\"transparent\"\n    color=\"primary\"\n    hoverColor=\"white\"\n    {...props}\n  />\n);\n\nButton.transparent = props => (\n  <Button\n    gradient=\"none\"\n    border=\"1px solid transparent\"\n    bg=\"transparent\"\n    color=\"text\"\n    hoverBorder=\"primary\"\n    {...props}\n  />\n);\n\nexport default Button;\n","import React, { createElement, PureComponent } from 'react';\nimport { IoMdArrowDropleft,  IoMdArrowDropright} from 'react-icons/io';\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Button from './Button'\n\nclass YearButton extends PureComponent {\n  static defaultProps = {\n    onChange: () => {},\n  }\n\n  constructor(props) {\n    super(props);\n    const { currentYear, years } = props;\n    this.state = {\n      activeYear: typeof currentYear === 'undefined' ? years.length - 1 : years.findIndex(y => y === currentYear),\n    }\n  }\n\n  handleNextYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear + 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  handleLastYear = () => {\n    const { activeYear } = this.state\n    const newYear = activeYear - 1\n    this.setState({ activeYear: newYear }, () => {\n      this.props.onChange(this.props.years[newYear])\n    })\n  }\n\n  render() {\n    const { currentYear, years, darkBg, onChange, ...props} = this.props\n    const { activeYear } = this.state\n    return (\n      <Flex alignItems=\"center\" {...props}>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: !activeYear,\n          onClick: this.handleLastYear,\n        }, <IoMdArrowDropleft size=\"1.5em\" />)}\n        <Box px=\"1.5em\" py=\"0.375em\" border=\"1px solid\" mx=\"0.5em\" borderRadius=\"0.5em\">\n          {years[activeYear]}\n        </Box>\n        {createElement(darkBg ? Button.lightBg : Button, {\n          px: '0.125em',\n          py: '0.125em',\n          borderRadius: '0.25em',\n          disabled: activeYear === years.length - 1,\n          onClick: this.handleNextYear,\n        }, <IoMdArrowDropright size=\"1.5em\" />)}\n      </Flex>\n    );\n  }\n}\n\nexport default YearButton;\n","import React, { useState } from 'react';\nimport Measure from 'react-measure'\n\nimport FontSizeContext from './ThemeProvider/FontSizeContext'\nimport Box from './Box'\n\nconst Toggler = ({ options, activeIndex, onToggle, color, bg }) => {\n  const poses = options.map(() => useState({}))\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <Box borderRadius=\"1.5em\" bg={bg} px=\"0.5em\">\n          <Box position=\"relative\">\n            <Box\n              position=\"absolute\"\n              left={poses[activeIndex][0].left - poses[0][0].left - em * 0.65}\n              top=\"50%\"\n              bottom=\"0\"\n              width={poses[activeIndex][0].width + 1.3 * em}\n              transition=\"all 0.25s\"\n            >\n              <Box py=\"1.25em\" bg={color} transform=\"translateY(-50%)\" borderRadius=\"1.25em\" />\n            </Box>\n            <Box position=\"relative\">\n              {options.map((label, i) => (\n                <Measure bounds onResize={({ bounds }) => poses[i][1](bounds)} key={i}>\n                  {({ measureRef }) => (\n                    <Box.inline ref={measureRef} px=\"1.25em\" py=\"0.5em\" color=\"white\" onClick={() => onToggle(i)}>\n                      {label}\n                    </Box.inline>\n                  )}\n                </Measure>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nToggler.defaultProps = {\n  color: 'primary',\n  bg: 'rgba(255,255,255,0.2)',\n  onToggle: () => {},\n}\n\nexport default Toggler;\n","import React from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport styled from 'styled-components';\n\nimport themeGet from '@styled-system/theme-get';\nimport Box from './Box'\n\nimport withResponsive from '../hoc/withResponsive'\n\nconst StyledDropdown = styled(Dropdown)`\n  .Dropdown-control {\n    border: 1px solid;\n    border-radius: 0.5em;\n    text-align: center;\n    background-color: white;\n    color: black;\n    font-family: inherit;\n    padding: 0.25em;\n    font-size: 1em;\n    cursor: pointer;\n    transition: none;\n  }\n  &.is-open {\n    .Dropdown-control {\n      border-radius: 0.5em 0.5em 0em 0em;\n    }\n  }\n  .Dropdown-menu {\n    border: 1px solid;\n    transform: translateY(1px);\n    border-radius: 0 0 0.5em 0.5em;\n  }\n  .Dropdown-option {\n    color: inherit;\n    text-align: center;\n    padding: 0.5em 1em;\n    border-bottom: 1px solid gray;\n    &.is-selected {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n    &:hover {\n      background-color: ${themeGet('colors.dropdownBg')};\n    }\n  }\n  .Dropdown-arrow {\n    border-color: black transparent transparent;\n    top: 0.8em;\n    right: 0.5em;\n  }\n`\n\nconst CustomDropdown = ({\n  isMobile,\n  options,\n  onChange,\n  onBlur,\n  value,\n  name,\n  placeholder,\n  disabled,\n  ...props\n}) => {\n  return (\n    <Box {...props}>\n      <StyledDropdown\n        onChange={onChange}\n        options={[{ label: '全部', value: '' }].concat(options.map(value => ({ value, label: value })))}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </Box>\n  );\n};\n\nCustomDropdown.defaultProps = {\n  placeholder: '請選擇',\n  onChange: () => {}\n}\n\nexport default withResponsive(CustomDropdown);\n","import { connect } from 'react-redux';\r\n\r\nexport default (WrappedComp) => connect((state) => {\r\n  const browser = state.get('browser');\r\n  return {\r\n    browser,\r\n    isMobile: browser.lessThan.md,\r\n  };\r\n})(WrappedComp);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from './Box';\r\n\r\nconst Circle = ({ children, border, borderColor, bg, is, ...props }) => (\r\n  <Box {...props}>\r\n    <Box position=\"relative\" pt=\"100%\">\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"0\"\r\n        left=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        width={1}\r\n        borderRadius=\"50%\"\r\n        border={border}\r\n        borderColor={borderColor}\r\n        bg={bg}\r\n        is={is}\r\n      >\r\n        <Box\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          transform=\"translate(-50%, -50%)\"\r\n          position=\"absolute\"\r\n          lineHeight=\"0\"\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCircle.propTypes = {\r\n  children: PropTypes.node,\r\n  border: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bg: PropTypes.string,\r\n  is: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n  ]),\r\n};\r\n\r\nCircle.displayName = 'Circle';\r\n\r\nexport default Circle;\r\n","import React from 'react';\nimport Modal from 'react-modal';\nimport merge from 'lodash/merge'\nimport { IoIosClose } from \"react-icons/io\";\n\nimport Box from './Box'\nimport Flex from './Flex'\nimport Text from './Text'\nimport Button from './Button'\nimport Circle from './Circle'\nimport theme from './ThemeProvider/theme'\n\nconst defaultStyles = {\n  overlay: {\n    zIndex: theme.zOrder[3],\n    backgroundColor: 'rgba(0,0,0,0.7)'\n  },\n  content: {\n    width: '66%',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    borderRadius: '1em',\n    border: 'none',\n    padding: '0',\n    backgroundColor: 'rgba(255,255,255,0.9)',\n    overflow: 'unset',\n  }\n};\n\nModal.setAppElement('#___gatsby')\n\nexport default ({ children, border, borderRadius, customStyles, title, ...props }) => (\n  <Modal\n    style={merge({}, defaultStyles, { content: customStyles})}\n    {...props}\n  >\n    <Box py=\"1.5em\">\n      <Flex justifyContent=\"space-between\" mx=\"2em\" pb=\"1em\" borderBottom=\"1px solid\" borderColor=\"darkBlue\" alignItems=\"center\">\n        <Text fontWeight=\"bold\" letterSpacing=\"0.25em\" fontSize=\"1.25em\">{title}</Text>\n        <Circle width=\"2em\" is={(p) => <Button borderRadius=\"50%\" px=\"0\" py=\"0\" {...p} />} onClick={props.onRequestClose}>\n          <IoIosClose size=\"2em\" />\n        </Circle>\n      </Flex>\n      <Box m=\"2em\" position=\"relative\">\n        {children}\n      </Box>\n    </Box>\n  </Modal>\n)\n","import React, { PureComponent, Fragment, createElement } from 'react';\n\nimport Button from './Button'\nimport Modal from './Modal'\n\nclass ModalButton extends PureComponent {\n  static defaultProps = {\n    is: Button,\n  }\n\n  state = {}\n\n  openModal = () => this.setState({ open: true })\n  closeModal = () => this.setState({ open: false })\n\n  render() {\n    const { is, label, title, children, ...props } = this.props\n    const { open } = this.state\n    return (\n      <Fragment>\n        {createElement(is, {\n          onClick: this.openModal,\n          ...props\n        }, label)}\n        <Modal isOpen={open} onRequestClose={this.closeModal} title={title}>\n          {children}\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default ModalButton;\n","import conformsTo from 'lodash/conformsTo';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isObject from 'lodash/isObject';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    injectedReducers: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(src/utils...) injectors: Expected a valid redux store'\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../stores/reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function'\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => (WrappedComponent) => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n    static contextType = ReactReduxContext;\r\n    static displayName = `withReducer(${(WrappedComponent.displayName || WrappedComponent.name || 'Component')})`;\r\n\r\n    componentWillMount() {\r\n      const { injectReducer } = this.injectors;\r\n\r\n      injectReducer(key, reducer);\r\n    }\r\n\r\n    injectors = getInjectors(this.context.store)\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n","import React, { PureComponent, createElement } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { actionTypes, requestStatuses, resourceReducer } from 'redux-resource';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport isNumber from 'lodash/isNumber';\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport injectReducer from '../../utils/injectReducer';\n\nexport default (key, params) => {\n  const ids = (isArray(params) || isNumber(params)) ? params : '';\n  const listMode = !ids;\n  const resources = isArray(ids) ? ids : [ids];\n  const SIG = `_LAW.${md5(`${key}${ids}${params ? JSON.stringify(params) : ''}`)}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      // shouldComponentUpdate(nextProps) {\n      //   return get(this.props, [key, 'resources']) !== get(nextProps, [key, 'resources'])\n      // }\n\n      request = (skip, requestParams = params) => {\n        if (this.props[key]) {\n          if (!this.checkIsPending()) {\n            if (skip || !this.checkIsDone()) {\n              this.props.dispatch({\n                type: actionTypes.READ_RESOURCES_PENDING,\n                resourceType: key,\n                resources: listMode ? undefined : resources,\n                requestKey: listMode && `list${JSON.stringify(params)}`,\n                requestParams,\n              });\n            }\n          }\n        } else {\n          setTimeout(this.request, 100)\n        }\n      };\n\n      resync = () => this.request(true);\n\n      updateParams = (params) => this.request(true, params);\n\n      checkStatus = status => {\n        if (listMode) {\n          return (\n            get(this.props, [\n              key,\n              'requests',\n              'list',\n              'status',\n            ]) === status\n          );\n        }\n        return (\n          get(this.props, [\n            key,\n            'meta',\n            resources,\n            'readStatus'\n          ]) === status\n        );\n      };\n\n      checkIsPending = () => this.checkStatus(requestStatuses.PENDING);\n\n      checkIsDone = () => this.checkStatus(requestStatuses.SUCCEEDED) || this.checkStatus(requestStatuses.FAILED);\n\n      render() {\n        const data = get(this.props, [key, 'resources']);\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...this.props,\n            [key]: data,\n            updateParams: this.updateParams,\n            // resync: this.resync,\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      [key]: state.get(key),\n    });\n\n    const withReducer = injectReducer({\n      key: key,\n      reducer: resourceReducer(key),\n    });\n\n    const comp = compose(\n      withReducer,\n      connect(mapStateToProps),\n    )(WithData)\n    if (typeof window !== 'undefined') window[SIG] = comp\n\n    return comp\n  };\n}\n","import React, { PureComponent, createElement } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport size from 'lodash/size';\nimport md5 from 'blueimp-md5'\n\nimport Text from '../../components/Text';\nimport { getData } from './reducer'\n\nimport { STATUS_LOADED, STATUS_LOADING, STATUS_ERROR } from './constants'\n\nexport default (key) => {\n  const SIG = `_LAW.state.${md5(key)}`\n\n  return SubComp => {\n    if (!key) return () => null;\n    if (typeof window !== 'undefined' && window[SIG]) return window[SIG];\n\n    class WithData extends PureComponent {\n      state = {}\n\n      componentDidMount() {\n        setTimeout(this.request);\n      }\n\n      request = (skip) => {\n        if (!this.checkIsPending()) {\n          if (skip || !this.checkIsDone()) {\n            this.props.getData({ key })\n          }\n        }\n      };\n\n      checkIsPending = () => this.props.status === STATUS_LOADING\n\n      checkIsDone = () => this.props.status === STATUS_LOADED || this.props.status === STATUS_ERROR\n\n      render() {\n        const { data, status, ...props } = this.props\n        let content = <Text textAlign=\"center\" my=\"2em\">Loading...</Text>;\n        if (size(data)) {\n          content = createElement(SubComp, {\n            ...props,\n            [key]: data,\n            resync: () => this.request(true),\n            // isLoading: this.checkIsPending(),\n          });\n        }\n        return content\n      }\n    }\n\n    const mapStateToProps = state => ({\n      data: state.getIn(['api', key, 'data']),\n      status: state.getIn(['api', key, 'status']),\n    })\n\n    const mapDispatchToProps = dispatch => bindActionCreators({\n      getData,\n    }, dispatch)\n    return connect(mapStateToProps, mapDispatchToProps)(WithData)\n  };\n}\n","import React, { PureComponent } from 'react';\nimport Measure from 'react-measure'\nimport debounce from 'lodash/debounce'\n\nimport Box from '../Box'\n\nclass ChartBase extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleResize = debounce(this.handleResize, 200)\n  }\n\n  state = {\n    dimensions: {},\n  }\n\n  handleResize = ({ bounds }) => this.setState({ dimensions: bounds })\n\n  render() {\n    const { children, ratio, ...props } = this.props;\n    const { width, height } = this.state.dimensions;\n    return (\n      <Measure onResize={this.handleResize} bounds>\n        {({ measureRef }) => (\n          <Box position=\"relative\" pt={`${ratio * 100}%`} {...props} ref={measureRef}>\n            {width && height && (\n              <Box\n                is=\"svg\"\n                position=\"absolute\"\n                top=\"0\"\n                left=\"0\"\n                width={width}\n                height={height}\n              >\n                {children({ width, height })}\n              </Box>\n            )}\n          </Box>\n        )}\n      </Measure>\n    );\n  }\n}\n\nChartBase.defaultProps = {\n  ratio: 1 / 3,\n}\n\nexport default ChartBase;\n","import React from 'react';\n\nfunction backwardAutoLineBreak(str, maxLength, fillFront) {\n  if (!maxLength) return [str]\n  const strArr = Array.from(str)\n  if (!fillFront) strArr.reverse()\n  let i = 0\n  const lines = strArr.reduce((lines, st) => {\n    lines[i] = lines[i] || ''\n    if (lines[i].length == maxLength) {\n      i += 1\n      lines[i] = ''\n    }\n    if (fillFront) {\n      lines[i] += st\n    } else {\n      lines[i] = st + lines[i]\n    }\n    return lines\n  }, [])\n  if (!fillFront) {\n    lines.reverse()\n  }\n  if (fillFront) {\n    const { length } = lines\n    if (lines[length - 1].length === 1) {\n      lines[length - 1] = lines[length - 2].substr(lines[length - 2].length - 1) + lines[length - 1]\n      lines[length - 2] = lines[length - 2].substr(0, lines[length - 2].length - 1)\n    }\n  } else {\n    if (lines[0].length === 1) {\n      lines[0] += lines[1][0]\n      lines[1] = lines[1].substr(1)\n    }\n  }\n  return lines\n}\n\nconst LineBreakText = ({\n  x,\n  y,\n  children,\n  fontSize,\n  maxLength,\n  lineHeight,\n  lineBefore,\n  fillFront,\n  bg,\n  em,\n  style,\n  ...props\n}) => {\n  if (typeof children !== 'string') {\n    return (\n      <text\n        x={x}\n        y={y}\n        fontSize={fontSize}\n        style={style}\n        {...props}\n      >\n        {children}\n      </text>\n    );\n  }\n  const lines = backwardAutoLineBreak(children, maxLength, fillFront)\n  const yPos = lines.map((c, i, { length }) => y + lineHeight * fontSize * (lineBefore ? i - length + 1 : i));\n  const texts = lines.map((c, i) => (\n    <text\n      key={i}\n      x={x}\n      y={yPos[i]}\n      fontSize={fontSize}\n        style={style}\n      {...props}\n    >\n      {c}\n    </text>\n  ))\n  return bg ? (() => {\n    const w = maxLength * em\n    const yStart = Math.min(...yPos)\n    const yEnd = Math.max(...yPos)\n    return (\n      <g>\n        <rect\n          width={w}\n          height={yEnd - yStart + 1.75 * em}\n          x={x - w / 2}\n          y={yStart - 1.25 * em}\n          fill={bg}\n          style={style}\n        />\n        {texts}\n      </g>\n    )\n  })() : <g>{texts}</g>;\n};\n\nLineBreakText.defaultProps = {\n  lineHeight: 1.3,\n  y: 0,\n}\n\nexport default LineBreakText;\n","import React from 'react';\nimport { format } from 'd3-format'\nimport get from 'lodash/get'\n\nimport theme from 'components/ThemeProvider/theme'\n\nconst num = format(',')\n\nconst InfoSection = ({\n  xEnd,\n  y,\n  em,\n  main,\n  sub,\n}) => {\n  const mainYStart = y - 0.8 * em\n  const subYStart = y + 1.5 * em\n  const mainValueStart = xEnd - (get(main.unit, 'length', -0.25) + 0.25) * em\n  const mainValueWidth = main.value.toString().length * 1.5 * em\n  const mainLabelStart = mainValueStart - mainValueWidth\n  const subValueStart = xEnd - (get(sub, ['unit', 'length'], -0.25) + 0.25) * em\n  const subValueWidth = get(sub, 'value', '').toString().length * 0.75 * em\n  const subLabelStart = subValueStart - subValueWidth\n  const labelStart = Math.min(subLabelStart, mainLabelStart)\n  return (\n    <g>\n      <line\n        x1={mainLabelStart - get(main.label, 'length') * em}\n        x2={xEnd}\n        y1={y}\n        y2={y}\n        stroke=\"black\"\n        strokeWidth=\"2\"\n      />\n      <g>\n        {main.unit && (\n          <text\n            x={xEnd}\n            y={mainYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {main.unit}\n          </text>\n        )}\n        <text\n          fill={theme.colors.primary}\n          x={mainValueStart}\n          y={mainYStart}\n          textAnchor=\"end\"\n          fontSize={2 * em}\n        >\n          {num(main.value)}\n        </text>\n        <text\n          x={labelStart}\n          y={mainYStart}\n          textAnchor=\"end\"\n          fontSize={em}\n        >\n          {main.label}\n        </text>\n      </g>\n      {sub && (\n        <g>\n          <text\n            x={xEnd}\n            y={subYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {sub.unit}\n          </text>\n          <text\n            x={subValueStart - 0.25 * em}\n            y={subYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n            color={theme.colors.gray}\n          >\n            {num(sub.value)}\n          </text>\n          <text\n            x={labelStart}\n            y={subYStart}\n            textAnchor=\"end\"\n            fontSize={em}\n          >\n            {sub.label}\n          </text>\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default InfoSection;\n","import React, { Fragment, PureComponent, createRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport { Animate, NodeGroup } from 'react-move'\nimport loSortBy from 'lodash/sortBy'\nimport { max } from 'd3-array'\nimport { Bar, Circle } from '@vx/shape';\nimport { scaleLinear, scalePower } from '@vx/scale';\nimport { LinearGradient, RadialGradient } from '@vx/gradient';\nimport { localPoint } from '@vx/event';\nimport { Group } from '@vx/group';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\n\nimport ChartBase from 'components/Charts/ChartBase'\nimport LineBreakText from 'components/Charts/LineBreakText'\nimport theme from 'components/ThemeProvider/theme'\nimport FontSizeContext from 'components/ThemeProvider/FontSizeContext'\n\nimport InfoSection from './InfoSection'\n\nconst emPercent = n => (\n  <Fragment>\n    {Math.round(n * 100)}\n    <tspan fontSize=\"0.7em\">%</tspan>\n  </Fragment>\n)\n\nconst canGoDown = typeof window !== 'undefined' && window.__ID === '00000000'\n\nclass BubbleLine extends PureComponent {\n  static getDerivedStateFromProps({ data }) {\n    return {\n      namedData: data.reduce((nd, d) => {\n        nd[d.id] = d\n        return nd\n      }, {})\n    }\n  }\n\n  state = {}\n\n  wrapper = createRef()\n\n  handleTooltip = ({ event, xScale, data }) => {\n    const { x } = localPoint(event);\n    const index = Math.round(xScale.invert(x))\n    const d = data[index]\n    if (d) {\n      this.setState({ activeId: d.id })\n    } else {\n      this.setState({ activeId: null })\n    }\n  }\n\n  handleClick = () => {\n    const { activeId } = this.state\n    const { lockId, onLock } = this.props\n    if (lockId) {\n      this.setState({ activeId: null }, () => onLock(null))\n    } else {\n      onLock(activeId)\n    }\n  }\n\n  render() {\n    const {\n      data,\n      sortBy,\n      sortOrder,\n      onLock,\n      lockId,\n      ...props\n    } = this.props\n    const { activeId, namedData } = this.state;\n    if (!data || !data.length) return null\n    const sortedData = loSortBy(data, sortBy)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase {...props}>\n            {({ width, height }) => {\n              const rLabelHeight = 2 * em\n              const rMax = height * 0.22\n              const leftLabelWidth = width * 0.075\n              const rightInfoWidth = width * 0.18\n              const xStart = leftLabelWidth + rMax\n              const xEnd = width - rMax - rightInfoWidth\n              const lableY = rLabelHeight + rMax * 2 + em * 3.5\n              const rateY = lableY + em * 3\n              const dollarRateY = rateY + em * 2.5\n\n              const xScale = scaleLinear({\n                domain: [0, data.length - 1],\n                range: [xStart, xEnd]\n              })\n\n              const rScale = scalePower({\n                domain: [0, max(data, d => d.issued)],\n                range: [0, rMax],\n                exponent: 0.5,\n              });\n\n              return (\n                <Fragment>\n                  <LinearGradient from={theme.colors.darkBlue} to={theme.colors.darkerBlue} vertical={false} id=\"dark\" />\n                  <LinearGradient from={theme.colors.orange6} to={theme.colors.orange2} vertical={false} id=\"rate\" />\n                  <RadialGradient from={theme.colors.orange4} to={theme.colors.orange4} toOpacity={0} id=\"radial-trans\" />\n                  <g>\n                    <rect\n                      width={leftLabelWidth}\n                      height={height - rLabelHeight / 2}\n                      x={0}\n                      y={rLabelHeight / 2}\n                      opacity={0.15}\n                      fill=\"url('#dark')\"\n                      rx={em}\n                    />\n                    {[lableY, rateY - 2 * em / 3, dollarRateY - 2 * em / 3].map((y, i) => (\n                      <line\n                        key={i}\n                        x1={em}\n                        x2={leftLabelWidth - em}\n                        y1={y - em * 2 / 3}\n                        y2={y - em * 2 / 3}\n                        stroke={theme.colors.text}\n                        strokeWidth=\"1\"\n                        strokeLinecap=\"round\"\n                      />\n                    ))}\n                    {[\n                      { label: '已開案件量', y: rLabelHeight + rMax - em / 2 },\n                      { label: '局處', y: lableY + em },\n                      { label: '收繳率', y: rateY + em / 3 },\n                      { label: '執行率', y: dollarRateY + em / 3 },\n                    ].map(({ label, y }, i) => (\n                      <LineBreakText\n                        key={i}\n                        x={leftLabelWidth / 2}\n                        y={y}\n                        textAnchor=\"middle\"\n                        fontSize={1.25 * em}\n                        fontWeight=\"bold\"\n                        maxLength={3}\n                        letterSpacing=\"2\"\n                      >\n                        {label}\n                      </LineBreakText>\n                    ))}\n                  </g>\n                  <Animate\n                    start={{\n                      opacity: 1,\n                    }}\n                    update={{\n                      opacity: [(activeId || lockId) ? 0.1 : 1],\n                      timing: { duration: 250 }\n                    }}\n                  >\n                    {state => (\n                      <line\n                        x1={xStart}\n                        y1={rLabelHeight + rMax}\n                        x2={width}\n                        y2={rLabelHeight + rMax}\n                        stroke={theme.colors.lightGray}\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        {...state}\n                      />\n                    )}\n                  </Animate>\n                  <rect\n                    width={xEnd - xStart + rMax}\n                    height={2 * em}\n                    fill=\"url('#rate')\"\n                    x={xStart - rMax / 2}\n                    y={rateY - em}\n                    rx={em}\n                  />\n                  {/* <rect\n                  width={xEnd - xStart + rMax}\n                  height={2 * em}\n                  fill=\"url('#rate')\"\n                  x={xStart - rMax / 2}\n                  y={dollarRateY - em}\n                  rx={em}\n                /> */}\n                  <Bar\n                    x={0}\n                    y={0}\n                    width={width}\n                    height={height}\n                    fill=\"transparent\"\n                    data={data}\n                    onTouchStart={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onTouchMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseMove={event =>\n                      this.handleTooltip({\n                        event,\n                        xScale,\n                        data: sortedData,\n                      })\n                    }\n                    onMouseLeave={() => this.setState({ activeId: null })}\n                    onClick={this.handleClick}\n                  />\n                  <g ref={this.wrapper}>\n                    <NodeGroup\n                      // must make react-move think data had been updated, so we inject width and height here\n                      data={sortedData.map(d => ({ ...d, width, height }))}\n                      keyAccessor={d => d.label}\n                      start={(d, i) => ({\n                        cx: xScale(i),\n                        r: 0,\n                        opacity: 0.5,\n                        otherOpacity: 1,\n                        centerR: 0,\n                      })}\n                      enter={d => ({\n                        r: [rScale(d.issued)],\n                        timing: { duration: 500 },\n                      })}\n                      update={(d, i) => {\n                        let active = true\n                        let centerActive\n                        if (lockId) {\n                          active = lockId === d.id\n                          centerActive = lockId === d.id\n                        } else if (activeId) {\n                          active = activeId === d.id\n                        }\n                        return [\n                          {\n                            cx: [xScale(i)],\n                            r: [rScale(d.issued)],\n                            timing: { duration: 500 },\n                          },\n                          {\n                            opacity: [active ? 0.5 : 0.1],\n                            otherOpacity: [active ? 1 : 0.1],\n                            centerR: [centerActive ? em : 0],\n                            timing: { duration: 250 },\n                          },\n                        ]\n                      }}\n                      leave={() => ({\n                        opacity: [0],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <g>\n                          {nodes.map(({ key, data: d, state: { cx, r, opacity, otherOpacity } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rLabelHeight + rMax}\n                                  r={r}\n                                  fill={theme.colors.orange2}\n                                  opacity={opacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <text\n                                  fill={theme.colors.darkGray}\n                                  x={cx}\n                                  y={rLabelHeight + rMax - r - 0.5 * em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {d.issued}\n                                </text>\n                                <line\n                                  x1={cx}\n                                  x2={cx}\n                                  y1={rLabelHeight + rMax}\n                                  y2={lableY + em}\n                                  stroke={theme.colors.lightGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <LineBreakText\n                                  x={cx}\n                                  y={lableY + em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  maxLength={3}\n                                  lineBefore\n                                  em={em}\n                                  bg=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {d.label}\n                                </LineBreakText>\n                                <text\n                                  x={cx}\n                                  y={rateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  fill=\"white\"\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveRate)}\n                                </text>\n                                <text\n                                  x={cx}\n                                  y={dollarRateY + em / 3}\n                                  textAnchor=\"middle\"\n                                  fontWeight=\"bold\"\n                                  fontSize={em}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                >\n                                  {emPercent(d.receiveDollarRate)}\n                                </text>\n                              </g>\n                            );\n                          })}\n                          {nodes.map(({ key, data: d, state: { cx, otherOpacity, centerR } }) => {\n                            return (\n                              <g key={key}>\n                                <Circle\n                                  cx={cx}\n                                  cy={rMax + rLabelHeight}\n                                  r={rMax / 25}\n                                  fill={theme.colors.darkGray}\n                                  opacity={otherOpacity}\n                                  style={{ pointerEvents: 'none' }}\n                                />\n                                <HoverSensor>\n                                  {({ isHover }) => {\n                                    const cy = rLabelHeight + rMax\n                                    const boxHeight = 2.5 * em\n                                    const boxWidth = 5 * em\n                                    return (\n                                      <g>\n                                        <Circle\n                                          cx={cx}\n                                          cy={cy}\n                                          r={centerR}\n                                          fill=\"url('#radial-trans')\"\n                                          style={canGoDown ? { cursor: 'pointer' } : {}}\n                                          onClick={() => {\n                                            if (canGoDown) {\n                                              window.open(`?bureauId=${d.id}`)\n                                            }\n                                          }}\n                                        />\n                                        {canGoDown && isHover && createPortal((\n                                          <Group top={rLabelHeight + rMax} left={cx + 2 * em}>\n                                            <polygon\n                                              points={[\n                                                [-0.75 * em, 0],\n                                                [0.1 * em, -0.5 * em],\n                                                [0.1 * em, 0.5 * em]\n                                              ].map(p => p.join()).join(' ')}\n                                              fill={theme.colors.orange3}\n                                            />\n                                            <rect\n                                              x={0}\n                                              y={-boxHeight / 2}\n                                              width={boxWidth}\n                                              height={boxHeight}\n                                              fill={theme.colors.orange3}\n                                              rx={0.75 * em}\n                                            />\n                                            <text\n                                              fontSize={em}\n                                              fill=\"white\"\n                                              x={boxWidth / 2}\n                                              y={0.3*em}\n                                              textAnchor=\"middle\"\n                                            >前往局處</text>\n                                          </Group>\n                                        ), this.wrapper.current)}\n                                      </g>\n                                    )\n                                  }}\n                                </HoverSensor>\n                              </g>\n                            );\n                          })}\n                        </g>\n                      )}\n                    </NodeGroup>\n                  </g>\n                  <InfoSection\n                    xEnd={width}\n                    y={rLabelHeight + 2 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].issued : data.reduce((sum, d) => sum + d.issued, 0),\n                      label: '已開案量',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].issuedDollar : data.reduce((sum, d) => sum + d.issuedDollar, 0),\n                      label: '案件金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    xEnd={width}\n                    y={rLabelHeight + 9.5 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].received : data.reduce((sum, d) => sum + d.received, 0),\n                      label: '收繳案件',\n                      unit: '件',\n                    }}\n                    sub={{\n                      value: lockId ? namedData[lockId].receivedDollar : data.reduce((sum, d) => sum + d.receivedDollar, 0),\n                      label: '收繳金額',\n                      unit: '元',\n                    }}\n                  />\n                  <InfoSection\n                    xEnd={width}\n                    y={rLabelHeight + 18 * em}\n                    em={em}\n                    main={{\n                      value: lockId ? namedData[lockId].canceled : data.reduce((sum, d) => sum + d.canceled, 0),\n                      label: '撤銷案件量',\n                      unit: '件',\n                    }}\n                  />\n                </Fragment>\n              );\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    )\n  }\n}\n\nexport default BubbleLine;\n","import React, { Component, createRef } from 'react';\nimport TWEEN from '@tweenjs/tween.js';\nimport { SVGPathData, encodeSVGPath } from 'svg-pathdata';\nimport pickBy from 'lodash/pickBy';\nimport isNumber from 'lodash/isNumber';\nimport merge from 'lodash/merge';\nimport mapValues from 'lodash/mapValues';\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\tTWEEN.update();\n}\n\nclass TweenShape extends Component {\n  static defaultProps = {\n    duration: 500,\n  }\n\n  constructor(props) {\n    super(props);\n    const { d } = props;\n    this.prevParsed = new SVGPathData(d).toAbs().commands;\n    this.tick = [];\n    animate();\n  }\n\n  shouldComponentUpdate({ d }) {\n    if (d !== this.props.d) this.updatePath(d);\n    return false;\n  }\n\n  componentWillUnmount() {\n    if (this.tweens) {\n      this.tweens.forEach((tween) => tween.stop());\n    }\n  }\n\n  pathRef = createRef()\n\n  updatePath = (d) => {\n    this.parsed = new SVGPathData(d).toAbs().commands;\n    this.tweens = this.parsed.map((to, index) => {\n      const from = this.prevParsed[index];\n      const toValues = pickBy(to, isNumber);\n      const tween = new TWEEN.Tween(from || mapValues(toValues, (v, k) => k === 'type' ? v : 0))\n        .to(toValues, this.props.duration)\n        .easing(TWEEN.Easing.Quadratic.InOut)\n        .onUpdate(this.handleUpdate(index))\n      tween.start();\n      return tween;\n    });\n  }\n\n  handleUpdate = (index) => (value) => {\n    this.prevParsed[index] = merge(this.prevParsed[index] || {}, value);\n    this.tick[index] = true;\n    if (this.tick.length === this.parsed.length && this.tick.every(Boolean)) {\n      this.doUpdatePath();\n    }\n  }\n\n  doUpdatePath = () => {\n    if (this.pathRef.current) {\n      this.pathRef.current.setAttribute('d', encodeSVGPath(this.prevParsed));\n    }\n    this.tick.fill(null);\n  }\n\n  render() {\n    const { duration, ...props } = this.props\n    return (\n      <path ref={this.pathRef} {...props} />\n    );\n  }\n}\n\nexport default TweenShape;\n\n","import React, { Fragment, PureComponent } from 'react';\nimport { Group } from '@vx/group';\nimport { Pie } from '@vx/shape';\nimport { scaleBand } from '@vx/scale';\nimport { HoverSensor } from 'libreact/lib/HoverSensor';\nimport { format } from 'd3-format'\nimport groupBy from 'lodash/groupBy'\nimport reduce from 'lodash/reduce'\nimport range from 'lodash/range'\nimport mapValues from 'lodash/mapValues'\n\nimport FontSizeContext from 'components/ThemeProvider/FontSizeContext'\nimport theme from 'components/ThemeProvider/theme'\n\nimport ChartBase from 'components/Charts/ChartBase'\nimport TweenShape from 'components/Charts/TweenShape'\n\nconst p = format('.0%')\n\nconst calcSide = (centroid, index) => {\n  return {\n    side: Math.sign(centroid[0]),\n    distanceX: Math.abs(centroid[0]),\n    distanceY: centroid[1],\n    index,\n  }\n}\n\nclass TypeDonut extends PureComponent {\n  static contextType = FontSizeContext\n\n  static defaultProps = {\n    onLegendClick: () => {}\n  }\n\n  static getDerivedStateFromProps({ data, legends, valueGetter }) {\n    return {\n      totalVaue: data.reduce((sum, d) => sum + valueGetter(d), 0),\n      dataLength: data.length,\n      labelLength: Math.floor(data.length / 2) + 1,\n      getColorByName: legends.reduce((cn, l) => {\n        cn[l.label] = l.color\n        return cn\n      }, {}),\n      getIndexByName: legends.reduce((cn, l, i) => {\n        cn[l.label] = i\n        return cn\n      }, {}),\n    }\n  }\n\n  state = {}\n\n  outerShapes = []\n\n  handleOuterShape = (i, shape) => {\n    this.outerShapes[i] = shape\n  }\n\n  render() {\n    const {\n      data,\n      legends,\n      onLegendClick,\n      activeLegend,\n      valueGetter,\n      outerCircle,\n      showLegend,\n      showLabel,\n      showPercentage,\n      ...props\n    } = this.props;\n    const {\n      totalVaue,\n      dataLength,\n      labelLength,\n      getColorByName,\n      getIndexByName,\n    } = this.state;\n    const { em } = this.context\n    return (\n      <ChartBase {...props}>\n        {({ width, height }) => {\n          const donutR = height * 0.45 - (showLabel ? 8 * em : 2 * em);\n          const legendBottom = height - 4 * em\n          return (\n            <Fragment>\n              {showLegend && (\n                <g>\n                  {legends.map((legend, i) => (\n                    <Group\n                      key={i}\n                      left={em}\n                      top={legendBottom - (dataLength - 1 - i) * em * 1.75}\n                      onClick={() => onLegendClick(legend.label === activeLegend ? null : legend.label)}\n                      opacity={!activeLegend || legend.label === activeLegend ? 1 : 0.3}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <circle cx={em / 2} cy={-em * 0.3} r={em / 2} fill={legend.color} />\n                      <text x={1.75 * em} fill=\"white\" fontSize={em}>{legend.label}</text>\n                    </Group>\n                  ))}\n                </g>\n              )}\n              <Group top={height / 2} left={width / 2 + (showLegend ? 5 * em : 0)}>\n                {outerCircle && (\n                  <Fragment>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.05}\n                      innerRadius={donutR * 0.4}\n                      padAngle={0}\n                      pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                    >\n                      {pie => pie.arcs.map((arc, i) => {\n                        const d = pie.path(arc)\n                        return (\n                          <g key={`outer-${arc.data.name}-${i}`}>\n                            <path d={d} fill=\"transparent\" ref={() => this.handleOuterShape(i, d)} />\n                          </g>\n                        )\n                      })}\n                    </Pie>\n                    <Pie\n                      data={data}\n                      pieValue={valueGetter}\n                      outerRadius={donutR * 1.1}\n                      innerRadius={donutR * 0.3}\n                      padAngle={0}\n                    >\n                      {pie => pie.arcs.map((arc, i) => (\n                        <g key={`bg-${arc.data.name}-${i}`}>\n                          <path d={pie.path(arc)} fill=\"white\" opacity=\"0.2\" />\n                        </g>\n                      ))}\n                    </Pie>\n                  </Fragment>\n                )}\n                <Pie\n                  data={data}\n                  pieValue={valueGetter}\n                  outerRadius={donutR}\n                  innerRadius={donutR * 0.4}\n                  padAngle={0}\n                  pieSort={(a, b) => getIndexByName[a.name] - getIndexByName[b.name]}\n                >\n                  {pie => {\n                    let sideOrders\n                    let scaleLabelY\n                    if (showLabel) {\n                      const sides = groupBy(pie.arcs.map((arc, i) => calcSide(pie.path.centroid(arc), i)), 'side')\n                      const sideGroups = reduce(sides, (so, s, i) => {\n                        let ss = so[i] ? s.concat(so[i]) : s\n                        if (s.length > labelLength) {\n                          const sorted = s.sort((a, b) => b.distanceX - a.distanceX)\n                          ss = sorted.slice(0, labelLength)\n                          const otherI = i * -1\n                          so[otherI] = (so[otherI] || []).concat(sorted.slice(labelLength))\n                        }\n                        so[i] = ss\n                        return so\n                      }, {})\n                      scaleLabelY = mapValues(sideGroups, s => scaleBand({\n                        range: [-donutR, donutR],\n                        domain: range(0, s.length),\n                      }))\n                      sideOrders = reduce(sideGroups, (so, s) => {\n                        const sorted = s.sort((a, b) => a.distanceY - b.distanceY)\n                        sorted.forEach((d, index) => {\n                          so[d.index] = { side: d.side, index }\n                        })\n                        return so\n                      }, [])\n                    }\n                    return pie.arcs.map((arc, i) => {\n                      const [centroidX, centroidY] = pie.path.centroid(arc);\n                      const { startAngle, endAngle } = arc;\n                      const hasSpaceForLabel = endAngle - startAngle >= 0.1;\n                      const value = valueGetter(arc.data)\n                      return (\n                        <Fragment key={`inner-${arc.data.name}-${i}`}>\n                          <HoverSensor>\n                            {({ isHover }) => (\n                              <g>\n                                <TweenShape\n                                  d={((!activeLegend && isHover) || activeLegend === arc.data.name) && this.outerShapes[i] ? this.outerShapes[i] : pie.path(arc)}\n                                  fill={getColorByName[arc.data.name]}\n                                  opacity={!activeLegend || arc.data.name === activeLegend ? 1 : 0.3}\n                                  onClick={() => onLegendClick(arc.data.name === activeLegend ? null : arc.data.name)}\n                                  duration={200}\n                                />\n                                {hasSpaceForLabel && (\n                                  <text\n                                    fill=\"white\"\n                                    x={centroidX}\n                                    y={centroidY}\n                                    dy=\".33em\"\n                                    fontSize={em}\n                                    textAnchor=\"middle\"\n                                  >\n                                    {showPercentage ? p(value / totalVaue) : value}\n                                  </text>\n                                )}\n\n                              </g>\n                            )}\n                          </HoverSensor>\n                          {showLabel && (() => {\n                            const side = sideOrders[i]\n                            const scale = scaleLabelY[side.side]\n                            const sign = side.side\n                            const left = (donutR + 8 * em)* sign\n                            const top = scale(side.index) + scale.bandwidth() / 2 - em / 2\n                            const centX = centroidX - left + 2 * em * sign\n                            const centY = centroidY - top\n                            const breakX = centX + Math.abs(centY) * sign\n                            return (\n                              <Fragment>\n                                <Group\n                                  left={left}\n                                  top={top}\n                                >\n                                  <line\n                                    x1={0}\n                                    x2={breakX}\n                                    y1={0}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <line\n                                    x1={centX}\n                                    y1={centY}\n                                    x2={breakX}\n                                    y2={0}\n                                    stroke=\"black\"\n                                  />\n                                  <text\n                                    y={1.5 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={em}\n                                    fontWeight=\"bold\"\n                                  >{arc.data.name}</text>\n                                  <text\n                                    y={-0.75 * em}\n                                    textAnchor={sign > 0 ? 'end' : 'start'}\n                                    fontSize={1.5 * em}\n                                    fill={theme.colors.primary}\n                                    fontWeight=\"bold\"\n                                  >{valueGetter(arc.data)}</text>\n                                </Group>\n                              </Fragment>\n                            )\n                          })()}\n                        </Fragment>\n                      );\n                    });\n                  }}\n                </Pie>\n              </Group>\n            </Fragment>\n          )\n        }}\n      </ChartBase>\n    );\n  }\n}\n\nexport default TypeDonut;\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleLinear } from '@vx/scale';\nimport { Animate } from 'react-move'\nimport { format } from 'd3-format'\n\nimport FontSizeContext from 'components/ThemeProvider/FontSizeContext'\n\nimport ChartBase from 'components/Charts/ChartBase'\n\nconst pd = format('.0%')\n\nconst PercentBars = ({\n  data,\n  legends,\n  onLegendClick,\n  activeLegend,\n  ...props\n}) => {\n  const dataByKey = data.reduce((dk, d) => {\n    dk[d.name] = d.received / d.issued;\n    return dk\n  }, {})\n  const legendsLength = Math.max(...legends.map(l => l.label.length))\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width }) => {\n            const yStart = 6 * em\n            const xScale = scaleLinear({\n              range: [0, width - 3 * em - legendsLength * em * 1.25],\n              domain: [0, 1],\n            });\n            return (\n              <Group top={yStart}>\n                {legends.map(({ label, color }, i) => {\n                  const handleClick = () => onLegendClick(label === activeLegend ? null : label)\n                  return (\n                    <Group\n                      top={i * em * 2.5}\n                      opacity={!activeLegend || activeLegend === label ? 1 : 0.3}\n                      key={label + i}\n                    >\n                      <text\n                        fill=\"white\"\n                        fontSize={em}\n                        onClick={handleClick}\n                        style={{ cursor: 'pointer' }}\n                      >\n                        {label}\n                      </text>\n                      <rect\n                        x={legendsLength * em * 1.25}\n                        y={-1.25 * em}\n                        width={xScale(1)}\n                        height={1.5 * em}\n                        fill=\"white\"\n                        opacity=\"0.15\"\n                      />\n                      <Animate\n                        start={{ width: 0 }}\n                        enter={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                        update={{\n                          width: [xScale(dataByKey[label])],\n                          timing: { duration: 500 },\n                        }}\n                      >\n                        {(state) => (\n                          <Fragment>\n                            <rect\n                              x={legendsLength * em * 1.25}\n                              y={-1.25 * em}\n                              height={1.5 * em}\n                              {...state}\n                              fill={color}\n                              onClick={handleClick}\n                            />\n                            <text\n                              x={legendsLength * em * 1.25 + state.width + 0.5 * em}\n                              y=\"-.3em\"\n                              fill=\"white\"\n                              fontSize={em * 0.8}\n                            >\n                              {pd(dataByKey[label])}\n                            </text>\n                          </Fragment>\n                        )}\n                      </Animate>\n                    </Group>\n                  )\n                })}\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default PercentBars;\n","import React, { Fragment, PureComponent, createElement } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleLinear } from '@vx/scale';\nimport { Animate } from 'react-move'\nimport sortBy from 'lodash/sortBy'\n\nimport FontSizeContext from 'components/ThemeProvider/FontSizeContext'\nimport theme from 'components/ThemeProvider/theme'\n\nimport ChartBase from 'components/Charts/ChartBase'\nimport LineBreakText from 'components/Charts/LineBreakText'\nimport withLawData from 'services/api/withLawData'\n\nconst labelLength = 15\n\nclass LawTops extends PureComponent {\n  componentDidUpdate(prevProps) {\n    const { year, updateParams, top } = this.props\n    if (prevProps.year !== year) {\n      updateParams({ year, top })\n    }\n  }\n\n  render() {\n    const { hasLine, color, ratio, top, data } = this.props;\n    const sorted = sortBy(data, 'count').slice(0, top)\n    return (\n      <FontSizeContext.Consumer>\n        {({ em }) => (\n          <ChartBase ratio={ratio}>\n            {({ width }) => {\n              const yStart = em * 2.5\n              const xStart = labelLength * em * 1.1;\n              const xScale = scaleLinear({\n                range: [0, width - 3 * em - xStart],\n                domain: [0, Math.max(...sorted.map(d => d.count))],\n              });\n              return (\n                <Fragment>\n                  <Group top={yStart}>\n                    {Array.from(sorted).reverse().map((law, i) => {\n                      return (\n                        <Animate\n                          start={{ width: 0 }}\n                          enter={{\n                            width: [xScale(law.count)],\n                            timing: { duration: 200 },\n                          }}\n                          update={{\n                            width: [xScale(law.count)],\n                            timing: { duration: 200 },\n                          }}\n                          key={law.id}\n                        >\n                          {(state) => (\n                            <Group top={i * em * 2.75}>\n                              <LineBreakText\n                                fill={color}\n                                fontSize={em}\n                                maxLength={labelLength}\n                                fillFront\n                              >\n                                {law.name}\n                              </LineBreakText>\n                              <rect\n                                fill={theme.colors.primary}\n                                x={xStart}\n                                y=\"-0.5em\"\n                                width={state.width}\n                                height={1.25 * em}\n                              />\n                              <text\n                                fill={color}\n                                x={xStart + state.width + em * 0.5}\n                                y=\"0.5em\"\n                              >{law.count}</text>\n                            </Group>\n                          )}\n                        </Animate>\n                      )\n                    })}\n                  </Group>\n                  {hasLine && (\n                    <line\n                      x1={xStart}\n                      x2={xStart}\n                      y1={yStart / 2}\n                      y2={yStart / 2 + sorted.length * em * 2.75}\n                      stroke={color}\n                      strokeWidth=\"1.5\"\n                    />\n                  )}\n                </Fragment>\n              )\n            }}\n          </ChartBase>\n        )}\n      </FontSizeContext.Consumer>\n    );\n  }\n}\n\nexport default props => createElement(withLawData({ top: props.top, year: props.year }, props.lockId)(LawTops), props);\n","import { createElement } from 'react'\nimport withData from './withData';\n\nexport default (params, lockId) => (SubComp) => {\n  let key = 'data/bureaus'\n  if (typeof window !== 'undefined' && window.__ID !== '00000000') {\n    key = `${key}/${window.__ID}`\n  }\n  if (lockId) {\n    key = `${key}/${lockId}`\n  }\n  key = `${key}/laws`\n  return withData(key, params)(props => createElement(SubComp, { ...props, data: props[key] }))\n}\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { LinePath, Bar } from '@vx/shape';\nimport range from 'lodash/range'\nimport map from 'lodash/map'\nimport { NodeGroup } from 'react-move'\n\nimport FontSizeContext from 'components/ThemeProvider/FontSizeContext'\nimport theme from 'components/ThemeProvider/theme'\n\nimport ChartBase from 'components/Charts/ChartBase'\nimport TweenShape from 'components/Charts/TweenShape'\n\nconst xValue = d => d.month\nconst yValue = d => d.issued\n\nconst YearChart = ({\n  data,\n  ...props\n}) => {\n  const formattedData = map(data, (d, month) => ({\n    month,\n    ...d,\n    receivedRate: d.received / d.issued,\n  }))\n\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n            const yStart = 2 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em * 13\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(1, 13),\n              paddingInner: 0.3,\n              paddingOuter: 0.3,\n            })\n            const percentYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, 1.3],\n            });\n            const valueYScale = scaleLinear({\n              range: [yHeight, 0],\n              domain: [0, Math.ceil(Math.max(...formattedData.map(yValue)) / 100) * 100],\n            });\n            const barWidth = xScale.bandwidth()\n            return (\n              <Group top={yStart}>\n                <Group left={xStart}>\n                  <Grid\n                    top={0}\n                    left={0}\n                    xScale={xScale}\n                    yScale={percentYScale}\n                    stroke=\"white\"\n                    width={xEnd - xStart}\n                    height={yHeight}\n                    numTicksRows={3}\n                    numTicksColumns={0}\n                    columnLineStyle={{\n                      strokeWidth: 0,\n                    }}\n                  />\n                  <AxisLeft\n                    top={0}\n                    left={0}\n                    scale={percentYScale}\n                    numTicks={3}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      textAnchor: 'end',\n                      fontSize: em * 0.8,\n                      dx: '-0.25em',\n                      dy: '0.25em'\n                    })}\n                    tickFormat={d => Math.round(d * 100)}\n                  />\n                  <AxisBottom\n                    top={yHeight}\n                    left={0}\n                    scale={xScale}\n                    numTicks={12}\n                    stroke=\"white\"\n                    strokeWidth={1.5}\n                    tickStroke=\"none\"\n                    tickFormat={d => `${d}月`}\n                    tickLabelProps={() => ({\n                      fill: 'white',\n                      fontSize: em * 0.8,\n                      textAnchor: 'middle',\n                    })}\n                  />\n                  <Group left={xStart}>\n                    <LinePath\n                      x={dd => xScale(xValue(dd)) - barWidth / 2}\n                      y={dd => valueYScale(yValue(dd))}\n                    >\n                      {({ path }) => (\n                        <TweenShape\n                          d={path(formattedData)}\n                          stroke={theme.colors.lightOrange}\n                          strokeWidth=\"1.5\"\n                          fill=\"transparent\"\n                          duration={500}\n                        />\n                      )}\n                    </LinePath>\n                    <NodeGroup\n                      data={formattedData}\n                      keyAccessor={xValue}\n                      start={d => ({\n                        xPos: xScale(xValue(d)),\n                        barHeight: 0,\n                        dotY: yHeight,\n                      })}\n                      enter={d => ({\n                        barHeight: [yHeight - percentYScale(d.receivedRate)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                      update={d => ({\n                        xPos: [xScale(xValue(d))],\n                        barHeight: [yHeight - percentYScale(d.receivedRate)],\n                        dotY: [valueYScale(yValue(d))],\n                        timing: { duration: 500 },\n                      })}\n                    >\n                      {nodes => (\n                        <Fragment>\n                          {nodes.map(({ key, data: d, state: { xPos, barHeight, dotY } }) => {\n                            const barY = yHeight - barHeight;\n                            const dotX = xPos - barWidth / 2\n                            return (\n                              <Fragment key={key}>\n                                <Bar\n                                  x={xPos - barWidth}\n                                  y={barY}\n                                  width={barWidth}\n                                  height={barHeight}\n                                  fill={theme.colors.lightOrange}\n                                  opacity={0.3}\n                                />\n                                <circle\n                                  cx={dotX}\n                                  cy={dotY}\n                                  r={em / 3}\n                                  fill={theme.colors.spectrum[3]}\n                                />\n                                <text\n                                  x={dotX}\n                                  y={dotY - em}\n                                  textAnchor=\"middle\"\n                                  fontSize={em}\n                                  fill={theme.colors.lightOrange}\n                                >\n                                  {yValue(d)}\n                                </text>\n                              </Fragment>\n                            )\n                          })}\n                        </Fragment>\n                      )}\n                    </NodeGroup>\n                  </Group>\n                </Group>\n                <Group top={yHeight / 2 - em} left={xEnd + 5 * em}>\n                  <Group>\n                    <text>案件量</text>\n                    <line\n                      x1={4 * em}\n                      y1={-0.5 * em}\n                      x2={7 * em}\n                      y2={-0.5 * em}\n                      stroke={theme.colors.lightOrange}\n                      strokeWidth=\"1.5\"\n                    />\n                  </Group>\n                  <Group top={2.5 * em}>\n                    <text>收繳率</text>\n                    <rect\n                      x={4 * em}\n                      y={-1 * em}\n                      width={3 * em}\n                      height={em}\n                      fill={theme.colors.lightOrange}\n                      opacity={0.3}\n                    />\n                  </Group>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default YearChart;\n","import React, { PureComponent, createElement } from 'react';\nimport get from 'lodash/get'\n\nimport Text from 'components/Text'\nimport withData from 'services/api/withData'\n\nclass AvgDays extends PureComponent {\n  componentDidUpdate(prevProps, prevState) {\n    const { year, updateParams } = this.props\n    if (prevProps.year !== year) {\n      updateParams({ year })\n    }\n  }\n\n  render() {\n    const { year } = this.props\n    const avgDays = this.props['data/avgTransferDays']\n    return (\n      <Text>繳款入市庫平均日數：{get(avgDays, [year, 'days'])} 天</Text>\n    );\n  }\n}\n\nexport default props => createElement(withData('data/avgTransferDays', { year: props.year })(AvgDays), props);\n","import React, { Fragment, PureComponent, createRef } from 'react';\nimport { createPortal } from 'react-dom'\nimport { Group } from '@vx/group';\nimport { scalePoint, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Grid } from '@vx/grid';\nimport { AreaClosed, Bar, Line } from '@vx/shape';\nimport { withTooltip } from '@vx/tooltip';\nimport { localPoint } from '@vx/event';\nimport range from 'lodash/range'\nimport { NodeGroup } from 'react-move'\nimport styled from 'styled-components';\n\nimport FontSizeContext from 'components/ThemeProvider/FontSizeContext'\nimport theme from 'components/ThemeProvider/theme'\n\nimport Text from 'components/Text'\nimport Box from 'components/Box'\n\nimport ChartBase from 'components/Charts/ChartBase'\nimport TweenShape from 'components/Charts/TweenShape'\n\nconst TooltipBox = styled(Box)`\n  &::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 50%;\n    top: 100%;\n    transform: translateX(-50%);\n    width: 0;\n    height: 0;\n    border-left: 0.5em solid transparent;\n    border-right: 0.5em solid transparent;\n\n    border-top: 0.5em solid ${theme.colors.darkerBlue};\n  }\n`\n\nconst xValue = d => d.index\nconst yValue = d => d.issued\nconst yCancealedValue = d => d.canceled\n\nconst getZeros = n => {\n  if (n < 10) return 0\n  let i = 0\n  while (n / (10 ** i) > 10) {\n    i += 1\n  }\n  return i\n}\n\nclass IssuedChart extends PureComponent {\n  wrapper = createRef()\n\n  handleTooltip = ({ event, data, xScale, yScale, xStart }) => {\n    const { showTooltip } = this.props;\n    const { x } = localPoint(event);\n    const index = Math.round((x - xStart) / xScale.step());\n    const d = data[index];\n    showTooltip({\n      tooltipData: Object.assign({ canceledTop: yScale(yCancealedValue(d)) }, d),\n      tooltipLeft: xScale(xValue(d)) + xStart,\n      tooltipTop: yScale(yValue(d)),\n    });\n  }\n\n  render() {\n    const {\n      data,\n      xTickFormat,\n      showTooltop,\n      hideTooltip,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      events,\n      ...props\n    } = this.props\n    return (\n      <div ref={this.wrapper}>\n        <FontSizeContext.Consumer>\n          {({ em }) => (\n            <Fragment>\n              <ChartBase {...props}>\n                {({ width, height }) => {\n                  const yStart = 6 * em\n                  const yEnd = height - 2 * em\n                  const yHeight = yEnd - yStart\n                  const xStart = em * 3\n                  const xEnd = width - 2 * em\n                  const xScale = scalePoint({\n                    range: [0, xEnd - xStart],\n                    domain: range(0, data.length),\n                    // padding: 0.2,\n                  })\n                  const yMax = Math.max(...data.map(yValue))\n                  const z = getZeros(yMax)\n                  const yScale = scaleLinear({\n                    range: [yHeight, 0],\n                    domain: [0, Math.ceil(yMax / (10 ** z)) * (10 ** z)],\n                  });\n                  return (\n                    <Group>\n                      <Group top={yStart} left={xStart}>\n                        <AreaClosed\n                          x={dd => xScale(xValue(dd))}\n                          y={dd => yScale(yValue(dd))}\n                          yScale={yScale}\n                        >\n                          {({ path }) => (\n                            <TweenShape\n                              d={path(data)}\n                              stroke={theme.colors.lightOrange}\n                              fill={theme.colors.lightOrange}\n                              opacity={0.7}\n                              duration={500}\n                            />\n                          )}\n                        </AreaClosed>\n                        <AreaClosed\n                          x={dd => xScale(xValue(dd))}\n                          y={dd => yScale(yCancealedValue(dd))}\n                          yScale={yScale}\n                        >\n                          {({ path }) => (\n                            <TweenShape\n                              d={path(data)}\n                              stroke={theme.colors.orange}\n                              fill={theme.colors.orange}\n                              duration={500}\n                            />\n                          )}\n                        </AreaClosed>\n                        <Grid\n                          top={0}\n                          left={0}\n                          xScale={xScale}\n                          yScale={yScale}\n                          stroke={theme.colors.gray}\n                          width={xEnd - xStart}\n                          height={yHeight}\n                          numTicksRows={3}\n                          numTicksColumns={0}\n                          columnLineStyle={{\n                            strokeWidth: 0,\n                          }}\n                        />\n                        <AxisLeft\n                          top={0}\n                          left={0}\n                          scale={yScale}\n                          numTicks={3}\n                          stroke=\"black\"\n                          strokeWidth={1.5}\n                          tickStroke=\"none\"\n                          tickLabelProps={() => ({\n                            fill: 'black',\n                            textAnchor: 'end',\n                            fontSize: em * 0.8,\n                            dx: '-0.25em',\n                            dy: '0.25em'\n                          })}\n                        />\n                        <AxisBottom\n                          top={yHeight}\n                          left={0}\n                          scale={xScale}\n                          numTicks={12}\n                          stroke=\"black\"\n                          strokeWidth={1.5}\n                          tickStroke=\"none\"\n                          tickFormat={xTickFormat}\n                          tickLabelProps={() => ({\n                            fill: 'black',\n                            fontSize: em * 0.8,\n                            textAnchor: 'middle',\n                          })}\n                        />\n                        {tooltipData && (\n                          <Line\n                            from={{ x: tooltipLeft - xStart, y: tooltipTop }}\n                            to={{ x: tooltipLeft - xStart, y: yHeight }}\n                            stroke=\"white\"\n                            strokeWidth={2}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                        )}\n                        <NodeGroup\n                          data={data}\n                          keyAccessor={xValue}\n                          start={d => ({\n                            xPos: xScale(xValue(d)),\n                            dotY: yScale(yValue(d)),\n                            dotCanceledY: yScale(yCancealedValue(d)),\n                          })}\n                          enter={d => ({\n                            dotY: [yScale(yValue(d))],\n                            timing: { duration: 500 },\n                          })}\n                          update={d => ({\n                            xPos: [xScale(xValue(d))],\n                            dotY: [yScale(yValue(d))],\n                            dotCanceledY: [yScale(yCancealedValue(d))],\n                            timing: { duration: 500 },\n                          })}\n                        >\n                          {nodes => (\n                            <Fragment>\n                              {nodes.map(({ key, data: d, state: { xPos, dotY, dotCanceledY } }) => {\n                                return (\n                                  <Fragment key={key}>\n                                    <circle\n                                      cx={xPos}\n                                      cy={dotY}\n                                      r={em / 4}\n                                      fill={theme.colors.spectrum[3]}\n                                    />\n                                    <circle\n                                      cx={xPos}\n                                      cy={dotCanceledY}\n                                      r={em / 4}\n                                      fill={theme.colors.spectrum[3]}\n                                    />\n                                  </Fragment>\n                                )\n                              })}\n                            </Fragment>\n                          )}\n                        </NodeGroup>\n                      </Group>\n                      <Group top={1.75 * em} left={xEnd - 16 * em}>\n                        <Group>\n                          <text>案件量</text>\n                          <rect\n                            x={4 * em}\n                            y={-1 * em}\n                            width={3 * em}\n                            height={em}\n                            fill={theme.colors.lightOrange}\n                            opacity={0.7}\n                          />\n                        </Group>\n                        <Group left={8 * em}>\n                          <text>撤銷件數</text>\n                          <rect\n                            x={5.5 * em}\n                            y={-1 * em}\n                            width={3 * em}\n                            height={em}\n                            fill={theme.colors.orange}\n                          />\n                        </Group>\n                      </Group>\n                      <Bar\n                        x={0}\n                        y={0}\n                        width={width}\n                        height={height}\n                        fill=\"transparent\"\n                        data={data}\n                        onTouchStart={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onTouchMove={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onMouseMove={event =>\n                          this.handleTooltip({\n                            event,\n                            xScale,\n                            xStart,\n                            yScale,\n                            data,\n                          })\n                        }\n                        onMouseLeave={() => hideTooltip()}\n                      />\n                      {tooltipData && (\n                        <g>\n                          <circle\n                            cx={tooltipLeft}\n                            cy={tooltipTop + yStart}\n                            r={em / 2}\n                            fill={theme.colors.darkBlue}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                          <circle\n                            cx={tooltipLeft}\n                            cy={tooltipData.canceledTop + yStart}\n                            r={em / 2}\n                            fill={theme.colors.darkBlue}\n                            style={{ pointerEvents: 'none' }}\n                          />\n                        </g>\n                      )}\n                      {tooltipData && createPortal((\n                        <TooltipBox\n                          position=\"absolute\"\n                          top={tooltipTop - 0.5 * em}\n                          left={tooltipLeft}\n                          transform=\"translateX(-50%)\"\n                          p=\"1em\"\n                          bg=\"black\"\n                          color=\"white\"\n                          whiteSpace=\"nowrap\"\n                          gradient=\"darkBlue\"\n                          borderRadius=\"0.5em\"\n                          zIndex={10}\n                        >\n                          <Text>案件量 {yValue(tooltipData)}</Text>\n                          <Text>撤銷數 {yCancealedValue(tooltipData)}</Text>\n                        </TooltipBox>\n                      ), this.wrapper.current)}\n                    </Group>\n                  )\n                }}\n              </ChartBase>\n            </Fragment>\n          )}\n        </FontSizeContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport default withTooltip(IssuedChart);\n","import React, { Fragment } from 'react';\nimport { Group } from '@vx/group';\nimport { scaleBand, scaleLinear } from '@vx/scale';\nimport range from 'lodash/range'\nimport { NodeGroup } from 'react-move'\nimport { format } from 'd3-format'\n\nimport FontSizeContext from 'components/ThemeProvider/FontSizeContext'\nimport theme from 'components/ThemeProvider/theme'\n\nimport ChartBase from 'components/Charts/ChartBase'\n\nconst xValue = d => d.index\nconst yValue = d => d.receivedRate\nconst pd = format('.0%')\n\nconst ReceivedChart = ({\n  data,\n  xTickFormat,\n  ...props\n}) => {\n  return (\n    <FontSizeContext.Consumer>\n      {({ em }) => (\n        <ChartBase {...props}>\n          {({ width, height }) => {\n            const yStart = 6 * em\n            const yEnd = height - 2 * em\n            const yHeight = yEnd - yStart\n            const xStart = em * 3\n            const xEnd = width - em\n            const xScale = scaleBand({\n              range: [0, xEnd - xStart],\n              domain: range(0, data.length),\n              paddingInner: 0.2,\n            })\n            const yScale = scaleLinear({\n              range: [0, yHeight],\n              domain: [0, 1],\n            });\n            return (\n              <Group>\n                <Group top={yStart} left={xStart}>\n                  <NodeGroup\n                    data={data}\n                    keyAccessor={xValue}\n                    start={d => ({\n                      xPos: xScale(xValue(d)),\n                      y: 0,\n                    })}\n                    enter={d => ({\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                    update={d => ({\n                      xPos: [xScale(xValue(d))],\n                      y: [yScale(yValue(d))],\n                      timing: { duration: 500 },\n                    })}\n                  >\n                    {nodes => (\n                      <Fragment>\n                        {nodes.map(({ key, data: d, state: { xPos, y } }) => {\n                          const barWidth = xScale.bandwidth()\n                          return (\n                            <g key={key}>\n                              <rect\n                                fill=\"#e2e2e3\"\n                                x={xPos}\n                                y={0}\n                                width={barWidth}\n                                height={yHeight}\n                              />\n                              <rect\n                                fill={theme.colors.lightOrange}\n                                x={xPos}\n                                y={yHeight - y}\n                                width={barWidth}\n                                height={y}\n                              />\n                              <text\n                                fontSize={1.25 * em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight - y - em}\n                                textAnchor=\"middle\"\n                              >\n                                {pd(yValue(d))}\n                              </text>\n                              <text\n                                fontSize={0.8 * em}\n                                x={xPos + barWidth / 2}\n                                y={yHeight + 1.5 * em}\n                                textAnchor=\"middle\"\n                              >\n                                {xTickFormat(xValue(d))}\n                              </text>\n                            </g>\n                          )\n                        })}\n                      </Fragment>\n                    )}\n                  </NodeGroup>\n                </Group>\n              </Group>\n            )\n          }}\n        </ChartBase>\n      )}\n    </FontSizeContext.Consumer>\n  );\n};\n\nexport default ReceivedChart;\n","import reduce from 'lodash/reduce'\n\nconst keys = [\n  'canceled',\n  'canceledDollar',\n  'issued',\n  'issuedDollar',\n  'received',\n  'receivedDollar',\n]\n\nexport const getBureauTotal = (data, activeType) => data.map(({ label, id, monthData }) => ({\n  label,\n  id,\n  ...keys.reduce((allData, key) => {\n    allData[key] = monthData.reduce((all, d) => all + (activeType ? d.types[activeType].data[key] : d.data[key]), 0)\n    return allData\n  }, {})\n})).map((d) => ({\n  ...d,\n  receiveRate: d.received / d.issued,\n  receiveDollarRate: d.receivedDollar / d.issuedDollar,\n}))\n\nexport const getTypes = (data, lockId) => Object.values(reduce(data, (allTypes, { monthData, id }) => {\n  if (!lockId || lockId === id) {\n    monthData.forEach(m => {\n      m.types.forEach((type) => {\n        allTypes[type.id] = allTypes[type.id] || { id: type.id, name: type.name, issued: 0, received: 0 }\n        allTypes[type.id].issued += type.data.issued\n        allTypes[type.id].received += type.data.received\n      })\n    })\n  }\n  return allTypes\n}, {}))\n\nexport const getMonthData = (data, activeType, lockId) => data.reduce((md, d) => {\n  if (!lockId || lockId === d.id) {\n    d.monthData.forEach((m) => {\n      md[m.month] = md[m.month] || { month: m.month }\n      keys.forEach((key) => {\n        md[m.month][key] = md[m.month][key] || 0\n        md[m.month][key] += (activeType ? m.types[activeType].data[key] : m.data[key])\n      }, {})\n    })\n  }\n  return md\n}, {})\n","import React, { PureComponent, createElement } from 'react';\nimport { compose } from 'redux'\nimport reduce from 'lodash/reduce'\nimport forEach from 'lodash/forEach'\nimport groupBy from 'lodash/groupBy'\n\nimport Box from 'components/Box'\nimport Flex from 'components/Flex'\nimport Toggler from 'components/Toggler'\n\nimport withDataState from 'services/api/withDataState'\n\nimport IssuedChart from './IssuedChart'\nimport ReceivedChart from './ReceivedChart'\n\nimport { getMonthData } from '../dataHandler'\n\nconst parseData = (d, initial) => {\n  const parsed = reduce(d, (va, { month, ...vv }) => {\n    Object.keys(vv).forEach(k => {\n      va[k] = va[k] || 0\n      va[k] += vv[k]\n    })\n    return va\n  }, initial)\n  parsed.receivedRate = parsed.received / parsed.issued\n  return parsed\n}\n\nclass YearByYear extends PureComponent {\n  static getDerivedStateFromProps(nextProps) {\n    const { year } = nextProps\n    return {\n      data: {\n        [year]: nextProps[`data/bureaus?year=${year}`],\n        [year - 1]: nextProps[`data/bureaus?year=${year - 1}`],\n        [year - 2]: nextProps[`data/bureaus?year=${year - 2}`],\n      }\n    }\n  }\n\n  state = {\n    chartType: 0,\n    timeType: 0,\n  }\n\n  handleToggle = key => value => this.setState({ [key]: value })\n\n  render() {\n    const { data, chartType, timeType } = this.state\n    const { year } = this.props\n    const formattedData = reduce(data, (fd, d, year) => {\n      let md = getMonthData(d.data)\n      if (timeType) {\n        md = groupBy(md, (dd) => Math.floor((dd.month - 1) / 3))\n        forEach(md, (v, i) => {\n          fd.push(parseData(v, {\n            year,\n            quarter: +i + 1,\n            index: (year - this.props.year + 2) * 4 + i * 1,\n          }))\n        })\n      } else {\n        fd.push(parseData(md, {\n          year,\n          index: year - this.props.year + 2,\n        }))\n      }\n      return fd\n    }, [])\n    const dataLength = formattedData.length\n    return (\n      <Box position=\"relative\" mx=\"4em\">\n        {createElement(chartType ? ReceivedChart : IssuedChart, {\n          key: `t-${timeType}`,\n          data: formattedData,\n          ratio: 0.66,\n          xTickFormat: d => {\n            if (timeType) {\n              const y = Math.floor(d / 4)\n              return year - (dataLength / 4 - y) + 1 + 'Q' + (d % 4 + 1)\n            }\n            return year - (dataLength - d) + 1\n          },\n        })}\n        <Flex position=\"absolute\" width={1} top=\"0\">\n          <Box>\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['案件數', '收繳率']}\n              activeIndex={chartType}\n              onToggle={this.handleToggle('chartType')}\n            />\n          </Box>\n          <Box ml=\"1em\">\n            <Toggler\n              color=\"darkBlue\"\n              bg=\"rgba(0,0,0,0.2)\"\n              options={['年', '季']}\n              activeIndex={timeType}\n              onToggle={this.handleToggle('timeType')}\n            />\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default (props) => createElement(compose(\n  withDataState(`data/bureaus?year=${props.year}`),\n  withDataState(`data/bureaus?year=${props.year - 1}`),\n  withDataState(`data/bureaus?year=${props.year - 2}`),\n)(YearByYear), props);\n","import React, { PureComponent, createElement } from 'react'\nimport { compose } from 'redux'\nimport map from 'lodash/map'\nimport last from 'lodash/last'\n\nimport Container from 'components/Container'\nimport Box from 'components/Box'\nimport Flex from 'components/Flex'\nimport Text from 'components/Text'\nimport Button from 'components/Button'\nimport YearButton from 'components/YearButton'\nimport Toggler from 'components/Toggler'\nimport Dropdown from 'components/Dropdown';\nimport ModalButton from 'components/ModalButton';\n\nimport theme, { mobileOrDesktop } from 'components/ThemeProvider/theme';\n\nimport withBureauData from 'services/api/withBureauData'\nimport withDataState from 'services/api/withDataState'\n\nimport Layout from '../Layout';\nimport BubbleLine from './BubbleLine'\nimport TypeDonut from './TypeDonut'\nimport PercentBars from './PercentBars'\nimport LawTops from './LawTops'\nimport YearChart from './YearChart'\nimport AvgDays from './AvgDays'\nimport YearByYear from './YearByYear'\n\nimport {\n  getBureauTotal,\n  getMonthData,\n  getTypes,\n} from './dataHandler'\n\nclass IndexPage extends PureComponent {\n  static getDerivedStateFromProps(nexProps) {\n    const { typeList, data } = nexProps\n    const mappedData = map(data, ({ id, name, monthData }) => ({\n      label: name,\n      id,\n      monthData: monthData.map(m => ({\n        ...m,\n        types: m.types.reduce((t, td) => {\n          t[td.name] = td\n          return t\n        },{})\n      }))\n    }))\n    const typeLegends = typeList.map(({ name }, i) => ({\n      label: name,\n      color: theme.colors.spectrum[theme.colors.spectrum.length - 1 - i],\n    }))\n    return { mappedData, typeLegends }\n  }\n\n  state = {\n    sortBy: 'receiveRate',\n    sortOrder: 'asc',\n    chartIndex: 0,\n    lawType: 0,\n    typeLegends: [],\n    year: last(this.props.yearsList),\n  }\n\n  handleTypeFilter = (activeType) => this.setState({ activeType })\n\n  handleChartToggle = chartIndex => this.setState({ chartIndex })\n\n  handleYearChange = year => {\n    const { updateParams } = this.props\n    updateParams({ year })\n    this.setState({ year })\n  }\n\n  setLawType = lawType => this.setState({ lawType })\n\n  setLock = lockId => this.setState({ lockId })\n\n  render() {\n    const { data, typeList, yearsList: years } = this.props\n    const {\n      sortBy,\n      sortOrder,\n      chartIndex,\n      activeType,\n      mappedData,\n      year,\n      lawType,\n      typeLegends,\n      lockId,\n    } = this.state\n\n    const bureauTotal = getBureauTotal(mappedData, activeType)\n    const monthData = getMonthData(mappedData, activeType, lockId)\n    const types = getTypes(data, lockId)\n    return (\n      <Layout>\n        <Box\n          py=\"4em\"\n          backgroundImage={`linear-gradient(#fff 80%, #e0e0e4 100%)`}\n        >\n          <Container>\n            <Flex alignItems=\"center\">\n              <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">案件類別</Text>\n              <Box width=\"12em\" py=\"1em\">\n                <Dropdown\n                  placeholder=\"全部\"\n                  value={activeType}\n                  options={typeList.map(({ name }) => name)}\n                  onChange={({ value }) => this.handleTypeFilter(value)}\n                />\n              </Box>\n            </Flex>\n            <Flex alignItems=\"center\">\n              <Text mr=\"0.75em\" fontSize=\"1.25em\" fontWeight=\"bold\" letterSpacing=\"0.15em\">各局處案件量分析</Text>\n              <YearButton\n                currentYear={year}\n                years={years}\n                onChange={this.handleYearChange}\n              />\n            </Flex>\n            <BubbleLine\n              ratio={1 / 4}\n              data={bureauTotal}\n              sortBy={sortBy}\n              sortOrder={sortOrder}\n              lockId={lockId}\n              onLock={this.setLock}\n            />\n          </Container>\n        </Box>\n        <Box\n          py={mobileOrDesktop(0, '2em')}\n          gradient=\"darkBlue\"\n        >\n          <Container>\n            <Flex borderBottom=\"1px solid\">\n              <Box pl=\"1em\" pr=\"2em\" width={2 / 5} borderRight=\"1px solid\">\n                <Box position=\"relative\">\n                  {createElement(chartIndex ? PercentBars : TypeDonut , Object.assign({\n                    ratio: 0.6,\n                    data: types,\n                    legends: typeLegends,\n                    onLegendClick: this.handleTypeFilter,\n                    activeLegend: activeType,\n                  }, chartIndex ? {} : {\n                    valueGetter: d => d.issued,\n                    outerCircle: true,\n                    showLegend: true,\n                  }))}\n                  <Box position=\"absolute\" top=\"0\" left=\"0\">\n                    <Toggler activeIndex={chartIndex} onToggle={this.handleChartToggle} options={['案件數', '收繳率']} />\n                  </Box>\n                  <Box position=\"absolute\" right=\"0\" bottom=\"0\">\n                    {!chartIndex && (\n                      <ModalButton\n                        is={Button.lightBg}\n                        label=\"查看更多\"\n                        title=\"案件分類分析\"\n                      >\n                        <Box px=\"15%\">\n                          <TypeDonut\n                            ratio={1}\n                            valueGetter={d => d.issued}\n                            data={types}\n                            showPercentage\n                            legends={typeLegends}\n                            showLabel\n                          />\n                        </Box>\n                      </ModalButton>\n                    )}\n                  </Box>\n                </Box>\n              </Box>\n              <Box pl=\"2em\" pr=\"1em\" width={3 / 5}>\n                <Flex pt=\"0.5em\" pb=\"1.25em\" alignItems=\"center\" borderBottom=\"1px solid\">\n                  <Text fontSize=\"1.5em\"><Text.inline letterSpacing=\"0.15em\">違反法條</Text.inline> TOP 5</Text>\n                  <ModalButton\n                    is={Button.lightBg}\n                    label=\"查看更多\"\n                    title=\"違反法條TOP10\"\n                    mx=\"2em\"\n                  >\n                    <Flex alignItems=\"center\">\n                      <Box mx=\"2em\">\n                        <Box my=\"1em\">\n                          <Button active={lawType === 0} onClick={() => this.setLawType(0)}>所有法條分析</Button>\n                        </Box>\n                        <Box my=\"1em\">\n                          <Button active={lawType === 1} onClick={() => this.setLawType(1)}>公安法條分析</Button>\n                        </Box>\n                      </Box>\n                      <Box flex=\"1\" px=\"2em\">\n                        <LawTops key={10} top={10} year={year} color=\"text\" ratio={0.8} lockId={lockId} />\n                      </Box>\n                    </Flex>\n                  </ModalButton>\n                  <Box flex=\"1\" />\n                  <AvgDays year={year} />\n                </Flex>\n                <LawTops key={5} year={year} top={5} hasLine color=\"white\" ratio={0.35} lockId={lockId} />\n              </Box>\n            </Flex>\n            <Flex px=\"5%\" py=\"2em\" alignItems=\"center\">\n              <Box px=\"2em\">\n                <YearButton\n                  justifyContent=\"center\"\n                  darkBg\n                  currentYear={year}\n                  years={years}\n                  onChange={this.handleYearChange}\n                />\n                <Box fontSize=\"1.5em\" letterSpacing=\"0.15em\" my=\"1em\" borderBottom=\"1px solid\" pb=\"0.5rem\">月案件量分析</Box>\n                <Box textAlign=\"center\">\n                    <ModalButton\n                      is={Button.lightBg}\n                      label=\"查看更多\"\n                      title={`${year - 2}-${year}案件量分析`}\n                    >\n                      <YearByYear year={year} />\n                    </ModalButton>\n                </Box>\n              </Box>\n              <Box flex=\"1\">\n                <YearChart ratio={1 / 5} data={monthData} />\n              </Box>\n            </Flex>\n          </Container>\n        </Box>\n      </Layout>\n    )\n  }\n}\n\n\nexport default compose(\n  withDataState('yearsList'),\n  withDataState('typeList'),\n  withBureauData,\n)(IndexPage)\n","import { createElement } from 'react'\nimport withData from './withData';\n\nexport default (SubComp) => {\n  let key = 'data/bureaus'\n  if (typeof window !== 'undefined' && window.__ID !== '00000000') {\n    key = `${key}/${window.__ID}`\n  }\n  return withData(key)(props => createElement(SubComp, { ...props, data: props[key] }))\n}\n","import Page from 'containers/HomePage'\r\n\r\nexport default Page\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql, withPrefix } from 'gatsby'\n\nimport Box from 'components/Box';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            url\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata: { title, description, url } } }) => {\n      return (\n        <Fragment>\n          <Helmet>\n            <html lang=\"zh-Hant-TW\" />\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix('/apple-touch-icon.png')} />\n            <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix('/favicon-32x32.png')} />\n            <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix('/favicon-16x16.png')} />\n            <link rel=\"mask-icon\" color=\"#5bbad\" href={withPrefix('/safari-pinned-tab.svg')} />\n            <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n            <meta name=\"theme-color\" content=\"#ffffff\" />\n            <meta property=\"og:url\" content={url} />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:image\" content={`${url}/fb.png`} />\n          </Helmet>\n          <Box height=\"100vh\" minWidth=\"800px\">\n            {children}\n          </Box>\n        </Fragment>\n      );\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}